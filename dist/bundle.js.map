{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/rng.js","webpack:///./lib/constants.js","webpack:///./src/glyph.ts","webpack:///./node_modules/axios/lib/utils.js","webpack:///./src/helper/deathFunction.ts","webpack:///./src/helper/createDamageBlock.ts","webpack:///./src/components/equipment.ts","webpack:///./src/components/damageBlock.ts","webpack:///./src/helper/qualityGenerator.ts","webpack:///./lib/util.js","webpack:///./src/helper/randint.ts","webpack:///./src/components/skilllist.ts","webpack:///./lib/color.js","webpack:///./src/entity.ts","webpack:///./lib/display/backend.js","webpack:///./src/helper/createItens.ts","webpack:///./src/helper/randFromLevel.ts","webpack:///./src/components/fighter.ts","webpack:///./lib/display/canvas.js","webpack:///./lib/display/hex.js","webpack:///./lib/display/rect.js","webpack:///./lib/display/tile.js","webpack:///./lib/text.js","webpack:///./lib/display/display.js","webpack:///./lib/stringgenerator.js","webpack:///./lib/eventqueue.js","webpack:///./lib/scheduler/scheduler.js","webpack:///./lib/scheduler/index.js","webpack:///./lib/scheduler/simple.js","webpack:///./lib/scheduler/speed.js","webpack:///./lib/scheduler/action.js","webpack:///./lib/fov/fov.js","webpack:///./lib/fov/recursive-shadowcasting.js","webpack:///./lib/fov/index.js","webpack:///./lib/fov/discrete-shadowcasting.js","webpack:///./lib/fov/precise-shadowcasting.js","webpack:///./lib/noise/noise.js","webpack:///./lib/noise/simplex.js","webpack:///./lib/noise/index.js","webpack:///./lib/path/path.js","webpack:///./lib/path/index.js","webpack:///./lib/path/dijkstra.js","webpack:///./lib/path/astar.js","webpack:///./lib/engine.js","webpack:///./lib/lighting.js","webpack:///./lib/index.js","webpack:///./lib/map/map.js","webpack:///./lib/map/dungeon.js","webpack:///./lib/map/features.js","webpack:///./lib/map/digger.js","webpack:///./lib/map/ellermaze.js","webpack:///./lib/map/index.js","webpack:///./lib/map/arena.js","webpack:///./lib/map/uniform.js","webpack:///./lib/map/cellular.js","webpack:///./lib/map/dividedmaze.js","webpack:///./lib/map/iceymaze.js","webpack:///./lib/map/rogue.js","webpack:///./lib/display/term.js","webpack:///./node_modules/process/browser.js","webpack:///./src/tiles.ts","webpack:///./src/content/itens/knife.ts","webpack:///./src/helper/randperc.ts","webpack:///./src/helper/createMonters.ts","webpack:///./src/content/itens/exit.ts","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./src/game.ts","webpack:///./src/screens.ts","webpack:///./src/map.ts","webpack:///./src/content/itens/sword.ts","webpack:///./src/content/itens/spear.ts","webpack:///./src/content/itens/shield.ts","webpack:///./src/content/itens/potion.ts","webpack:///./src/content/itens/firerod.ts","webpack:///./src/content/itens/dagger.ts","webpack:///./src/content/itens/icerod.ts","webpack:///./src/content/itens/crossedsword.ts","webpack:///./src/content/itens/offdagger.ts","webpack:///./src/content/itens/blademail.ts","webpack:///./src/content/monsters/fungi.ts","webpack:///./src/content/monsters/orc.ts","webpack:///./src/content/monsters/troll.ts","webpack:///./src/content/monsters/ranger.ts","webpack:///./src/content/monsters/wyvern.ts","webpack:///./src/content/monsters/dragon.ts","webpack:///./src/content/monsters/crawler.ts","webpack:///./src/content/monsters/dummyTarget.ts","webpack:///./src/settings/monsterProbabilities.ts","webpack:///./src/settings/itemProbabilities.ts","webpack:///./src/helper/createBoss.ts","webpack:///./logo/boss.ts","webpack:///./src/content/bosses/angel.ts","webpack:///./src/components/bossSkills.ts","webpack:///./src/helper/dungeonMaze.ts","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/axios/node_modules/is-buffer/index.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./src/messages.ts","webpack:///./logo/logo.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FRAC","RNG","[object Object]","this","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","max","Math","min","floor","getUniform","mean","stddev","u","v","sqrt","log","array","length","result","clone","slice","index","indexOf","getItem","push","splice","data","total","id","random","part","state","setState","getState","__webpack_exports__","setSeed","Date","now","DEFAULT_WIDTH","DEFAULT_HEIGHT","DIRS","KEYS","4","8","6","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","Glyph","char","background","foreground","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","assignValue","arguments","deepMerge","extend","a","b","thisArg","trim","str","replace","glyph_1","deathFunction","entity","undefined","fighter","deadG","glyph","blocks","render_order","status","damage","expire","entity_1","damageBlock_1","createDamageBlock","creator","x","y","multi","timeout","face","dmg","DamageBlock","attack","_map","getTile","_isWalkable","owner","player","Entity","startCountDown","_entities","Equipment","type","prefix","amount","deathFunction_1","multiplier","counter","interval","setInterval","newColor","map","element","clearInterval","targets","getEntitiesAt","x2","y2","skill","randperc_1","qualityGenerator","item","power_bonus","skill_bonus","defense_bonus","max_cooldown","alpha","randperc","quality","ceil","mod","clamp","capitalize","string","charAt","toUpperCase","substring","format","template","args","match","group1","group2","parts","split","shift","method","toLowerCase","replaced","apply","first","randint","round","createDamageBlock_1","poison_cloud","target","damageMultiplier","nameAtk","poison_shield","hug","punch","smash","windBlow","snipe","dx","dy","wall","abs","flamestrike","bite","firebreath","fromString","add","add_","multiply","multiply_","interpolate","lerp","interpolateHSL","lerpHSL","randomize","rgb2hsl","hsl2rgb","toRGB","toHex","_util_js__WEBPACK_IMPORTED_MODULE_0__","_rng_js__WEBPACK_IMPORTED_MODULE_1__","cached","CACHE","values","parseInt","color1","colors","j","color2","factor","hsl1","hsl2","color","diff","Array","getNormal","g","h","hue2rgb","q","join","padStart","black","navy","darkblue","mediumblue","blue","darkgreen","green","teal","darkcyan","deepskyblue","darkturquoise","mediumspringgreen","lime","springgreen","aqua","cyan","midnightblue","dodgerblue","forestgreen","seagreen","darkslategray","darkslategrey","limegreen","mediumseagreen","turquoise","royalblue","steelblue","darkslateblue","mediumturquoise","indigo","darkolivegreen","cadetblue","cornflowerblue","mediumaquamarine","dimgray","dimgrey","slateblue","olivedrab","slategray","slategrey","lightslategray","lightslategrey","mediumslateblue","lawngreen","chartreuse","aquamarine","maroon","purple","olive","gray","grey","skyblue","lightskyblue","blueviolet","darkred","darkmagenta","saddlebrown","darkseagreen","lightgreen","mediumpurple","darkviolet","palegreen","darkorchid","yellowgreen","sienna","brown","darkgray","darkgrey","lightblue","greenyellow","paleturquoise","lightsteelblue","powderblue","firebrick","darkgoldenrod","mediumorchid","rosybrown","darkkhaki","silver","mediumvioletred","indianred","peru","chocolate","tan","lightgray","lightgrey","palevioletred","thistle","orchid","goldenrod","crimson","gainsboro","plum","burlywood","lightcyan","lavender","darksalmon","violet","palegoldenrod","lightcoral","khaki","aliceblue","honeydew","azure","sandybrown","wheat","beige","whitesmoke","mintcream","ghostwhite","salmon","antiquewhite","linen","lightgoldenrodyellow","oldlace","red","fuchsia","magenta","deeppink","orangered","tomato","hotpink","coral","darkorange","lightsalmon","orange","lightpink","pink","gold","peachpuff","navajowhite","moccasin","bisque","mistyrose","blanchedalmond","papayawhip","lavenderblush","seashell","cornsilk","lemonchiffon","floralwhite","snow","yellow","lightyellow","ivory","white","lib_1","randint_1","createItens_1","size","maxStamina","ai","inventory","stairs","level","equipment","boss","regen","regenMax","lastxp","killedby","stamina","subequipment","cooldown","startMoveCountDown","startAttackCountDown","sight","changeFace","tx","tx2","ty","ty2","getMovableArea","moveerror","nextDir","moveinterval","hp","attackinterval","messageLog","newMessage","drop","CreateDropItem","droppedItem","fullname","max_hp","heal","equipment_skill","source","path","Path","AStar","x1","y1","topology","count","compute","move","targetx","targety","_width","_height","Backend","options","_options","knife_1","sword_1","spear_1","shield_1","potion_1","firerod_1","dagger_1","icerod_1","crossedsword_1","offdagger_1","blademail_1","CreateItem","item_choice","dungeon_level","item_component","upgrades","Potion","Knife","Sword","Spear","Dagger","Firerod","Icerod","CrossedSwords","Shield","Offdagger","Blademail","itemDrop","random_choice_index","chances","sum","reduce","random_chance","running_sum","choice","from_dungeon_level","table","random_choice_from_dict","choice_dict","choices","Fighter","def","atk","xp","base_max_hp","base_defense","base_power","current_exp","nextRank","unspentPoints","rank","bonus","power","hp_bonus","attacker","defend","message","color0","defense","toFixed","takeDamage","getExp","dmgBlock","weaponskillmod","skill_power","canvas_Canvas","backend","super","_ctx","createElement","getContext","cb","requestAnimationFrame","canvas","opts","setOptions","font","fontStyle","fontSize","fontFamily","_updateSize","textAlign","textBaseline","fillStyle","bg","fillRect","width","height","rect","getBoundingClientRect","left","top","_normalizedEventToPosition","hex_Hex","_spacingX","_spacingY","_hexSize","clearBefore","ch","fg","px","transpose","reverse","_fill","chars","concat","fillText","availWidth","availHeight","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","spacing","nodeSize","util","cx","cy","border","ctx","beginPath","moveTo","lineTo","fill","charWidth","xprop","yprop","rect_Rect","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","drawImage","boxWidth","boxHeight","widthFraction","forceSquareRatio","tile_Tile","_colorCanvas","tileWidth","tileHeight","tileColorize","clearRect","fgs","bgs","tile","tileMap","Error","context","globalCompositeOperation","tileSet","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","maxWidth","tokens","tokenize","lineWidth","token","offset","Infinity","lineLength","lastTokenWithSpace","breakInsideToken","arr","pop","nextIndex","breakIndex","lastIndexOf","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","BACKENDS","hex","term","DEFAULT_OPTIONS","constants","layout","display_Display","_data","_dirty","assign","DEBUG","_tick","_backend","schedule","what","draw","ctor","getContainer","computeSize","computeFontSize","e","touches","clientX","clientY","eventToPosition","text","lines","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","clear","_draw","Rect","Hex","Tile","Term","stringgenerator_StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","keys","dataCount","eventCount","_backoff","available","rng","getWeightedValue","EventQueue","_time","_events","_eventTimes","time","_remove","scheduler_Scheduler","_queue","_repeat","_current","getTime","repeat","getEventTime","remove","scheduler","Simple","next","Speed","getSpeed","Action","_defaultDuration","_duration","fov_FOV","lightPassesCallback","_lightPasses","dirs","countFactor","startOffset","OCTANTS","fov","DiscreteShadowcasting","R","callback","A","B","DATA","neighbors","_getCircle","angle","_visibleCoords","v1","v2","PreciseShadowcasting","A1","A2","visibility","SHADOWS","neighborCount","_checkVisibility","index1","edge1","old","index2","edge2","visibleLength","visible","P","P1","P2","RecursiveShadowcasting","_renderOctant","dir","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","startX","startY","row","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Noise","F2","G2","noise","Simplex","gradients","_gradients","permutations","shuffle","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","x0","y0","ii","jj","t0","grad","t1","t2","path_Path","toX","toY","passableCallback","_toX","_toY","_passableCallback","_dirs","Dijkstra","_computed","_todo","_add","fromX","fromY","_compute","prev","_getNeighbors","neighbor","_done","_fromX","_fromY","_distance","f","itemF","Engine","_scheduler","_lock","unlock","actor","lock","act","then","lighting_Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","range","_lights","_reflectivityCache","_fovCache","reset","_fov","lib_color","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","_updateFOV","fovKey","formFactor","key1","vis","Util","Color","Text","text_namespaceObject","map_Map","dungeon_Dungeon","_rooms","_corridors","Feature","features_Room","doorX","doorY","_x1","_y1","_x2","_y2","_doors","addDoor","roomWidth","getUniformInt","roomHeight","isWallCallback","right","bottom","console","canBeDugCallback","digCallback","features_Corridor","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","corridorLength","sx","sy","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","FEATURES","room","corridor","addToList","L","removeFromList","Arena","w","Uniform","roomDugPercentage","timeLimit","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","_fillMap","_generateRooms","_generateCorridors","_generateRoom","createRandom","isValid","cnt","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","start","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","dirIndex","avail","lastBadIndex","points","Cellular","born","survive","probability","newMap","widthStep","widthStart","cur","ncount","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","from","to","local","_tunnelToConnected6","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","space","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","Digger","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","createRandomCenter","prio1","prio2","sort","featureName","feature","createRandomAt","createPriorityWalls","deltas","delta","addDoors","EllerMaze","DividedMaze","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","IceyMaze","regularity","_regularity","done","_randomize","_isFree","Rogue","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","connections","cellx","celly","idx","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","directions","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","aRoom","aDirection","rx","ry","door","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","xpos","ypos","moves","xAbs","yAbs","percent","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","process","_backend_js__WEBPACK_IMPORTED_MODULE_0__","_color_js__WEBPACK_IMPORTED_MODULE_1__","termcolor","rgb","_offset","_cursor","_lastColor","setTimeout","stdout","write","positionToAnsi","colorToAnsi","columns","rows","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","visited","_isDiggable","_blocksLight","walkable","diggable","blockslight","baseTile","visitedTile","fogRGB","equipment_1","qualityGenerator_1","perc","fungi_1","orc_1","troll_1","fighter_1","ranger_1","wyvern_1","dragon_1","crawler_1","dummyTarget_1","CreateMonster","monster_choice","dl","qHp","qAtk","qDef","qExp","fighter_component","ai_component","Fungi","Orc","DummyTarget","Troll","Wyvern","Ranger","Crawler","Dragon","Exit","switchScreen","Screen","playScreen","utils","encode","encodeURIComponent","url","params","paramsSerializer","serializedParams","toISOString","JSON","stringify","hashmarkIndex","__CANCEL__","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","adapter","defaults","XMLHttpRequest","transformRequest","transformResponse","parse","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","common","Accept","settle","buildURL","parseHeaders","isURLSameOrigin","createError","config","Promise","resolve","reject","requestData","requestHeaders","request","auth","username","password","Authorization","btoa","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","onerror","ontimeout","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","enhanceError","code","error","config1","config2","prop","Cancel","index_1","screens_1","messages_1","logo_1","Game","_messageBoxSize","_screenWidth","_screenHeight","timer","blinkLevel","lang","mainmenuOpt","endMessage","iControl","clr","scores","starttime","endtime","_centerX","_centerY","_display","_currentScreen","startScreen","debugScreen","winScreen","loseScreen","scoreScreen","logo","Logo","Display","_inventory","_messaging","Messagelog","messages","menu","getElementById","handleInput","render","onkeydown","keyCode","body","preventDefault","fading","fading2","fading3","out","out2","out3","outf","basefading","drawText","_player","blink","screen","exit","getDisplay","enter","refresh","writeMessages","writeStats","onload","game","init","appendChild","getInventory","getMessaging","map_1","constants_1","tiles_1","maps","dungeonMaze_1","exit_1","createMonters_1","axios_1","createCave","corr","Map","emptyTile","_tiles","generator","default","totalIterations","mapWidth","mapHeight","createDungeon","generateDunMaze","createArena","pause","gametime","post","score","catch","display","inputType","inputData","entityRenderSort","removeExpiredDamage","entities","play","equipStart","docs","line","djb2","substr","hashStringToColor","knife","addEntityToMap","screenWidth","screenHeight","topLeftX","topLeftY","pow","gnd","getItemAt","equip","strike","loop","createStart","newex","dummy","posx","posy","rd","mapType","addBossToMap","newPlayerPositionBlocked","setupFov","xhitbox","yhitbox","letter","climb","usePotion","randFromLevel_1","monsterProbabilities_1","itemProbabilities_1","createBoss_1","moveable","self","max_monsters_per_room","max_items_per_room","number_of_monsters","number_of_items","monster_chances","monsterProbabilities","item_chances","itemProbabilities","tooClose","emptyspace","xts","xexit","yexit","CreateBoss","topleftX","topleftY","FOV","skilllist_1","skills","maxCooldown","seconds","getPlayer","wander","hunt","kite","fungi","orc","troll","wyvern","ranger","crawler","dragon","potion","dagger","sword","spear","firerod","icerod","crossedswords","shield","offdagger","blademail","boss_1","angel_1","skin","Boss","Angel","bossSkills_1","angelMove","angel_ring","angel_tri","ring","ownerx","ownery","slope","image","passo","anteriory","anteriorx","dom","newImagey","newImagex","randomRoom","maxx","maxy","roomsizex","roomsizey","roomx","roomy","sizex","sizey","digHere","here","past","testDirections","nextCandidates","selected","priority","digFront","pathFRONT","digUp","pathGO","db","digBack","ones","roomsInGame","deadEnds","ri","rj","candidates","roomTop","roomRight","roomBot","roomLeft","openWalls","deadlen","removeDeadEnds","Axios","mergeConfig","createInstance","defaultConfig","instance","axios","instanceConfig","CancelToken","isCancel","all","promises","spread","constructor","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","getUri","handlers","use","eject","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","baseURL","reason","fns","normalizedName","isAxiosError","toJSON","description","number","fileName","lineNumber","columnNumber","ignoreDuplicateOf","parsed","originURL","msie","test","userAgent","urlParsingNode","resolveURL","href","setAttribute","protocol","host","search","hostname","port","pathname","location","requestURL","expires","domain","secure","cookie","toGMTString","RegExp","decodeURIComponent","relativeURL","executor","TypeError","resolvePromise","target1","target2","extrainfo","addMessage"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n","const FRAC = 2.3283064365386963e-10;\r\nclass RNG {\r\n    constructor() {\r\n        this._seed = 0;\r\n        this._s0 = 0;\r\n        this._s1 = 0;\r\n        this._s2 = 0;\r\n        this._c = 0;\r\n    }\r\n    getSeed() { return this._seed; }\r\n    setSeed(seed) {\r\n        seed = (seed < 1 ? 1 / seed : seed);\r\n        this._seed = seed;\r\n        this._s0 = (seed >>> 0) * FRAC;\r\n        seed = (seed * 69069 + 1) >>> 0;\r\n        this._s1 = seed * FRAC;\r\n        seed = (seed * 69069 + 1) >>> 0;\r\n        this._s2 = seed * FRAC;\r\n        this._c = 1;\r\n        return this;\r\n    }\r\n    getUniform() {\r\n        let t = 2091639 * this._s0 + this._c * FRAC;\r\n        this._s0 = this._s1;\r\n        this._s1 = this._s2;\r\n        this._c = t | 0;\r\n        this._s2 = t - this._c;\r\n        return this._s2;\r\n    }\r\n    getUniformInt(lowerBound, upperBound) {\r\n        let max = Math.max(lowerBound, upperBound);\r\n        let min = Math.min(lowerBound, upperBound);\r\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\r\n    }\r\n    getNormal(mean = 0, stddev = 1) {\r\n        let u, v, r;\r\n        do {\r\n            u = 2 * this.getUniform() - 1;\r\n            v = 2 * this.getUniform() - 1;\r\n            r = u * u + v * v;\r\n        } while (r > 1 || r == 0);\r\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\r\n        return mean + gauss * stddev;\r\n    }\r\n    getPercentage() {\r\n        return 1 + Math.floor(this.getUniform() * 100);\r\n    }\r\n    getItem(array) {\r\n        if (!array.length) {\r\n            return null;\r\n        }\r\n        return array[Math.floor(this.getUniform() * array.length)];\r\n    }\r\n    shuffle(array) {\r\n        let result = [];\r\n        let clone = array.slice();\r\n        while (clone.length) {\r\n            let index = clone.indexOf(this.getItem(clone));\r\n            result.push(clone.splice(index, 1)[0]);\r\n        }\r\n        return result;\r\n    }\r\n    getWeightedValue(data) {\r\n        let total = 0;\r\n        for (let id in data) {\r\n            total += data[id];\r\n        }\r\n        let random = this.getUniform() * total;\r\n        let id, part = 0;\r\n        for (id in data) {\r\n            part += data[id];\r\n            if (random < part) {\r\n                return id;\r\n            }\r\n        }\r\n        return id;\r\n    }\r\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\r\n    setState(state) {\r\n        this._s0 = state[0];\r\n        this._s1 = state[1];\r\n        this._s2 = state[2];\r\n        this._c = state[3];\r\n        return this;\r\n    }\r\n    clone() {\r\n        let clone = new RNG();\r\n        return clone.setState(this.getState());\r\n    }\r\n}\r\nexport default new RNG().setSeed(Date.now());\r\n","export let DEFAULT_WIDTH = 80;\r\nexport let DEFAULT_HEIGHT = 25;\r\nexport const DIRS = {\r\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\r\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\r\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\r\n};\r\nexport const KEYS = {\r\n    VK_CANCEL: 3,\r\n    VK_HELP: 6,\r\n    VK_BACK_SPACE: 8,\r\n    VK_TAB: 9,\r\n    VK_CLEAR: 12,\r\n    VK_RETURN: 13,\r\n    VK_ENTER: 14,\r\n    VK_SHIFT: 16,\r\n    VK_CONTROL: 17,\r\n    VK_ALT: 18,\r\n    VK_PAUSE: 19,\r\n    VK_CAPS_LOCK: 20,\r\n    VK_ESCAPE: 27,\r\n    VK_SPACE: 32,\r\n    VK_PAGE_UP: 33,\r\n    VK_PAGE_DOWN: 34,\r\n    VK_END: 35,\r\n    VK_HOME: 36,\r\n    VK_LEFT: 37,\r\n    VK_UP: 38,\r\n    VK_RIGHT: 39,\r\n    VK_DOWN: 40,\r\n    VK_PRINTSCREEN: 44,\r\n    VK_INSERT: 45,\r\n    VK_DELETE: 46,\r\n    VK_0: 48,\r\n    VK_1: 49,\r\n    VK_2: 50,\r\n    VK_3: 51,\r\n    VK_4: 52,\r\n    VK_5: 53,\r\n    VK_6: 54,\r\n    VK_7: 55,\r\n    VK_8: 56,\r\n    VK_9: 57,\r\n    VK_COLON: 58,\r\n    VK_SEMICOLON: 59,\r\n    VK_LESS_THAN: 60,\r\n    VK_EQUALS: 61,\r\n    VK_GREATER_THAN: 62,\r\n    VK_QUESTION_MARK: 63,\r\n    VK_AT: 64,\r\n    VK_A: 65,\r\n    VK_B: 66,\r\n    VK_C: 67,\r\n    VK_D: 68,\r\n    VK_E: 69,\r\n    VK_F: 70,\r\n    VK_G: 71,\r\n    VK_H: 72,\r\n    VK_I: 73,\r\n    VK_J: 74,\r\n    VK_K: 75,\r\n    VK_L: 76,\r\n    VK_M: 77,\r\n    VK_N: 78,\r\n    VK_O: 79,\r\n    VK_P: 80,\r\n    VK_Q: 81,\r\n    VK_R: 82,\r\n    VK_S: 83,\r\n    VK_T: 84,\r\n    VK_U: 85,\r\n    VK_V: 86,\r\n    VK_W: 87,\r\n    VK_X: 88,\r\n    VK_Y: 89,\r\n    VK_Z: 90,\r\n    VK_CONTEXT_MENU: 93,\r\n    VK_NUMPAD0: 96,\r\n    VK_NUMPAD1: 97,\r\n    VK_NUMPAD2: 98,\r\n    VK_NUMPAD3: 99,\r\n    VK_NUMPAD4: 100,\r\n    VK_NUMPAD5: 101,\r\n    VK_NUMPAD6: 102,\r\n    VK_NUMPAD7: 103,\r\n    VK_NUMPAD8: 104,\r\n    VK_NUMPAD9: 105,\r\n    VK_MULTIPLY: 106,\r\n    VK_ADD: 107,\r\n    VK_SEPARATOR: 108,\r\n    VK_SUBTRACT: 109,\r\n    VK_DECIMAL: 110,\r\n    VK_DIVIDE: 111,\r\n    VK_F1: 112,\r\n    VK_F2: 113,\r\n    VK_F3: 114,\r\n    VK_F4: 115,\r\n    VK_F5: 116,\r\n    VK_F6: 117,\r\n    VK_F7: 118,\r\n    VK_F8: 119,\r\n    VK_F9: 120,\r\n    VK_F10: 121,\r\n    VK_F11: 122,\r\n    VK_F12: 123,\r\n    VK_F13: 124,\r\n    VK_F14: 125,\r\n    VK_F15: 126,\r\n    VK_F16: 127,\r\n    VK_F17: 128,\r\n    VK_F18: 129,\r\n    VK_F19: 130,\r\n    VK_F20: 131,\r\n    VK_F21: 132,\r\n    VK_F22: 133,\r\n    VK_F23: 134,\r\n    VK_F24: 135,\r\n    VK_NUM_LOCK: 144,\r\n    VK_SCROLL_LOCK: 145,\r\n    VK_CIRCUMFLEX: 160,\r\n    VK_EXCLAMATION: 161,\r\n    VK_DOUBLE_QUOTE: 162,\r\n    VK_HASH: 163,\r\n    VK_DOLLAR: 164,\r\n    VK_PERCENT: 165,\r\n    VK_AMPERSAND: 166,\r\n    VK_UNDERSCORE: 167,\r\n    VK_OPEN_PAREN: 168,\r\n    VK_CLOSE_PAREN: 169,\r\n    VK_ASTERISK: 170,\r\n    VK_PLUS: 171,\r\n    VK_PIPE: 172,\r\n    VK_HYPHEN_MINUS: 173,\r\n    VK_OPEN_CURLY_BRACKET: 174,\r\n    VK_CLOSE_CURLY_BRACKET: 175,\r\n    VK_TILDE: 176,\r\n    VK_COMMA: 188,\r\n    VK_PERIOD: 190,\r\n    VK_SLASH: 191,\r\n    VK_BACK_QUOTE: 192,\r\n    VK_OPEN_BRACKET: 219,\r\n    VK_BACK_SLASH: 220,\r\n    VK_CLOSE_BRACKET: 221,\r\n    VK_QUOTE: 222,\r\n    VK_META: 224,\r\n    VK_ALTGR: 225,\r\n    VK_WIN: 91,\r\n    VK_KANA: 21,\r\n    VK_HANGUL: 21,\r\n    VK_EISU: 22,\r\n    VK_JUNJA: 23,\r\n    VK_FINAL: 24,\r\n    VK_HANJA: 25,\r\n    VK_KANJI: 25,\r\n    VK_CONVERT: 28,\r\n    VK_NONCONVERT: 29,\r\n    VK_ACCEPT: 30,\r\n    VK_MODECHANGE: 31,\r\n    VK_SELECT: 41,\r\n    VK_PRINT: 42,\r\n    VK_EXECUTE: 43,\r\n    VK_SLEEP: 95\r\n};\r\n","export class Glyph {\r\n    char: string = ' ';\r\n    foreground: [number, number, number] = [255,255,255];\r\n    background: [number, number, number] = [0,0,0];\r\n\r\n    constructor(char: string, background: [number, number, number], foreground: [number, number, number]) {\r\n        this.char = char;\r\n        this.background = background;\r\n        this.foreground = foreground;\r\n    }\r\n}","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","import { Entity } from \"../entity\";\r\nimport { Glyph } from \"../glyph\";\r\n\r\nexport function deathFunction(entity: Entity) {\r\n    if (entity.fighter != undefined) {\r\n        let deadG = new Glyph('%', [0,0,0], [139, 0, 0])\r\n        entity.glyph = deadG;\r\n        entity.blocks = false;\r\n        entity.render_order = 99;\r\n        entity.fighter.status = 'dead';\r\n    }\r\n    if (entity.damage != undefined) {\r\n        entity.damage.expire = true;\r\n    }\r\n\r\n}","import { Entity } from \"../entity\";\r\nimport { DamageBlock } from \"../components/damageBlock\";\r\nimport { Glyph } from \"../glyph\";\r\n\r\nexport function createDamageBlock(creator: Entity, x:number, y:number, name: string, multi: number, glyph: string = '╳', timeout: number = 6): boolean {\r\n    let dir = creator.face;\r\n    let dmg = new DamageBlock(multi, timeout);\r\n    let attack:Entity = null;\r\n    if (!creator._map.getTile(x,y)._isWalkable) return true;\r\n    dmg.owner = creator;\r\n    if (creator.player) attack = new Entity(x, y, new Glyph(glyph, [0,0,0], [creator.glyph.foreground[1]/2, creator.glyph.foreground[1]/2, creator.glyph.foreground[2]/2]), name, 1, false, 0, 5, undefined, undefined, false, undefined, undefined, dmg);\r\n    else attack = new Entity(x, y, new Glyph(glyph, [0,0,0], [150, creator.glyph.foreground[1]/3, creator.glyph.foreground[2]/3]), name, 1, false, 0, 5, undefined, undefined, false, undefined, undefined, dmg);\r\n    attack._map = creator._map;\r\n    attack.damage.startCountDown();\r\n    attack.owner = creator;\r\n    creator._map._entities.push(attack); \r\n    return false;\r\n}","import { Entity } from \"../entity\";\r\nimport { Glyph } from \"../glyph\";\r\nimport { randperc } from \"../helper/randperc\";\r\nimport { randint } from \"../helper/randint\";\r\n\r\nexport abstract class Equipment {\r\n    owner: Entity;\r\n    power_bonus: number;\r\n    skill_bonus: number;\r\n    defense_bonus: number;\r\n    hp_bonus: number;\r\n    alpha: number;\r\n    name: string;\r\n    fullname: string;\r\n    type: string;\r\n    expire: boolean = false;\r\n    cooldown: number;\r\n    max_cooldown: number;\r\n    prefix: string = '';\r\n    glyph: Glyph;\r\n\r\n    constructor(type: string) {\r\n        this.type = type;\r\n    }\r\n\r\n    strike() {\r\n    }\r\n\r\n    defend(amount: number) {\r\n        return amount\r\n    }\r\n}","import { Entity } from \"../entity\";\r\nimport { deathFunction } from \"../helper/deathFunction\";\r\n\r\nexport class DamageBlock {\r\n    owner: Entity;\r\n    name: string;\r\n    expire: boolean = false;\r\n    timeout: number;\r\n    multiplier: number;\r\n\r\n    constructor(multi: number, timeout: number = 6) {\r\n        this.multiplier = multi;\r\n        this.timeout = timeout;\r\n    }\r\n\r\n    startCountDown(){\r\n        var counter = this.timeout;\r\n        var interval = setInterval(() => {\r\n            \r\n            counter--;\r\n            if (counter == 2) {\r\n                let newColor = this.owner.glyph.foreground.map(element => {\r\n                    element = element*4 > 250 ? 250 : element*4;\r\n                    return element\r\n                });\r\n                this.owner.glyph.foreground = [250, newColor[1], newColor[2]]//[216, 112, 147] //\r\n            }\r\n            if (counter == 0 ) {\r\n                clearInterval(interval);\r\n                let targets = this.owner._map.getEntitiesAt(this.owner.x, this.owner.x2, this.owner.y, this.owner.y2, this.owner);\r\n                if (targets.length > 0) {\r\n                    this.owner.skill(targets);\r\n                }\r\n                deathFunction(this.owner);\r\n            }\t\r\n        }, 100);\r\n    }\r\n}","import { randperc } from \"./randperc\";\r\n\r\nexport function qualityGenerator(type: string){\r\n    let item = {\r\n        power_bonus: 0,\r\n        skill_bonus: 0,\r\n        defense_bonus: 0,\r\n        max_cooldown: 0,\r\n        prefix: '',\r\n        alpha: 0,\r\n    }\r\n\r\n    item.power_bonus = randperc(30);\r\n    item.skill_bonus = randperc(30);\r\n    item.defense_bonus = randperc(30);\r\n    item.max_cooldown = randperc(40);\r\n    let quality = item.power_bonus*100 + item.skill_bonus*100 + item.defense_bonus*100 + item.max_cooldown*100;\r\n    if (quality <= -60) item.prefix = 'crappy ';\r\n    else if (quality < -30) item.prefix = 'inferior ';\r\n    else if (quality < -15) item.prefix = 'weak ';\r\n    else if (quality < 15) item.prefix = '';\r\n    else if (quality < 30) item.prefix = 'strong ';\r\n    else if (quality < 45) item.prefix = 'superior ';\r\n    else if (quality < 60) item.prefix = 'legendary ';\r\n    else if (quality >= 60) item.prefix = 'infinite ';\r\n    item.alpha = 180 + 180*Math.ceil(quality/100);\r\n\r\n    if (type == \"main\") {\r\n        if (item.power_bonus*100 > 13) item.prefix += 'fierce ';\r\n        else if (item.skill_bonus*100 > 13) item.prefix += 'skillful ';\r\n        else if (item.defense_bonus*100 > 13) item.prefix += 'parry ';\r\n        else if (item.max_cooldown*100 > 17) item.prefix += 'quick ';\r\n    }\r\n\r\n    if (type == \"sub\") {\r\n        if (item.power_bonus*100 > 13) item.prefix += 'empowered ';\r\n        else if (item.skill_bonus*100 > 13) item.prefix += 'enchanted ';\r\n        else if (item.defense_bonus*100 > 13) item.prefix += 'vanguard ';\r\n        else if (item.max_cooldown*100 > 17) item.prefix += 'lightweight ';\r\n    }\r\n\r\n    return item;\r\n}","export function mod(x, n) {\r\n    return (x % n + n) % n;\r\n}\r\nexport function clamp(val, min = 0, max = 1) {\r\n    if (val < min)\r\n        return min;\r\n    if (val > max)\r\n        return max;\r\n    return val;\r\n}\r\nexport function capitalize(string) {\r\n    return string.charAt(0).toUpperCase() + string.substring(1);\r\n}\r\nexport function format(template, ...args) {\r\n    let map = format.map;\r\n    let replacer = function (match, group1, group2, index) {\r\n        if (template.charAt(index - 1) == \"%\") {\r\n            return match.substring(1);\r\n        }\r\n        if (!args.length) {\r\n            return match;\r\n        }\r\n        let obj = args[0];\r\n        let group = group1 || group2;\r\n        let parts = group.split(\",\");\r\n        let name = parts.shift() || \"\";\r\n        let method = map[name.toLowerCase()];\r\n        if (!method) {\r\n            return match;\r\n        }\r\n        obj = args.shift();\r\n        let replaced = obj[method].apply(obj, parts);\r\n        let first = name.charAt(0);\r\n        if (first != first.toLowerCase()) {\r\n            replaced = capitalize(replaced);\r\n        }\r\n        return replaced;\r\n    };\r\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\r\n}\r\nformat.map = {\r\n    \"s\": \"toString\"\r\n};\r\n","export function randint(floor : number, ceil:number): number {\r\n    let t = (Math.random() * (ceil-floor+1)) + floor-0.5;\r\n    return Math.round(t);\r\n}\r\n","import { createDamageBlock } from \"../helper/createDamageBlock\";\r\nimport { Entity } from \"../entity\";\r\n\r\nexport interface skilllist {\r\n    name: string;\r\n    cooldown: number;\r\n    maxCooldown: number;\r\n\r\n}\r\n\r\nexport function poison_cloud(owner: Entity, target: Entity, damageMultiplier: number) {\r\n    let nameAtk = 'spore cloud';\r\n    createDamageBlock(owner, target.x, target.y, nameAtk, damageMultiplier, \"ꙮ\");\r\n    createDamageBlock(owner, target.x+1, target.y, nameAtk, damageMultiplier, \"ꙮ\");\r\n    createDamageBlock(owner, target.x-1, target.y, nameAtk, damageMultiplier, \"ꙮ\");\r\n    createDamageBlock(owner, target.x, target.y+1, nameAtk, damageMultiplier, \"ꙮ\");\r\n    createDamageBlock(owner, target.x, target.y-1, nameAtk, damageMultiplier, \"ꙮ\");\r\n}\r\n\r\nexport function poison_shield(owner: Entity, target: Entity, damageMultiplier: number) {\r\n    let nameAtk = 'spore shield';\r\n    createDamageBlock(owner, owner.x+1, owner.y-1, nameAtk, damageMultiplier);\r\n    createDamageBlock(owner, owner.x+1, owner.y, nameAtk, damageMultiplier);\r\n    createDamageBlock(owner, owner.x+1, owner.y+1, nameAtk, damageMultiplier);\r\n    createDamageBlock(owner, owner.x, owner.y+1, nameAtk, damageMultiplier);\r\n    createDamageBlock(owner, owner.x, owner.y-1, nameAtk, damageMultiplier);\r\n    createDamageBlock(owner, owner.x-1, owner.y-1, nameAtk, damageMultiplier);\r\n    createDamageBlock(owner, owner.x-1, owner.y, nameAtk, damageMultiplier);\r\n    createDamageBlock(owner, owner.x-1, owner.y+1, nameAtk, damageMultiplier);\r\n}\r\n\r\nexport function hug(owner: Entity, target: Entity, damageMultiplier: number) {\r\n    let nameAtk = 'hug';\r\n    if (owner.face == 'n') {\r\n        createDamageBlock(owner, owner.x, owner.y-1, nameAtk, damageMultiplier, '❤');\r\n        createDamageBlock(owner, owner.x, owner.y-2, nameAtk, damageMultiplier, '❤');\r\n        createDamageBlock(owner, owner.x, owner.y-3, nameAtk, damageMultiplier, '❤');\r\n        createDamageBlock(owner, owner.x, owner.y-4, nameAtk, damageMultiplier, '❤');\r\n    }\r\n    if (owner.face == 's') {\r\n        createDamageBlock(owner, owner.x, owner.y+1, nameAtk, damageMultiplier, '❤');\r\n        createDamageBlock(owner, owner.x, owner.y+2, nameAtk, damageMultiplier, '❤');\r\n        createDamageBlock(owner, owner.x, owner.y+3, nameAtk, damageMultiplier, '❤');\r\n        createDamageBlock(owner, owner.x, owner.y+4, nameAtk, damageMultiplier, '❤');\r\n    }\r\n    if (owner.face == 'w') {\r\n        createDamageBlock(owner, owner.x-1, owner.y, nameAtk, damageMultiplier, '❤');\r\n        createDamageBlock(owner, owner.x-2, owner.y, nameAtk, damageMultiplier, '❤');\r\n        createDamageBlock(owner, owner.x-3, owner.y, nameAtk, damageMultiplier, '❤');\r\n        createDamageBlock(owner, owner.x-4, owner.y, nameAtk, damageMultiplier, '❤');\r\n    }\r\n    if (owner.face == 'e') {\r\n        createDamageBlock(owner, owner.x+1, owner.y, nameAtk, damageMultiplier, '❤');\r\n        createDamageBlock(owner, owner.x+2, owner.y, nameAtk, damageMultiplier, '❤');\r\n        createDamageBlock(owner, owner.x+3, owner.y, nameAtk, damageMultiplier, '❤');\r\n        createDamageBlock(owner, owner.x+4, owner.y, nameAtk, damageMultiplier, '❤');\r\n    }\r\n}\r\n\r\nexport function punch(owner: Entity, target: Entity, damageMultiplier: number) {\r\n    let nameAtk = 'smite';\r\n    if (owner.face == 'n') {\r\n        createDamageBlock(owner, owner.x, owner.y-1, nameAtk, damageMultiplier);\r\n        createDamageBlock(owner, owner.x, owner.y-2, nameAtk, damageMultiplier);\r\n        createDamageBlock(owner, owner.x, owner.y-3, nameAtk, damageMultiplier);\r\n        createDamageBlock(owner, owner.x, owner.y-4, nameAtk, damageMultiplier);\r\n    }\r\n    if (owner.face == 's') {\r\n        createDamageBlock(owner, owner.x, owner.y+1, nameAtk, damageMultiplier);\r\n        createDamageBlock(owner, owner.x, owner.y+2, nameAtk, damageMultiplier);\r\n        createDamageBlock(owner, owner.x, owner.y+3, nameAtk, damageMultiplier);\r\n        createDamageBlock(owner, owner.x, owner.y+4, nameAtk, damageMultiplier);\r\n    }\r\n    if (owner.face == 'w') {\r\n        createDamageBlock(owner, owner.x-1, owner.y, nameAtk, damageMultiplier);\r\n        createDamageBlock(owner, owner.x-2, owner.y, nameAtk, damageMultiplier);\r\n        createDamageBlock(owner, owner.x-3, owner.y, nameAtk, damageMultiplier);\r\n        createDamageBlock(owner, owner.x-4, owner.y, nameAtk, damageMultiplier);\r\n    }\r\n    if (owner.face == 'e') {\r\n        createDamageBlock(owner, owner.x+1, owner.y, nameAtk, damageMultiplier);\r\n        createDamageBlock(owner, owner.x+2, owner.y, nameAtk, damageMultiplier);\r\n        createDamageBlock(owner, owner.x+3, owner.y, nameAtk, damageMultiplier);\r\n        createDamageBlock(owner, owner.x+4, owner.y, nameAtk, damageMultiplier);\r\n    }\r\n}\r\n\r\nexport function smash(owner: Entity, target: Entity, damageMultiplier: number) {\r\n    let nameAtk = 'smash';\r\n    if (owner.face == 'n') {\r\n        createDamageBlock(owner, owner.x, owner.y-1, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x, owner.y-2, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x, owner.y-3, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x, owner.y-4, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x-1, owner.y-4, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x+1, owner.y-4, nameAtk, damageMultiplier, '✶');\r\n    }\r\n    if (owner.face == 's') {\r\n        createDamageBlock(owner, owner.x, owner.y+1, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x, owner.y+2, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x, owner.y+3, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x, owner.y+4, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x-1, owner.y+4, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x+1, owner.y+4, nameAtk, damageMultiplier, '✶');\r\n    }\r\n    if (owner.face == 'w') {\r\n        createDamageBlock(owner, owner.x-1, owner.y, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x-2, owner.y, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x-3, owner.y, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x-4, owner.y, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x-4, owner.y+1, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x-4, owner.y-1, nameAtk, damageMultiplier, '✶');\r\n    }\r\n    if (owner.face == 'e') {\r\n        createDamageBlock(owner, owner.x+1, owner.y, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x+2, owner.y, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x+3, owner.y, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x+4, owner.y, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x+4, owner.y+1, nameAtk, damageMultiplier, '✶');\r\n        createDamageBlock(owner, owner.x+4, owner.y-1, nameAtk, damageMultiplier, '✶');\r\n    }\r\n}\r\n\r\nexport function windBlow(owner: Entity, target: Entity, damageMultiplier: number) {\r\n    let nameAtk = 'wind blow';\r\n    createDamageBlock(owner, target.x, target.y, nameAtk, damageMultiplier, \"ꙮ\");\r\n    createDamageBlock(owner, target.x+1, target.y+1, nameAtk, damageMultiplier, \"ꙮ\");\r\n    createDamageBlock(owner, target.x-1, target.y-1, nameAtk, damageMultiplier, \"ꙮ\");\r\n    createDamageBlock(owner, target.x-1, target.y+1, nameAtk, damageMultiplier, \"ꙮ\");\r\n    createDamageBlock(owner, target.x+1, target.y-1, nameAtk, damageMultiplier, \"ꙮ\");\r\n}\r\n\r\nexport function snipe(owner: Entity, target: Entity, damageMultiplier: number) {\r\n    let nameAtk = 'shot';\r\n    let dx = target.x - owner.x;\r\n    let dy = target.y - owner.y;\r\n    let wall = false;\r\n    if ( Math.abs(dx) < Math.abs(dy)) {\r\n        if (dy > 0) {\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+2, nameAtk, damageMultiplier, \"↓\",6);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+3, nameAtk, damageMultiplier, \"↓\",7);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+4, nameAtk, damageMultiplier, \"↓\",8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+5, nameAtk, damageMultiplier, \"↓\",9);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+6, nameAtk, damageMultiplier, \"↓\",10);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+7, nameAtk, damageMultiplier, \"↓\",11);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+8, nameAtk, damageMultiplier, \"↓\",12);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+9, nameAtk, damageMultiplier, \"↓\",13);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+10, nameAtk, damageMultiplier, \"↓\",14);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+11, nameAtk, damageMultiplier, \"↓\",15);\r\n        } else {\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-2, nameAtk, damageMultiplier, \"↑\", 6);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-3, nameAtk, damageMultiplier,  \"↑\", 7);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-4, nameAtk, damageMultiplier,  \"↑\", 8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-5, nameAtk, damageMultiplier,  \"↑\", 9);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-6, nameAtk, damageMultiplier,  \"↑\", 10);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-7, nameAtk, damageMultiplier,  \"↑\", 11);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-8, nameAtk, damageMultiplier,  \"↑\", 12);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-9, nameAtk, damageMultiplier,  \"↑\", 13);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-10, nameAtk, damageMultiplier,  \"↑\", 14);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-11, nameAtk, damageMultiplier,  \"↑\", 15);\r\n        }\r\n    }\r\n    if (Math.abs(dx) > Math.abs(dy)) {\r\n        if ( dx > 0) {\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+2, owner.y, nameAtk, damageMultiplier,\"→\", 6);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+3, owner.y, nameAtk, damageMultiplier,\"→\", 7);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+4, owner.y, nameAtk, damageMultiplier,\"→\", 8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+5, owner.y, nameAtk, damageMultiplier,\"→\", 9);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+6, owner.y, nameAtk, damageMultiplier,\"→\", 10);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+7, owner.y, nameAtk, damageMultiplier,\"→\", 11);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+8, owner.y, nameAtk, damageMultiplier,\"→\", 12);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+9, owner.y, nameAtk, damageMultiplier,\"→\", 13);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+10, owner.y, nameAtk, damageMultiplier,\"→\", 14);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+11, owner.y, nameAtk, damageMultiplier,\"→\", 15);\r\n        } else {\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-2, owner.y, nameAtk, damageMultiplier, \"←\",6);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-3, owner.y, nameAtk, damageMultiplier, \"←\",7);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-4, owner.y, nameAtk, damageMultiplier, \"←\",8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-5, owner.y, nameAtk, damageMultiplier, \"←\",9);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-6, owner.y, nameAtk, damageMultiplier, \"←\",10);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-7, owner.y, nameAtk, damageMultiplier, \"←\",11);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-8, owner.y, nameAtk, damageMultiplier, \"←\",12);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-9, owner.y, nameAtk, damageMultiplier, \"←\",13);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-10, owner.y, nameAtk, damageMultiplier, \"←\",14);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-11, owner.y, nameAtk, damageMultiplier, \"←\",15);\r\n        }\r\n    }\r\n}\r\n\r\nexport function flamestrike(owner: Entity, target: Entity, damageMultiplier: number) {\r\n    let nameAtk = 'flamestrike'\r\n    if (owner.face == 'n') {\r\n        createDamageBlock(owner, owner.x-2, owner.y-1, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x-1, owner.y-1, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x, owner.y-1, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x, owner.y-2, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x-1, owner.y-1, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x+1, owner.y-1, nameAtk, damageMultiplier, '⽕');\r\n    }\r\n    if (owner.face == 's') {\r\n        createDamageBlock(owner, owner.x, owner.y+1, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x, owner.y+2, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x-2, owner.y+1, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x+2, owner.y+1, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x-1, owner.y+1, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x+1, owner.y+1, nameAtk, damageMultiplier, '⽕');\r\n    }\r\n    if (owner.face == 'w') {\r\n        createDamageBlock(owner, owner.x-1, owner.y, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x-2, owner.y, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x-1, owner.y+2, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x-1, owner.y-2, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x-1, owner.y+1, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x-1, owner.y-1, nameAtk, damageMultiplier, '⽕');\r\n    }\r\n    if (owner.face == 'e') {\r\n        createDamageBlock(owner, owner.x+1, owner.y, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x+2, owner.y, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x+1, owner.y-2, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x+1, owner.y+2, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x+1, owner.y+1, nameAtk, damageMultiplier, '⽕');\r\n        createDamageBlock(owner, owner.x+1, owner.y-1, nameAtk, damageMultiplier, '⽕');\r\n    }\r\n}\r\n\r\nexport function bite(owner: Entity, target: Entity, damageMultiplier: number) {\r\n    let nameAtk = 'bite'\r\n    if (owner.face == 'n') {\r\n        createDamageBlock(owner, owner.x-1, owner.y-1, nameAtk, damageMultiplier, '✖');\r\n        createDamageBlock(owner, owner.x, owner.y-1, nameAtk, damageMultiplier, '✖');\r\n        createDamageBlock(owner, owner.x+1, owner.y-1, nameAtk, damageMultiplier, '✖');\r\n\r\n        createDamageBlock(owner, owner.x, owner.y-2, nameAtk, damageMultiplier, '✖');\r\n    }\r\n    if (owner.face == 's') {\r\n        createDamageBlock(owner, owner.x-1, owner.y+1, nameAtk, damageMultiplier, '✖');\r\n        createDamageBlock(owner, owner.x, owner.y+1, nameAtk, damageMultiplier, '✖');\r\n        createDamageBlock(owner, owner.x-1, owner.y+1, nameAtk, damageMultiplier, '✖');\r\n\r\n        createDamageBlock(owner, owner.x, owner.y+2, nameAtk, damageMultiplier, '✖');\r\n    }\r\n    if (owner.face == 'w') {\r\n        createDamageBlock(owner, owner.x-1, owner.y+1, nameAtk, damageMultiplier, '✖');\r\n        createDamageBlock(owner, owner.x-1, owner.y, nameAtk, damageMultiplier, '✖');\r\n        createDamageBlock(owner, owner.x-1, owner.y-1, nameAtk, damageMultiplier, '✖');\r\n\r\n        createDamageBlock(owner, owner.x-2, owner.y, nameAtk, damageMultiplier, '✖');\r\n    }\r\n    if (owner.face == 'e') {\r\n        createDamageBlock(owner, owner.x+1, owner.y-1, nameAtk, damageMultiplier, '✖');\r\n        createDamageBlock(owner, owner.x+1, owner.y, nameAtk, damageMultiplier, '✖');\r\n        createDamageBlock(owner, owner.x+1, owner.y+1, nameAtk, damageMultiplier, '✖');\r\n\r\n        createDamageBlock(owner, owner.x+2, owner.y, nameAtk, damageMultiplier, '✖');\r\n    }\r\n}\r\n\r\n\r\nexport function firebreath(owner: Entity, target: Entity, damageMultiplier: number) {\r\n    let nameAtk = 'firebreath';\r\n    let dx = target.x - owner.x;\r\n    let dy = target.y - owner.y;\r\n    let wall = false;\r\n    if ( Math.abs(dx) < Math.abs(dy)) {\r\n        if (dy > 0) {\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+1, nameAtk, damageMultiplier, \"⮇\",5);\r\n\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+1, owner.y+2, nameAtk, damageMultiplier, \"⮇\",6);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+2, nameAtk, damageMultiplier, \"⮇\",6);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-1, owner.y+2, nameAtk, damageMultiplier, \"⮇\",6);\r\n\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+1, owner.y+3, nameAtk, damageMultiplier, \"⮇\",7);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+3, nameAtk, damageMultiplier, \"⮇\",7);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-1, owner.y+3, nameAtk, damageMultiplier, \"⮇\",7);\r\n\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+2, owner.y+4, nameAtk, damageMultiplier, \"⮇\",9);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+1, owner.y+4, nameAtk, damageMultiplier, \"⮇\",9);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y+4, nameAtk, damageMultiplier, \"⮇\",9);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-1, owner.y+4, nameAtk, damageMultiplier, \"⮇\",9);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-2, owner.y+4, nameAtk, damageMultiplier, \"⮇\",9);\r\n        } else {\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-1, nameAtk, damageMultiplier, \"⮅\", 5);\r\n\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+1, owner.y-2, nameAtk, damageMultiplier,  \"⮅\", 6);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-2, nameAtk, damageMultiplier,  \"⮅\", 6);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-1, owner.y-2, nameAtk, damageMultiplier,  \"⮅\", 6);\r\n\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+1, owner.y-3, nameAtk, damageMultiplier,  \"⮅\", 7);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-3, nameAtk, damageMultiplier,  \"⮅\", 7);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-1, owner.y-3, nameAtk, damageMultiplier,  \"⮅\", 7);\r\n\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+2, owner.y-4, nameAtk, damageMultiplier,  \"⮅\", 8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+1, owner.y-4, nameAtk, damageMultiplier,  \"⮅\", 8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x, owner.y-4, nameAtk, damageMultiplier,  \"⮅\", 8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-1, owner.y-4, nameAtk, damageMultiplier,  \"⮅\", 8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-2, owner.y-4, nameAtk, damageMultiplier,  \"⮅\", 8);\r\n        }\r\n    }\r\n    if (Math.abs(dx) > Math.abs(dy)) {\r\n        if ( dx > 0) {\r\n            let l = 0;\r\n            let r = 0;\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+1, owner.y, nameAtk, damageMultiplier,\"⮆\", 5);\r\n\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+2, owner.y+1, nameAtk, damageMultiplier,\"⮆\", 6);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+2, owner.y, nameAtk, damageMultiplier,\"⮆\", 6);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+2, owner.y-1, nameAtk, damageMultiplier,\"⮆\", 6);\r\n\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+3, owner.y+1, nameAtk, damageMultiplier,\"⮆\", 7);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+3, owner.y, nameAtk, damageMultiplier,\"⮆\", 7);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+3, owner.y-1, nameAtk, damageMultiplier,\"⮆\", 7);\r\n\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+4, owner.y+2, nameAtk, damageMultiplier,\"⮆\", 8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+4, owner.y+1, nameAtk, damageMultiplier,\"⮆\", 8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+4, owner.y, nameAtk, damageMultiplier,\"⮆\", 8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+4, owner.y-1, nameAtk, damageMultiplier,\"⮆\", 8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x+4, owner.y-2, nameAtk, damageMultiplier,\"⮆\", 8);\r\n        } else {\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-1, owner.y, nameAtk, damageMultiplier, \"⮄\",5);\r\n\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-2, owner.y+1, nameAtk, damageMultiplier, \"⮄\",6);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-2, owner.y, nameAtk, damageMultiplier, \"⮄\",6);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-2, owner.y-1, nameAtk, damageMultiplier, \"⮄\",6);\r\n\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-3, owner.y+1, nameAtk, damageMultiplier, \"⮄\",7);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-3, owner.y, nameAtk, damageMultiplier, \"⮄\",7);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-3, owner.y-1, nameAtk, damageMultiplier, \"⮄\",7);\r\n\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-4, owner.y+2, nameAtk, damageMultiplier, \"⮄\",8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-4, owner.y+1, nameAtk, damageMultiplier, \"⮄\",8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-4, owner.y, nameAtk, damageMultiplier, \"⮄\",8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-4, owner.y-1, nameAtk, damageMultiplier, \"⮄\",8);\r\n            if (!wall) wall = createDamageBlock(owner, owner.x-4, owner.y-2, nameAtk, damageMultiplier, \"⮄\",8);\r\n        }\r\n    }\r\n}","import { clamp } from \"./util.js\";\r\nimport RNG from \"./rng.js\";\r\nexport function fromString(str) {\r\n    let cached, r;\r\n    if (str in CACHE) {\r\n        cached = CACHE[str];\r\n    }\r\n    else {\r\n        if (str.charAt(0) == \"#\") {\r\n            let matched = str.match(/[0-9a-f]/gi) || [];\r\n            let values = matched.map((x) => parseInt(x, 16));\r\n            if (values.length == 3) {\r\n                cached = values.map((x) => x * 17);\r\n            }\r\n            else {\r\n                for (let i = 0; i < 3; i++) {\r\n                    values[i + 1] += 16 * values[i];\r\n                    values.splice(i, 1);\r\n                }\r\n                cached = values;\r\n            }\r\n        }\r\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) {\r\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\r\n        }\r\n        else {\r\n            cached = [0, 0, 0];\r\n        }\r\n        CACHE[str] = cached;\r\n    }\r\n    return cached.slice();\r\n}\r\nexport function add(color1, ...colors) {\r\n    let result = color1.slice();\r\n    for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < colors.length; j++) {\r\n            result[i] += colors[j][i];\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function add_(color1, ...colors) {\r\n    for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < colors.length; j++) {\r\n            color1[i] += colors[j][i];\r\n        }\r\n    }\r\n    return color1;\r\n}\r\nexport function multiply(color1, ...colors) {\r\n    let result = color1.slice();\r\n    for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < colors.length; j++) {\r\n            result[i] *= colors[j][i] / 255;\r\n        }\r\n        result[i] = Math.round(result[i]);\r\n    }\r\n    return result;\r\n}\r\nexport function multiply_(color1, ...colors) {\r\n    for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < colors.length; j++) {\r\n            color1[i] *= colors[j][i] / 255;\r\n        }\r\n        color1[i] = Math.round(color1[i]);\r\n    }\r\n    return color1;\r\n}\r\nexport function interpolate(color1, color2, factor = 0.5) {\r\n    let result = color1.slice();\r\n    for (let i = 0; i < 3; i++) {\r\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\r\n    }\r\n    return result;\r\n}\r\nexport const lerp = interpolate;\r\nexport function interpolateHSL(color1, color2, factor = 0.5) {\r\n    let hsl1 = rgb2hsl(color1);\r\n    let hsl2 = rgb2hsl(color2);\r\n    for (let i = 0; i < 3; i++) {\r\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\r\n    }\r\n    return hsl2rgb(hsl1);\r\n}\r\nexport const lerpHSL = interpolateHSL;\r\nexport function randomize(color, diff) {\r\n    if (!(diff instanceof Array)) {\r\n        diff = Math.round(RNG.getNormal(0, diff));\r\n    }\r\n    let result = color.slice();\r\n    for (let i = 0; i < 3; i++) {\r\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\r\n    }\r\n    return result;\r\n}\r\nexport function rgb2hsl(color) {\r\n    let r = color[0] / 255;\r\n    let g = color[1] / 255;\r\n    let b = color[2] / 255;\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h = 0, s, l = (max + min) / 2;\r\n    if (max == min) {\r\n        s = 0;\r\n    }\r\n    else {\r\n        let d = max - min;\r\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return [h, s, l];\r\n}\r\nfunction hue2rgb(p, q, t) {\r\n    if (t < 0)\r\n        t += 1;\r\n    if (t > 1)\r\n        t -= 1;\r\n    if (t < 1 / 6)\r\n        return p + (q - p) * 6 * t;\r\n    if (t < 1 / 2)\r\n        return q;\r\n    if (t < 2 / 3)\r\n        return p + (q - p) * (2 / 3 - t) * 6;\r\n    return p;\r\n}\r\nexport function hsl2rgb(color) {\r\n    let l = color[2];\r\n    if (color[1] == 0) {\r\n        l = Math.round(l * 255);\r\n        return [l, l, l];\r\n    }\r\n    else {\r\n        let s = color[1];\r\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\r\n        let p = 2 * l - q;\r\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\r\n        let g = hue2rgb(p, q, color[0]);\r\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\r\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n    }\r\n}\r\nexport function toRGB(color) {\r\n    let clamped = color.map(x => clamp(x, 0, 255));\r\n    return `rgb(${clamped.join(\",\")})`;\r\n}\r\nexport function toHex(color) {\r\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\r\n    return `#${clamped.join(\"\")}`;\r\n}\r\nconst CACHE = {\r\n    \"black\": [0, 0, 0],\r\n    \"navy\": [0, 0, 128],\r\n    \"darkblue\": [0, 0, 139],\r\n    \"mediumblue\": [0, 0, 205],\r\n    \"blue\": [0, 0, 255],\r\n    \"darkgreen\": [0, 100, 0],\r\n    \"green\": [0, 128, 0],\r\n    \"teal\": [0, 128, 128],\r\n    \"darkcyan\": [0, 139, 139],\r\n    \"deepskyblue\": [0, 191, 255],\r\n    \"darkturquoise\": [0, 206, 209],\r\n    \"mediumspringgreen\": [0, 250, 154],\r\n    \"lime\": [0, 255, 0],\r\n    \"springgreen\": [0, 255, 127],\r\n    \"aqua\": [0, 255, 255],\r\n    \"cyan\": [0, 255, 255],\r\n    \"midnightblue\": [25, 25, 112],\r\n    \"dodgerblue\": [30, 144, 255],\r\n    \"forestgreen\": [34, 139, 34],\r\n    \"seagreen\": [46, 139, 87],\r\n    \"darkslategray\": [47, 79, 79],\r\n    \"darkslategrey\": [47, 79, 79],\r\n    \"limegreen\": [50, 205, 50],\r\n    \"mediumseagreen\": [60, 179, 113],\r\n    \"turquoise\": [64, 224, 208],\r\n    \"royalblue\": [65, 105, 225],\r\n    \"steelblue\": [70, 130, 180],\r\n    \"darkslateblue\": [72, 61, 139],\r\n    \"mediumturquoise\": [72, 209, 204],\r\n    \"indigo\": [75, 0, 130],\r\n    \"darkolivegreen\": [85, 107, 47],\r\n    \"cadetblue\": [95, 158, 160],\r\n    \"cornflowerblue\": [100, 149, 237],\r\n    \"mediumaquamarine\": [102, 205, 170],\r\n    \"dimgray\": [105, 105, 105],\r\n    \"dimgrey\": [105, 105, 105],\r\n    \"slateblue\": [106, 90, 205],\r\n    \"olivedrab\": [107, 142, 35],\r\n    \"slategray\": [112, 128, 144],\r\n    \"slategrey\": [112, 128, 144],\r\n    \"lightslategray\": [119, 136, 153],\r\n    \"lightslategrey\": [119, 136, 153],\r\n    \"mediumslateblue\": [123, 104, 238],\r\n    \"lawngreen\": [124, 252, 0],\r\n    \"chartreuse\": [127, 255, 0],\r\n    \"aquamarine\": [127, 255, 212],\r\n    \"maroon\": [128, 0, 0],\r\n    \"purple\": [128, 0, 128],\r\n    \"olive\": [128, 128, 0],\r\n    \"gray\": [128, 128, 128],\r\n    \"grey\": [128, 128, 128],\r\n    \"skyblue\": [135, 206, 235],\r\n    \"lightskyblue\": [135, 206, 250],\r\n    \"blueviolet\": [138, 43, 226],\r\n    \"darkred\": [139, 0, 0],\r\n    \"darkmagenta\": [139, 0, 139],\r\n    \"saddlebrown\": [139, 69, 19],\r\n    \"darkseagreen\": [143, 188, 143],\r\n    \"lightgreen\": [144, 238, 144],\r\n    \"mediumpurple\": [147, 112, 216],\r\n    \"darkviolet\": [148, 0, 211],\r\n    \"palegreen\": [152, 251, 152],\r\n    \"darkorchid\": [153, 50, 204],\r\n    \"yellowgreen\": [154, 205, 50],\r\n    \"sienna\": [160, 82, 45],\r\n    \"brown\": [165, 42, 42],\r\n    \"darkgray\": [169, 169, 169],\r\n    \"darkgrey\": [169, 169, 169],\r\n    \"lightblue\": [173, 216, 230],\r\n    \"greenyellow\": [173, 255, 47],\r\n    \"paleturquoise\": [175, 238, 238],\r\n    \"lightsteelblue\": [176, 196, 222],\r\n    \"powderblue\": [176, 224, 230],\r\n    \"firebrick\": [178, 34, 34],\r\n    \"darkgoldenrod\": [184, 134, 11],\r\n    \"mediumorchid\": [186, 85, 211],\r\n    \"rosybrown\": [188, 143, 143],\r\n    \"darkkhaki\": [189, 183, 107],\r\n    \"silver\": [192, 192, 192],\r\n    \"mediumvioletred\": [199, 21, 133],\r\n    \"indianred\": [205, 92, 92],\r\n    \"peru\": [205, 133, 63],\r\n    \"chocolate\": [210, 105, 30],\r\n    \"tan\": [210, 180, 140],\r\n    \"lightgray\": [211, 211, 211],\r\n    \"lightgrey\": [211, 211, 211],\r\n    \"palevioletred\": [216, 112, 147],\r\n    \"thistle\": [216, 191, 216],\r\n    \"orchid\": [218, 112, 214],\r\n    \"goldenrod\": [218, 165, 32],\r\n    \"crimson\": [220, 20, 60],\r\n    \"gainsboro\": [220, 220, 220],\r\n    \"plum\": [221, 160, 221],\r\n    \"burlywood\": [222, 184, 135],\r\n    \"lightcyan\": [224, 255, 255],\r\n    \"lavender\": [230, 230, 250],\r\n    \"darksalmon\": [233, 150, 122],\r\n    \"violet\": [238, 130, 238],\r\n    \"palegoldenrod\": [238, 232, 170],\r\n    \"lightcoral\": [240, 128, 128],\r\n    \"khaki\": [240, 230, 140],\r\n    \"aliceblue\": [240, 248, 255],\r\n    \"honeydew\": [240, 255, 240],\r\n    \"azure\": [240, 255, 255],\r\n    \"sandybrown\": [244, 164, 96],\r\n    \"wheat\": [245, 222, 179],\r\n    \"beige\": [245, 245, 220],\r\n    \"whitesmoke\": [245, 245, 245],\r\n    \"mintcream\": [245, 255, 250],\r\n    \"ghostwhite\": [248, 248, 255],\r\n    \"salmon\": [250, 128, 114],\r\n    \"antiquewhite\": [250, 235, 215],\r\n    \"linen\": [250, 240, 230],\r\n    \"lightgoldenrodyellow\": [250, 250, 210],\r\n    \"oldlace\": [253, 245, 230],\r\n    \"red\": [255, 0, 0],\r\n    \"fuchsia\": [255, 0, 255],\r\n    \"magenta\": [255, 0, 255],\r\n    \"deeppink\": [255, 20, 147],\r\n    \"orangered\": [255, 69, 0],\r\n    \"tomato\": [255, 99, 71],\r\n    \"hotpink\": [255, 105, 180],\r\n    \"coral\": [255, 127, 80],\r\n    \"darkorange\": [255, 140, 0],\r\n    \"lightsalmon\": [255, 160, 122],\r\n    \"orange\": [255, 165, 0],\r\n    \"lightpink\": [255, 182, 193],\r\n    \"pink\": [255, 192, 203],\r\n    \"gold\": [255, 215, 0],\r\n    \"peachpuff\": [255, 218, 185],\r\n    \"navajowhite\": [255, 222, 173],\r\n    \"moccasin\": [255, 228, 181],\r\n    \"bisque\": [255, 228, 196],\r\n    \"mistyrose\": [255, 228, 225],\r\n    \"blanchedalmond\": [255, 235, 205],\r\n    \"papayawhip\": [255, 239, 213],\r\n    \"lavenderblush\": [255, 240, 245],\r\n    \"seashell\": [255, 245, 238],\r\n    \"cornsilk\": [255, 248, 220],\r\n    \"lemonchiffon\": [255, 250, 205],\r\n    \"floralwhite\": [255, 250, 240],\r\n    \"snow\": [255, 250, 250],\r\n    \"yellow\": [255, 255, 0],\r\n    \"lightyellow\": [255, 255, 224],\r\n    \"ivory\": [255, 255, 240],\r\n    \"white\": [255, 255, 255]\r\n};\r\n","import { Glyph } from \"./glyph\";\r\nimport { Map } from \"./map\";\r\nimport { Fighter } from \"./components/fighter\";\r\nimport { Path } from \"../lib\";\r\nimport { randint } from \"./helper/randint\";\r\nimport { Equipment } from \"./components/equipment\";\r\nimport { DamageBlock } from \"./components/damageBlock\";\r\nimport { Enemy } from \"./helper/enemy\";\r\nimport { deathFunction } from \"./helper/deathFunction\";\r\nimport { MessageType } from \"./helper/messageType\";\r\nimport { CreateDropItem } from \"./helper/createItens\";\r\nimport { Exit } from \"./content/itens/exit\";\r\n\r\nexport class Entity {\r\n    x: number;\r\n    y: number;\r\n    x2: number;\r\n    y2: number;\r\n    glyph: Glyph;\r\n    name: string;\r\n    blocks: boolean;\r\n    render_order: number;\r\n    maxStamina: number;\r\n    stamina: number;\r\n    _map: Map;\r\n    fighter: Fighter;\r\n    ai: any;\r\n    sight: number;\r\n    cooldown: number;\r\n    face: string;\r\n    item: Equipment;\r\n    inventory: number;\r\n    // cooldown\r\n    // maxCooldown \r\n    damage: DamageBlock;\r\n    stairs: Exit;\r\n    level: number;\r\n    nextLevel: number;\r\n    equipment: Equipment;\r\n    subequipment: Equipment;\r\n    exp: {amount: number, readonly base: number, gain: number}\r\n    boss: any;\r\n    owner: Entity;\r\n    player: boolean;\r\n    regen: any = undefined;\r\n    regenMax: number = 10;\r\n    lastxp: number =0;\r\n    killedby: string = '';\r\n\r\n    constructor(x:number, y:number, glyph: Glyph, name: string, size:number = 0, blocks: boolean = false, maxStamina:number=0,\r\n                render_order:number = 99, fighter: Fighter = undefined, ai: any = undefined, player: boolean = false,\r\n                item: Equipment = undefined, inventory: any = undefined, damage: DamageBlock = undefined, stairs: Exit = undefined, level: any = undefined, \r\n                equipment: Equipment = undefined, boss: any = undefined, _map: Map = undefined, _entities: Entity[] = undefined) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.x2 = x+size-1;\r\n        this.y2 = y+size-1;\r\n        this.glyph = glyph;\r\n        this.name = name;\r\n        this.blocks = blocks;\r\n        this.render_order = render_order;\r\n        this.maxStamina = maxStamina;\r\n        this.stamina = 0;\r\n        this._map = _map;\r\n        this.ai = ai;\r\n        this.fighter = fighter;\r\n        this.equipment = equipment;\r\n        this.subequipment = undefined;\r\n        this.cooldown = 0;\r\n        this.face = 'n';\r\n        this.damage = damage;\r\n        this.player = player;\r\n        this.item = item;\r\n        this.inventory = 1;\r\n        this.stairs = stairs;\r\n        this.boss = boss;\r\n\r\n        if (this.player == true) {\r\n            this.startMoveCountDown();\r\n            this.startAttackCountDown();\r\n        }\r\n\r\n        if (this.ai != undefined) {\r\n            this.ai.owner = this;\r\n            this.ai.startCountDown(this.maxStamina);\r\n            this.sight = 10;\r\n            this.startAttackCountDown();\r\n        } else this.sight = 12; //12\r\n\r\n        if (this.fighter != undefined) {\r\n            this.fighter.owner = this;\r\n        }\r\n\r\n        if (this.equipment != undefined) {\r\n            this.equipment.owner = this;\r\n        }\r\n\r\n        if (this.damage != undefined) {\r\n            this.damage.owner = this;\r\n        }\r\n\r\n        if (this.item != undefined) {\r\n            this.item.owner = this;\r\n        }\r\n\r\n        if(this.inventory != undefined) {\r\n            this.inventory = 1;\r\n        }\r\n        \r\n    }\r\n\r\n    move(dx: number, dy: number, map: Map) {\r\n        let moveerror = this.changeFace(dx, dy);\r\n        //if (moveerror) return;\r\n        //if (this.player == true && this.stamina < this.maxStamina && moveerror ) return;\r\n        //else if (this.player == true && this.stamina >= this.maxStamina) this.stamina = 0;\r\n        let tx = this.x + dx;\r\n        let tx2 = this.x2 + dx;\r\n        let ty = this.y + dy;\r\n        let ty2 = this.y2 + dy;\r\n        if (dx == 0 && dy == 0) return;\r\n        if (map.getMovableArea(tx, tx2, ty, ty2)) {\r\n            let targets: Entity[] = [];\r\n            targets = map.getEntitiesAt(tx, tx2, ty, ty2, this);\r\n            if (targets.length == 0) {\r\n                this.x = tx;\r\n                this.x2 = tx2;\r\n                this.y = ty;\r\n                this.y2 = ty2;\r\n            } else {\r\n                if (this.player == true) {\r\n                    if (this.cooldown == 0) {\r\n                        this.attack(targets);\r\n                        this.cooldown = 5;\r\n                    }\r\n                } else {\r\n                    if (this.cooldown == 0) {\r\n                        this.attack(targets);\r\n                        this.cooldown = 20;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n        }\r\n    }\r\n\r\n    angelMove(dx: number, dy: number, map: Map): number[] {\r\n        let moveerror = this.changeFace(dx, dy);\r\n        let nextDir = [dx,dy];\r\n        if (this.player == true && this.stamina < this.maxStamina && moveerror ) return;\r\n        else if (this.player == true) this.stamina = 0\r\n        let tx = this.x + dx;\r\n        let tx2 = this.x2 + dx;\r\n        let ty = this.y + dy;\r\n        let ty2 = this.y2 + dy;\r\n        if (dx == 0 && dy == 0) return;\r\n        let targets: Entity[] = [];\r\n        targets = map.getEntitiesAt(tx, tx2, ty, ty2, this);\r\n        if (targets.length == 0) {\r\n            this.x = tx;\r\n            this.x2 = tx2;\r\n            this.y = ty;\r\n            this.y2 = ty2;\r\n        } else {\r\n            if (this.player == true) {\r\n                if (this.cooldown == 0) {\r\n                    this.attack(targets);\r\n                    this.cooldown = 5;\r\n                }\r\n            } else {\r\n                this.attack(targets);\r\n                return [nextDir[0], nextDir[1]]\r\n            }\r\n        }\r\n        if (this.x2 >= 55) nextDir = [-2,nextDir[1]]\r\n        if (this.x <= 10) nextDir = [2,nextDir[1]]\r\n        if (this.y <= 3) nextDir = [nextDir[0], 2] \r\n        if (this.y2 >= 35) nextDir = [nextDir[0], -2]\r\n        return nextDir\r\n    }\r\n\r\n    private changeFace(dx: number, dy: number):boolean {\r\n        if (dx == -1) {\r\n            if (this.face == 'w') return true;\r\n            this.face = 'w';\r\n            return false;\r\n        }\r\n        if (dx == 1) {\r\n            if (this.face == 'e') return true;\r\n            this.face = 'e';\r\n            return false;\r\n        }\r\n        if (dy == -1) {\r\n            if (this.face == 'n') return true;\r\n            this.face = 'n';\r\n            return false;\r\n        }\r\n        if (dy == 1) {\r\n            if (this.face == 's') return true;\r\n            this.face = 's';\r\n            return false;\r\n        }\r\n    }\r\n\r\n    startMoveCountDown(){\r\n        var moveinterval = setInterval(() => {\r\n            if (this.stamina <= this.maxStamina) {\r\n                this.stamina++;\r\n            }\r\n                // code here will run when the counter reaches zero.\r\n            if (this.fighter.hp == 0) {\r\n                clearInterval(moveinterval);\r\n                deathFunction(this);\r\n            }\r\n        }, 100);\r\n    }\r\n    startAttackCountDown(){\r\n        var attackinterval = setInterval(() => {\r\n            if (this.cooldown > 0) {\r\n                this.cooldown--;\r\n            }\r\n                // code here will run when the counter reaches zero.\r\n            if (this.fighter.hp == 0) {\r\n                clearInterval(attackinterval);\r\n                deathFunction(this);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    equipStart(item:Entity) {\r\n        this.equipment = item.item;\r\n        this.equipment.owner = this;\r\n        item.item.expire = true;\r\n    }\r\n\r\n    equip(item: Entity) {\r\n        if (item.item.type == \"main\") {\r\n            if (this.equipment == undefined) {\r\n                this.equipment = item.item;\r\n                this.equipment.owner = this;\r\n                item.item.expire = true;\r\n                this._map.messageLog.newMessage(this, 'pickup', item)\r\n            } else {\r\n                let drop = CreateDropItem(this.equipment, this.x, this.y);\r\n                let droppedItem = new Entity(this.x, this.y, drop.item.glyph, drop.item.fullname, 1, false, 5, 2, undefined, undefined, false, drop.item); //cria entidade para dropar\r\n                this._map._entities.push(droppedItem);\r\n                this.equipment = item.item;\r\n                this.equipment.owner = this;\r\n                item.item.expire = true;\r\n                this._map.messageLog.newMessage(this, 'switchEquip', droppedItem, item)\r\n                if (this.fighter.hp > this.fighter.max_hp()) this.fighter.hp = this.fighter.max_hp();\r\n            }\r\n        }\r\n        else if (item.item.type == \"sub\") {\r\n            if (this.subequipment == undefined) {\r\n                this.subequipment = item.item;\r\n                this.subequipment.owner = this;\r\n                item.item.expire = true;\r\n                this._map.messageLog.newMessage(this, 'pickup', item)\r\n            } else {\r\n                let drop = CreateDropItem(this.subequipment, this.x, this.y);\r\n                let droppedItem = new Entity(this.x, this.y, drop.item.glyph, drop.item.fullname, 1, false, 5, 2, undefined, undefined, false, drop.item); //cria entidade para dropar\r\n                this._map._entities.push(droppedItem);\r\n                this.subequipment = item.item;\r\n                this.subequipment.owner = this;\r\n                item.item.expire = true;\r\n                this._map.messageLog.newMessage(this, 'switchEquip', droppedItem, item);\r\n                if (this.fighter.hp > this.fighter.max_hp()) this.fighter.hp = this.fighter.max_hp();\r\n            }\r\n        }\r\n        else if (item.item.type == \"bag\") {\r\n            if (item.item.expire == false) {\r\n                this.inventory += 1;\r\n                this._map.messageLog.newMessage(this, 'pickup', item);\r\n            }\r\n            item.item.expire = true;\r\n        }\r\n\r\n    }\r\n\r\n    usePotion() {\r\n        if (this.inventory == 0 ) {\r\n            this._map.messageLog.newMessage(this, 'potionZero');\r\n            return;\r\n        }\r\n        this._map.messageLog.newMessage(this, 'potion');\r\n        this.inventory -= 1;\r\n\r\n        if (this.regen == undefined) {\r\n            this.regen = setInterval(() => {\r\n                if (this.regenMax > 0) {\r\n                    this.fighter.heal(this.fighter.max_hp()*0.035);\r\n                    this.regenMax -= 1;\r\n                }\r\n                if (this.regenMax == 0) {\r\n                    this.regenMax = 10;\r\n                    clearInterval(this.regen);\r\n                    this.regen = undefined;\r\n                }\r\n            }, 500);\r\n        }\r\n\r\n    }\r\n\r\n    attack(targets: Entity[]) {\r\n        if (this.fighter != undefined) {\r\n            if (this.glyph.char == '@') {\r\n                this.fighter.attack(targets[0])\r\n            } else {\r\n                let player: any = undefined;\r\n                targets.forEach(element => {\r\n                    if (element.glyph.char == '@') {\r\n                        player = element;\r\n                    }\r\n                });\r\n                if (player != undefined) { \r\n                    this.fighter.attack(player)\r\n                } else {\r\n                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    skill(targets: Entity[]) {\r\n        targets.forEach((entity, i) => {\r\n            if (entity != this.owner) {\r\n                if (entity.fighter != undefined) {\r\n                    this.owner.fighter.equipment_skill(entity, this);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    hunt(target: Entity){\r\n        let source = this;\r\n        var path = new Path.AStar(target.x, target.y, function(x: number, y: number) {\r\n            // If an entity is present at the tile, can't move there.\r\n            let entity = source._map.getEntitiesAt(this.x1, this.x2, this.y1, this.y2, this);\r\n            if (entity.length > 0) {\r\n                return false;\r\n            }\r\n            return source._map.getTile(x, y)._isWalkable;\r\n        }, {topology: 8});\r\n        var count = 0;\r\n        path.compute(source.x, source.y, function(x: number, y: number) {\r\n            if (count == 1) {\r\n                let dx = x - source.x;\r\n                let dy = y - source.y;\r\n                source.move(dx, dy, source._map);\r\n            }\r\n            if (count > 1) {\r\n                return;\r\n            }\r\n            count++;\r\n        });\r\n    }\r\n\r\n    wander() {\r\n        let dy = 0;\r\n        let dx = 0\r\n        while ( dy ==0 && dx == 0) {\r\n            dy = randint(-1,1);\r\n            dx = randint(-1,1);\r\n        }\r\n        this.move(dx, dy, this._map);\r\n    }\r\n\r\n    kite(target: Entity) {\r\n        let source = this;\r\n        let targetx = this.x - (target.x - this.x);\r\n        let targety = this.y - (target.y - this.y);\r\n        var path = new Path.AStar(targetx, targety, function(x: number, y: number) {\r\n            // If an entity is present at the tile, can't move there.\r\n            if (targetx > this._width-1 || targetx < 1 ) return false; \r\n            if (targety > this._height-1 || targety < 1 ) return false;\r\n\r\n            let entity = source._map.getEntitiesAt(this.x1, this.x2, this.y1, this.y2, this);\r\n            if (entity.length > 0) {\r\n                return false;\r\n            }\r\n            return source._map.getTile(x, y)._isWalkable;\r\n        }, {topology: 8});\r\n        var count = 0;\r\n        path.compute(source.x, source.y, function(x: number, y: number) {\r\n            if (count == 1) {\r\n                let dx = (x - source.x);\r\n                let dy = (y - source.y);\r\n                source.move(dx, dy, source._map);\r\n            }\r\n            if (count > 1) {\r\n                return;\r\n            }\r\n            count++;\r\n        });\r\n    }\r\n\r\n    // startCountDown(seconds: number){\r\n    //     var counter = seconds;\r\n    //     var interval = setInterval(() => {\r\n    //         //(counter);\r\n    //         counter--;\r\n    //         if (counter < 0 ) {\r\n                \r\n    //             // code here will run when the counter reaches zero.\r\n                \r\n    //             //clearInterval(interval);\r\n    //             counter = this.maxStamina;\r\n    //             this.act();\r\n    //         }\t\r\n    //     }, 1000);\r\n    // }\r\n\r\n    act() {\r\n    }\r\n}","export default class Backend {\r\n    getContainer() { return null; }\r\n    setOptions(options) { this._options = options; }\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Equipment } from \"../components/equipment\";\r\nimport { Knife } from \"../content/itens/knife\";\r\nimport { Glyph } from \"../glyph\";\r\nimport { Sword } from \"../content/itens/sword\";\r\nimport { Spear } from \"../content/itens/spear\";\r\nimport { Shield } from \"../content/itens/shield\";\r\nimport { Potion } from \"../content/itens/potion\";\r\nimport { Firerod } from \"../content/itens/firerod\";\r\nimport { Dagger } from \"../content/itens/dagger\";\r\nimport { Icerod } from \"../content/itens/icerod\";\r\nimport { CrossedSwords } from \"../content/itens/crossedsword\";\r\nimport { Offdagger } from \"../content/itens/offdagger\";\r\nimport { Blademail } from \"../content/itens/blademail\";\r\nimport { randint } from \"./randint\";\r\n\r\n// function ItemFactory(name: string, x: number, y): Entity{\r\n//     return new Entity(x, y, new Glyph('Ϯ', [0,0,0], [204, 200, 0]), 'knife', 1, false, 5, 2, undefined, undefined, false, item_component);\r\n// }\r\n\r\nexport function CreateItem(item_choice: string, x: number, y: number, dungeon_level: number): Entity{\r\n    let item_component: Equipment;\r\n    let upgrades: number[] = [0,0,0,0,0];\r\n    for (let index = 0; index < dungeon_level; index++) {\r\n        let i = randint(0,4);\r\n        upgrades[i] += 1;        \r\n    }\r\n    if (item_choice == 'potion') {\r\n        item_component = new Potion()\r\n        let item = new Entity(x, y, new Glyph('ზ', [0,0,0], [50, 200, 50]), item_component.name, 1, false, 5, 2, undefined, undefined, false, item_component);\r\n        item.item.glyph= item.glyph;\r\n        return item;\r\n    }\r\n    if (item_choice == 'knife') {\r\n        item_component = new Knife(undefined, upgrades);\r\n    }\r\n    else if (item_choice == 'sword') {\r\n        item_component = new Sword(undefined, upgrades);\r\n    }\r\n    else if (item_choice == 'spear') {\r\n        item_component = new Spear(undefined, upgrades);\r\n    }\r\n    else if (item_choice == 'dagger') {\r\n        item_component = new Dagger(undefined, upgrades);\r\n    }\r\n    else if (item_choice == 'firerod') {\r\n        item_component = new Firerod(undefined, upgrades);\r\n    }\r\n    else if (item_choice == 'icerod') {\r\n        item_component = new Icerod(undefined, upgrades);\r\n    }\r\n    else if (item_choice == 'crossedswords') {\r\n        item_component = new CrossedSwords(undefined, upgrades);\r\n    }\r\n    else if (item_choice == 'shield') {\r\n        item_component = new Shield(undefined, upgrades);\r\n    }\r\n    else if (item_choice == 'offdagger') {\r\n        item_component = new Offdagger(undefined, upgrades);\r\n    }\r\n    else if (item_choice == 'blademail') {\r\n        item_component = new Blademail(undefined, upgrades);\r\n    }\r\n    let item = new Entity(x, y, item_component.glyph, item_component.fullname, 1, false, 5, 2, undefined, undefined, false, item_component);\r\n    item.item.glyph = item.glyph;\r\n    return item;\r\n}\r\n\r\nexport function CreateDropItem(item: Equipment, x: number, y: number): Entity{\r\n    let item_choice = item.name\r\n    if (item_choice == 'knife') {\r\n        let item_component = new Knife(item);\r\n        let itemDrop = new Entity(x, y, item_component.glyph, item_component.fullname, 1, false, 5, 2, undefined, undefined, false, item_component);\r\n        itemDrop.item.glyph= item.glyph;\r\n        return itemDrop;\r\n    }\r\n    else if (item_choice == 'sword') {\r\n        let item_component = new Sword(item);\r\n        let itemDrop = new Entity(x, y, item_component.glyph, item_component.fullname, 1, false, 5, 2, undefined, undefined, false, item_component);\r\n        itemDrop.item.glyph = item.glyph;\r\n        return itemDrop;\r\n    }\r\n    else if (item_choice == 'spear') {\r\n        let item_component = new Spear(item);\r\n        let itemDrop = new Entity(x, y, item_component.glyph, item_component.fullname, 1, false, 5, 2, undefined, undefined, false, item_component);\r\n        itemDrop.item.glyph = item.glyph;\r\n        return itemDrop;\r\n    }\r\n    else if (item_choice == 'dagger') {\r\n        let item_component = new Dagger(item);\r\n        let itemDrop = new Entity(x, y, item_component.glyph, item_component.fullname, 1, false, 5, 2, undefined, undefined, false, item_component);\r\n        itemDrop.item.glyph = item.glyph;\r\n        return itemDrop;\r\n    }\r\n    else if (item_choice == 'firerod') {\r\n        let item_component = new Firerod(item);\r\n        let itemDrop = new Entity(x, y, item_component.glyph, item_component.fullname, 1, false, 5, 2, undefined, undefined, false, item_component);\r\n        itemDrop.item.glyph = item.glyph;\r\n        return itemDrop;\r\n    }\r\n    else if (item_choice == 'icerod') {\r\n        let item_component = new Icerod(item);\r\n        let itemDrop = new Entity(x, y, item_component.glyph, item_component.fullname, 1, false, 5, 2, undefined, undefined, false, item_component);\r\n        itemDrop.item.glyph = item.glyph;\r\n        return itemDrop;\r\n    }\r\n    else if (item_choice == 'crossedswords') {\r\n        let item_component = new CrossedSwords(item);\r\n        let itemDrop = new Entity(x, y, item_component.glyph, item_component.fullname, 1, false, 5, 2, undefined, undefined, false, item_component);\r\n        itemDrop.item.glyph = item.glyph;\r\n        return itemDrop;\r\n    }\r\n    else if (item_choice == 'shield') {\r\n        let item_component = new Shield(item);\r\n        let itemDrop = new Entity(x, y, item_component.glyph, item_component.fullname, 1, false, 5, 2, undefined, undefined, false, item_component);\r\n        itemDrop.item.glyph = item.glyph;\r\n        return itemDrop;\r\n    }\r\n    else if (item_choice == 'offdagger') {\r\n        let item_component = new Offdagger(item);\r\n        let itemDrop = new Entity(x, y, item_component.glyph, item_component.fullname, 1, false, 5, 2, undefined, undefined, false, item_component);\r\n        itemDrop.item.glyph = item.glyph;\r\n        return itemDrop;\r\n    }\r\n    else if (item_choice == 'blademail') {\r\n        let item_component = new Blademail(item);\r\n        let itemDrop = new Entity(x, y, item_component.glyph, item_component.fullname, 1, false, 5, 2, undefined, undefined, false, item_component);\r\n        itemDrop.item.glyph = item.glyph;\r\n        return itemDrop;\r\n    }\r\n}\r\n\r\n","import { randint } from \"./randint\";\r\n\r\nexport function from_dungeon_level(table: number[][], dungeon_level: number) {\r\n    for (let x = table.length-1; x > -1; x--) {\r\n        if (dungeon_level >= table[x][1]) return table[x][0]\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function random_choice_index(chances: number[]) {\r\n    let sum = chances.reduce((a, b) => a + b, 0);\r\n    let random_chance = randint(0, sum)\r\n    let running_sum = 0\r\n    let choice = 0\r\n    for (const n of chances) {\r\n        running_sum += n;\r\n        if (random_chance <= running_sum) return choice;\r\n        choice += 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function random_choice_from_dict(choice_dict: any) {\r\n    let chances = [];\r\n    let choices = [];\r\n    for (let key in choice_dict) {\r\n        choices.push(key);\r\n        chances.push(choice_dict[key]);\r\n    }\r\n\r\n    return choices[random_choice_index(chances)]\r\n\r\n}","import { Entity } from \"../entity\";\r\nimport { deathFunction } from \"../helper/deathFunction\";\r\nimport { MessageType } from \"../helper/messageType\";\r\n\r\nexport class Fighter {\r\n    owner: Entity;\r\n    rank: number;\r\n    base_max_hp: number;\r\n    hp : number;\r\n    base_defense: number;\r\n    base_power: number\r\n    xp: number;\r\n    status: string;\r\n    current_exp: number;\r\n    nextRank: number;\r\n    unspentPoints: number;\r\n\r\n    constructor(hp: number, def: number, atk: number, xp: number) {\r\n        this.hp = hp;\r\n        this.base_max_hp = hp;\r\n        this.base_defense = def;\r\n        this.base_power = atk;\r\n        this.xp = xp;\r\n        this.status = 'normal'\r\n        this.current_exp = 0;\r\n        this.nextRank = 50;\r\n        this.unspentPoints = 0;\r\n        this.rank = 1;\r\n    }\r\n\r\n    power() {\r\n        let bonus = 0;\r\n        if (this.owner != undefined){\r\n            if (this.owner.equipment != undefined) bonus += this.owner.equipment.power_bonus;\r\n            if (this.owner.subequipment != undefined) bonus += this.owner.subequipment.power_bonus;\r\n        } \r\n        let totalBase = (this.base_power + bonus) < 0 ? 0 : this.base_power + bonus \r\n        return totalBase\r\n    }\r\n\r\n    skill_power() {\r\n        let bonus = 1;\r\n        if (this.owner.ai != undefined) return this.power() * this.owner.ai.skill_bonus;\r\n        if (this.owner.equipment != undefined)  bonus += this.owner.equipment.skill_bonus;\r\n        if (this.owner.subequipment != undefined) bonus += this.owner.equipment.skill_bonus;\r\n        let basePower = this.power() < 1 ? 1 : this.power();\r\n        return basePower * bonus;\r\n    }\r\n\r\n    defense() {\r\n        let bonus = 0;\r\n        if (this.owner != undefined){\r\n            if(this.owner.equipment != undefined) bonus += this.owner.equipment.defense_bonus;\r\n            if(this.owner.subequipment != undefined) bonus += this.owner.equipment.defense_bonus;\r\n        } \r\n        let totalBase = (this.base_defense + bonus) < 0 ? 0 : this.base_defense + bonus \r\n        return totalBase\r\n    }\r\n\r\n    max_hp() {\r\n        let bonus = 0;\r\n        if (this.owner != undefined){\r\n            if (this.owner.equipment != undefined) bonus += this.owner.equipment.hp_bonus;\r\n            if (this.owner.subequipment != undefined) bonus += this.owner.subequipment.hp_bonus;\r\n        } \r\n        return this.base_max_hp + bonus\r\n    }\r\n\r\n    takeDamage(amount: number, attacker: string): boolean{\r\n        if (this.owner.player == true && this.owner.subequipment != undefined) {\r\n            amount = this.owner.subequipment.defend(amount);\r\n        }\r\n        this.hp -= amount\r\n        if (this.hp <= 0) {\r\n            this.hp = 0\r\n            if (this.owner.player == true) {\r\n                this.owner.lastxp = this.current_exp;\r\n                this.owner.killedby = attacker;\r\n            }\r\n            this.owner._map.messageLog.newMessage(this.owner, 'death', this.owner, undefined);\r\n            // let msg: MessageType = {\r\n            //     message: \"%c{0}\" +this.owner.name + \"%c{1} died\",\r\n            //     type: 'death',\r\n            //     color0: this.owner.glyph.foreground,\r\n            //     color1: [255,255,255],\r\n            //     color2: [255,255,255]\r\n            // };\r\n            // this.owner._map.messageLog.addMessage(msg);\r\n            deathFunction(this.owner)\r\n            return true;\r\n        }\r\n    }\r\n\r\n    heal(amount: number) {\r\n        this.hp += amount;\r\n        if (this.hp > this.max_hp()) {\r\n            this.hp = this.max_hp()\r\n        }\r\n    }\r\n\r\n    attack(target: Entity): MessageType {\r\n        let result: MessageType = {\r\n            message : '',\r\n            type : 'fight',\r\n            color0 : target.glyph.foreground,\r\n            color1 : [255,255,255],\r\n            color2 : [255,255,255]\r\n        };\r\n        let damage = this.power() * (1 - (target.fighter.defense()/(10 + target.fighter.defense())));\r\n        damage = +damage.toFixed(2);\r\n\r\n        if (damage > 0) {\r\n            // results.append({'message': Message('{0} ataca {1} e mandou {2} de dano.'.format(\r\n            //     this.owner.name.capitalize(), target.name, str(round(damage))), libtcod.white)})\r\n            // results.extend(target.fighter.take_damage(damage))\r\n            let death = target.fighter.takeDamage(damage, this.owner.name);\r\n            if (death) this.getExp(target.fighter.xp);\r\n            this.owner._map.messageLog.newMessage(this.owner, 'fight', target, undefined, damage.toString());\r\n            //result.message = this.owner.name + \" bateu em um %c{0}\" + target.name + \"%c{1} com \"+ damage + \" de dano! (\" +target.fighter.hp.toFixed(2) +\")\";\r\n        } else {\r\n            this.owner._map.messageLog.newMessage(this.owner, 'fightZeroDamage', target, undefined, damage.toString());\r\n            //result.message = this.owner.name + \" bateu em um %c{0}\" + target.name + \"%c{1} mas não causou dano!\";\r\n        }\r\n        return result\r\n    }\r\n\r\n    equipment_skill(target: Entity, dmgBlock: Entity) {\r\n        let weaponskillmod = dmgBlock.damage.multiplier;\r\n        let result: MessageType = {\r\n            message : '',\r\n            type : 'skill',\r\n            color0 : target.glyph.foreground,\r\n            color1 : [255,255,255],\r\n            color2 : [255,255,255]\r\n        };\r\n\r\n        let damage = 0;\r\n        if (this.owner.ai != undefined) damage = (this.power()*weaponskillmod) * (1 - (target.fighter.defense()/(7 + target.fighter.defense())));\r\n        else damage = (this.skill_power()) * (1 - (target.fighter.defense()/(7 + target.fighter.defense())));\r\n        damage = +damage.toFixed(2);\r\n\r\n        if (damage > 0) {\r\n            // results.append({'message': Message('{0} ataca {1} e mandou {2} de dano.'.format(\r\n            //     this.owner.name.capitalize(), target.name, str(round(damage))), libtcod.white)})\r\n            // results.extend(target.fighter.take_damage(damage))\r\n            let death = target.fighter.takeDamage(damage, this.owner.name);\r\n            if (death) this.getExp(target.fighter.xp);\r\n            this.owner._map.messageLog.newMessage(this.owner, 'skill', target, dmgBlock, damage.toString());\r\n            //result.message = this.owner.name + \" usou uma \" + dmgBlock.name + \" em um %c{0}\" + target.name + \"%c{1} com \"+ damage + \" de dano! (\" +target.fighter.hp.toFixed(2) +\")\";\r\n        } else {\r\n            this.owner._map.messageLog.newMessage(this.owner, 'skillZeroDamage', target, dmgBlock, damage.toString());\r\n            //result.message = this.owner.name + \" bateu em um %c{0}\" + target.name + \"%c{1} mas não causou dano!\";\r\n        }\r\n        return result\r\n    }\r\n\r\n    getExp(amount: number) {\r\n        this.current_exp += amount;\r\n        while (this.current_exp >= this.nextRank) {\r\n            this.rank += 1;\r\n            this.nextRank += (this.nextRank + 60)/2.9;\r\n            this.unspentPoints += 1;\r\n        }\r\n    }\r\n}\r\n","import Backend from \"./backend.js\";\r\nexport default class Canvas extends Backend {\r\n    constructor() {\r\n        super();\r\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n    }\r\n    schedule(cb) { requestAnimationFrame(cb); }\r\n    getContainer() { return this._ctx.canvas; }\r\n    setOptions(opts) {\r\n        super.setOptions(opts);\r\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\r\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\r\n        this._ctx.font = font;\r\n        this._updateSize();\r\n        this._ctx.font = font;\r\n        this._ctx.textAlign = \"center\";\r\n        this._ctx.textBaseline = \"middle\";\r\n    }\r\n    clear() {\r\n        this._ctx.fillStyle = this._options.bg;\r\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\r\n    }\r\n    eventToPosition(x, y) {\r\n        let canvas = this._ctx.canvas;\r\n        let rect = canvas.getBoundingClientRect();\r\n        x -= rect.left;\r\n        y -= rect.top;\r\n        x *= canvas.width / rect.width;\r\n        y *= canvas.height / rect.height;\r\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\r\n            return [-1, -1];\r\n        }\r\n        return this._normalizedEventToPosition(x, y);\r\n    }\r\n}\r\n","import Canvas from \"./canvas.js\";\r\nimport { mod } from \"../util.js\";\r\nexport default class Hex extends Canvas {\r\n    constructor() {\r\n        super();\r\n        this._spacingX = 0;\r\n        this._spacingY = 0;\r\n        this._hexSize = 0;\r\n    }\r\n    draw(data, clearBefore) {\r\n        let [x, y, ch, fg, bg] = data;\r\n        let px = [\r\n            (x + 1) * this._spacingX,\r\n            y * this._spacingY + this._hexSize\r\n        ];\r\n        if (this._options.transpose) {\r\n            px.reverse();\r\n        }\r\n        if (clearBefore) {\r\n            this._ctx.fillStyle = bg;\r\n            this._fill(px[0], px[1]);\r\n        }\r\n        if (!ch) {\r\n            return;\r\n        }\r\n        this._ctx.fillStyle = fg;\r\n        let chars = [].concat(ch);\r\n        for (let i = 0; i < chars.length; i++) {\r\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\r\n        }\r\n    }\r\n    computeSize(availWidth, availHeight) {\r\n        if (this._options.transpose) {\r\n            availWidth += availHeight;\r\n            availHeight = availWidth - availHeight;\r\n            availWidth -= availHeight;\r\n        }\r\n        let width = Math.floor(availWidth / this._spacingX) - 1;\r\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\r\n        return [width, height];\r\n    }\r\n    computeFontSize(availWidth, availHeight) {\r\n        if (this._options.transpose) {\r\n            availWidth += availHeight;\r\n            availHeight = availWidth - availHeight;\r\n            availWidth -= availHeight;\r\n        }\r\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\r\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\r\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\r\n        let oldFont = this._ctx.font;\r\n        this._ctx.font = \"100px \" + this._options.fontFamily;\r\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\r\n        this._ctx.font = oldFont;\r\n        let ratio = width / 100;\r\n        hexSize = Math.floor(hexSize) + 1;\r\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\r\n        return Math.ceil(fontSize) - 1;\r\n    }\r\n    _normalizedEventToPosition(x, y) {\r\n        let nodeSize;\r\n        if (this._options.transpose) {\r\n            x += y;\r\n            y = x - y;\r\n            x -= y;\r\n            nodeSize = this._ctx.canvas.width;\r\n        }\r\n        else {\r\n            nodeSize = this._ctx.canvas.height;\r\n        }\r\n        let size = nodeSize / this._options.height;\r\n        y = Math.floor(y / size);\r\n        if (mod(y, 2)) {\r\n            x -= this._spacingX;\r\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\r\n        }\r\n        else {\r\n            x = 2 * Math.floor(x / (2 * this._spacingX));\r\n        }\r\n        return [x, y];\r\n    }\r\n    _fill(cx, cy) {\r\n        let a = this._hexSize;\r\n        let b = this._options.border;\r\n        const ctx = this._ctx;\r\n        ctx.beginPath();\r\n        if (this._options.transpose) {\r\n            ctx.moveTo(cx - a + b, cy);\r\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\r\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\r\n            ctx.lineTo(cx + a - b, cy);\r\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\r\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\r\n            ctx.lineTo(cx - a + b, cy);\r\n        }\r\n        else {\r\n            ctx.moveTo(cx, cy - a + b);\r\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\r\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\r\n            ctx.lineTo(cx, cy + a - b);\r\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\r\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\r\n            ctx.lineTo(cx, cy - a + b);\r\n        }\r\n        ctx.fill();\r\n    }\r\n    _updateSize() {\r\n        const opts = this._options;\r\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\r\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\r\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\r\n        this._spacingY = this._hexSize * 1.5;\r\n        let xprop;\r\n        let yprop;\r\n        if (opts.transpose) {\r\n            xprop = \"height\";\r\n            yprop = \"width\";\r\n        }\r\n        else {\r\n            xprop = \"width\";\r\n            yprop = \"height\";\r\n        }\r\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\r\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\r\n    }\r\n}\r\n","import Canvas from \"./canvas.js\";\r\nexport default class Rect extends Canvas {\r\n    constructor() {\r\n        super();\r\n        this._spacingX = 0;\r\n        this._spacingY = 0;\r\n        this._canvasCache = {};\r\n    }\r\n    setOptions(options) {\r\n        super.setOptions(options);\r\n        this._canvasCache = {};\r\n    }\r\n    draw(data, clearBefore) {\r\n        if (Rect.cache) {\r\n            this._drawWithCache(data);\r\n        }\r\n        else {\r\n            this._drawNoCache(data, clearBefore);\r\n        }\r\n    }\r\n    _drawWithCache(data) {\r\n        let [x, y, ch, fg, bg] = data;\r\n        let hash = \"\" + ch + fg + bg;\r\n        let canvas;\r\n        if (hash in this._canvasCache) {\r\n            canvas = this._canvasCache[hash];\r\n        }\r\n        else {\r\n            let b = this._options.border;\r\n            canvas = document.createElement(\"canvas\");\r\n            let ctx = canvas.getContext(\"2d\");\r\n            canvas.width = this._spacingX;\r\n            canvas.height = this._spacingY;\r\n            ctx.fillStyle = bg;\r\n            ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\r\n            if (ch) {\r\n                ctx.fillStyle = fg;\r\n                ctx.font = this._ctx.font;\r\n                ctx.textAlign = \"center\";\r\n                ctx.textBaseline = \"middle\";\r\n                let chars = [].concat(ch);\r\n                for (let i = 0; i < chars.length; i++) {\r\n                    ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\r\n                }\r\n            }\r\n            this._canvasCache[hash] = canvas;\r\n        }\r\n        this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\r\n    }\r\n    _drawNoCache(data, clearBefore) {\r\n        let [x, y, ch, fg, bg] = data;\r\n        if (clearBefore) {\r\n            let b = this._options.border;\r\n            this._ctx.fillStyle = bg;\r\n            this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\r\n        }\r\n        if (!ch) {\r\n            return;\r\n        }\r\n        this._ctx.fillStyle = fg;\r\n        let chars = [].concat(ch);\r\n        for (let i = 0; i < chars.length; i++) {\r\n            this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\r\n        }\r\n    }\r\n    computeSize(availWidth, availHeight) {\r\n        let width = Math.floor(availWidth / this._spacingX);\r\n        let height = Math.floor(availHeight / this._spacingY);\r\n        return [width, height];\r\n    }\r\n    computeFontSize(availWidth, availHeight) {\r\n        let boxWidth = Math.floor(availWidth / this._options.width);\r\n        let boxHeight = Math.floor(availHeight / this._options.height);\r\n        let oldFont = this._ctx.font;\r\n        this._ctx.font = \"100px \" + this._options.fontFamily;\r\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\r\n        this._ctx.font = oldFont;\r\n        let ratio = width / 100;\r\n        let widthFraction = ratio * boxHeight / boxWidth;\r\n        if (widthFraction > 1) {\r\n            boxHeight = Math.floor(boxHeight / widthFraction);\r\n        }\r\n        return Math.floor(boxHeight / this._options.spacing);\r\n    }\r\n    _normalizedEventToPosition(x, y) {\r\n        return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\r\n    }\r\n    _updateSize() {\r\n        const opts = this._options;\r\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\r\n        this._spacingX = Math.ceil(opts.spacing * charWidth);\r\n        this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\r\n        if (opts.forceSquareRatio) {\r\n            this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\r\n        }\r\n        this._ctx.canvas.width = opts.width * this._spacingX;\r\n        this._ctx.canvas.height = opts.height * this._spacingY;\r\n    }\r\n}\r\nRect.cache = false;\r\n","import Canvas from \"./canvas.js\";\r\nexport default class Tile extends Canvas {\r\n    constructor() {\r\n        super();\r\n        this._colorCanvas = document.createElement(\"canvas\");\r\n    }\r\n    draw(data, clearBefore) {\r\n        let [x, y, ch, fg, bg] = data;\r\n        let tileWidth = this._options.tileWidth;\r\n        let tileHeight = this._options.tileHeight;\r\n        if (clearBefore) {\r\n            if (this._options.tileColorize) {\r\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\r\n            }\r\n            else {\r\n                this._ctx.fillStyle = bg;\r\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\r\n            }\r\n        }\r\n        if (!ch) {\r\n            return;\r\n        }\r\n        let chars = [].concat(ch);\r\n        let fgs = [].concat(fg);\r\n        let bgs = [].concat(bg);\r\n        for (let i = 0; i < chars.length; i++) {\r\n            let tile = this._options.tileMap[chars[i]];\r\n            if (!tile) {\r\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\r\n            }\r\n            if (this._options.tileColorize) {\r\n                let canvas = this._colorCanvas;\r\n                let context = canvas.getContext(\"2d\");\r\n                context.globalCompositeOperation = \"source-over\";\r\n                context.clearRect(0, 0, tileWidth, tileHeight);\r\n                let fg = fgs[i];\r\n                let bg = bgs[i];\r\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\r\n                if (fg != \"transparent\") {\r\n                    context.fillStyle = fg;\r\n                    context.globalCompositeOperation = \"source-atop\";\r\n                    context.fillRect(0, 0, tileWidth, tileHeight);\r\n                }\r\n                if (bg != \"transparent\") {\r\n                    context.fillStyle = bg;\r\n                    context.globalCompositeOperation = \"destination-over\";\r\n                    context.fillRect(0, 0, tileWidth, tileHeight);\r\n                }\r\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\r\n            }\r\n            else {\r\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\r\n            }\r\n        }\r\n    }\r\n    computeSize(availWidth, availHeight) {\r\n        let width = Math.floor(availWidth / this._options.tileWidth);\r\n        let height = Math.floor(availHeight / this._options.tileHeight);\r\n        return [width, height];\r\n    }\r\n    computeFontSize() {\r\n        throw new Error(\"Tile backend does not understand font size\");\r\n    }\r\n    _normalizedEventToPosition(x, y) {\r\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\r\n    }\r\n    _updateSize() {\r\n        const opts = this._options;\r\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\r\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\r\n        this._colorCanvas.width = opts.tileWidth;\r\n        this._colorCanvas.height = opts.tileHeight;\r\n    }\r\n}\r\n","const RE_COLORS = /%([bc]){([^}]*)}/g;\r\nexport const TYPE_TEXT = 0;\r\nexport const TYPE_NEWLINE = 1;\r\nexport const TYPE_FG = 2;\r\nexport const TYPE_BG = 3;\r\nexport function measure(str, maxWidth) {\r\n    let result = { width: 0, height: 1 };\r\n    let tokens = tokenize(str, maxWidth);\r\n    let lineWidth = 0;\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        let token = tokens[i];\r\n        switch (token.type) {\r\n            case TYPE_TEXT:\r\n                lineWidth += token.value.length;\r\n                break;\r\n            case TYPE_NEWLINE:\r\n                result.height++;\r\n                result.width = Math.max(result.width, lineWidth);\r\n                lineWidth = 0;\r\n                break;\r\n        }\r\n    }\r\n    result.width = Math.max(result.width, lineWidth);\r\n    return result;\r\n}\r\nexport function tokenize(str, maxWidth) {\r\n    let result = [];\r\n    let offset = 0;\r\n    str.replace(RE_COLORS, function (match, type, name, index) {\r\n        let part = str.substring(offset, index);\r\n        if (part.length) {\r\n            result.push({\r\n                type: TYPE_TEXT,\r\n                value: part\r\n            });\r\n        }\r\n        result.push({\r\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\r\n            value: name.trim()\r\n        });\r\n        offset = index + match.length;\r\n        return \"\";\r\n    });\r\n    let part = str.substring(offset);\r\n    if (part.length) {\r\n        result.push({\r\n            type: TYPE_TEXT,\r\n            value: part\r\n        });\r\n    }\r\n    return breakLines(result, maxWidth);\r\n}\r\nfunction breakLines(tokens, maxWidth) {\r\n    if (!maxWidth) {\r\n        maxWidth = Infinity;\r\n    }\r\n    let i = 0;\r\n    let lineLength = 0;\r\n    let lastTokenWithSpace = -1;\r\n    while (i < tokens.length) {\r\n        let token = tokens[i];\r\n        if (token.type == TYPE_NEWLINE) {\r\n            lineLength = 0;\r\n            lastTokenWithSpace = -1;\r\n        }\r\n        if (token.type != TYPE_TEXT) {\r\n            i++;\r\n            continue;\r\n        }\r\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\r\n            token.value = token.value.substring(1);\r\n        }\r\n        let index = token.value.indexOf(\"\\n\");\r\n        if (index != -1) {\r\n            token.value = breakInsideToken(tokens, i, index, true);\r\n            let arr = token.value.split(\"\");\r\n            while (arr.length && arr[arr.length - 1] == \" \") {\r\n                arr.pop();\r\n            }\r\n            token.value = arr.join(\"\");\r\n        }\r\n        if (!token.value.length) {\r\n            tokens.splice(i, 1);\r\n            continue;\r\n        }\r\n        if (lineLength + token.value.length > maxWidth) {\r\n            let index = -1;\r\n            while (1) {\r\n                let nextIndex = token.value.indexOf(\" \", index + 1);\r\n                if (nextIndex == -1) {\r\n                    break;\r\n                }\r\n                if (lineLength + nextIndex > maxWidth) {\r\n                    break;\r\n                }\r\n                index = nextIndex;\r\n            }\r\n            if (index != -1) {\r\n                token.value = breakInsideToken(tokens, i, index, true);\r\n            }\r\n            else if (lastTokenWithSpace != -1) {\r\n                let token = tokens[lastTokenWithSpace];\r\n                let breakIndex = token.value.lastIndexOf(\" \");\r\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\r\n                i = lastTokenWithSpace;\r\n            }\r\n            else {\r\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\r\n            }\r\n        }\r\n        else {\r\n            lineLength += token.value.length;\r\n            if (token.value.indexOf(\" \") != -1) {\r\n                lastTokenWithSpace = i;\r\n            }\r\n        }\r\n        i++;\r\n    }\r\n    tokens.push({ type: TYPE_NEWLINE });\r\n    let lastTextToken = null;\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        let token = tokens[i];\r\n        switch (token.type) {\r\n            case TYPE_TEXT:\r\n                lastTextToken = token;\r\n                break;\r\n            case TYPE_NEWLINE:\r\n                if (lastTextToken) {\r\n                    let arr = lastTextToken.value.split(\"\");\r\n                    while (arr.length && arr[arr.length - 1] == \" \") {\r\n                        arr.pop();\r\n                    }\r\n                    lastTextToken.value = arr.join(\"\");\r\n                }\r\n                lastTextToken = null;\r\n                break;\r\n        }\r\n    }\r\n    tokens.pop();\r\n    return tokens;\r\n}\r\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\r\n    let newBreakToken = {\r\n        type: TYPE_NEWLINE\r\n    };\r\n    let newTextToken = {\r\n        type: TYPE_TEXT,\r\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\r\n    };\r\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\r\n    return tokens[tokenIndex].value.substring(0, breakIndex);\r\n}\r\n","import Hex from \"./hex.js\";\r\nimport Rect from \"./rect.js\";\r\nimport Tile from \"./tile.js\";\r\nimport Term from \"./term.js\";\r\nimport * as Text from \"../text.js\";\r\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\r\nconst BACKENDS = {\r\n    \"hex\": Hex,\r\n    \"rect\": Rect,\r\n    \"tile\": Tile,\r\n    \"term\": Term\r\n};\r\nconst DEFAULT_OPTIONS = {\r\n    width: DEFAULT_WIDTH,\r\n    height: DEFAULT_HEIGHT,\r\n    transpose: false,\r\n    layout: \"rect\",\r\n    fontSize: 15,\r\n    spacing: 1,\r\n    border: 0,\r\n    forceSquareRatio: false,\r\n    fontFamily: \"monospace\",\r\n    fontStyle: \"\",\r\n    fg: \"#ccc\",\r\n    bg: \"#000\",\r\n    tileWidth: 32,\r\n    tileHeight: 32,\r\n    tileMap: {},\r\n    tileSet: null,\r\n    tileColorize: false\r\n};\r\nexport default class Display {\r\n    constructor(options = {}) {\r\n        this._data = {};\r\n        this._dirty = false;\r\n        this._options = {};\r\n        options = Object.assign({}, DEFAULT_OPTIONS, options);\r\n        this.setOptions(options);\r\n        this.DEBUG = this.DEBUG.bind(this);\r\n        this._tick = this._tick.bind(this);\r\n        this._backend.schedule(this._tick);\r\n    }\r\n    DEBUG(x, y, what) {\r\n        let colors = [this._options.bg, this._options.fg];\r\n        this.draw(x, y, null, null, colors[what % colors.length]);\r\n    }\r\n    clear() {\r\n        this._data = {};\r\n        this._dirty = true;\r\n    }\r\n    setOptions(options) {\r\n        Object.assign(this._options, options);\r\n        if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\r\n            if (options.layout) {\r\n                let ctor = BACKENDS[options.layout];\r\n                this._backend = new ctor();\r\n            }\r\n            this._backend.setOptions(this._options);\r\n            this._dirty = true;\r\n        }\r\n        return this;\r\n    }\r\n    getOptions() { return this._options; }\r\n    getContainer() { return this._backend.getContainer(); }\r\n    computeSize(availWidth, availHeight) {\r\n        return this._backend.computeSize(availWidth, availHeight);\r\n    }\r\n    computeFontSize(availWidth, availHeight) {\r\n        return this._backend.computeFontSize(availWidth, availHeight);\r\n    }\r\n    computeTileSize(availWidth, availHeight) {\r\n        let width = Math.floor(availWidth / this._options.width);\r\n        let height = Math.floor(availHeight / this._options.height);\r\n        return [width, height];\r\n    }\r\n    eventToPosition(e) {\r\n        let x, y;\r\n        if (\"touches\" in e) {\r\n            x = e.touches[0].clientX;\r\n            y = e.touches[0].clientY;\r\n        }\r\n        else {\r\n            x = e.clientX;\r\n            y = e.clientY;\r\n        }\r\n        return this._backend.eventToPosition(x, y);\r\n    }\r\n    draw(x, y, ch, fg, bg) {\r\n        if (!fg) {\r\n            fg = this._options.fg;\r\n        }\r\n        if (!bg) {\r\n            bg = this._options.bg;\r\n        }\r\n        let key = `${x},${y}`;\r\n        this._data[key] = [x, y, ch, fg, bg];\r\n        if (this._dirty === true) {\r\n            return;\r\n        }\r\n        if (!this._dirty) {\r\n            this._dirty = {};\r\n        }\r\n        this._dirty[key] = true;\r\n    }\r\n    drawText(x, y, text, maxWidth) {\r\n        let fg = null;\r\n        let bg = null;\r\n        let cx = x;\r\n        let cy = y;\r\n        let lines = 1;\r\n        if (!maxWidth) {\r\n            maxWidth = this._options.width - x;\r\n        }\r\n        let tokens = Text.tokenize(text, maxWidth);\r\n        while (tokens.length) {\r\n            let token = tokens.shift();\r\n            switch (token.type) {\r\n                case Text.TYPE_TEXT:\r\n                    let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\r\n                    for (let i = 0; i < token.value.length; i++) {\r\n                        let cc = token.value.charCodeAt(i);\r\n                        let c = token.value.charAt(i);\r\n                        isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\r\n                        isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\r\n                        if (isPrevFullWidth && !isFullWidth && !isSpace) {\r\n                            cx++;\r\n                        }\r\n                        if (isFullWidth && !isPrevSpace) {\r\n                            cx++;\r\n                        }\r\n                        this.draw(cx++, cy, c, fg, bg);\r\n                        isPrevSpace = isSpace;\r\n                        isPrevFullWidth = isFullWidth;\r\n                    }\r\n                    break;\r\n                case Text.TYPE_FG:\r\n                    fg = token.value || null;\r\n                    break;\r\n                case Text.TYPE_BG:\r\n                    bg = token.value || null;\r\n                    break;\r\n                case Text.TYPE_NEWLINE:\r\n                    cx = x;\r\n                    cy++;\r\n                    lines++;\r\n                    break;\r\n            }\r\n        }\r\n        return lines;\r\n    }\r\n    _tick() {\r\n        this._backend.schedule(this._tick);\r\n        if (!this._dirty) {\r\n            return;\r\n        }\r\n        if (this._dirty === true) {\r\n            this._backend.clear();\r\n            for (let id in this._data) {\r\n                this._draw(id, false);\r\n            }\r\n        }\r\n        else {\r\n            for (let key in this._dirty) {\r\n                this._draw(key, true);\r\n            }\r\n        }\r\n        this._dirty = false;\r\n    }\r\n    _draw(key, clearBefore) {\r\n        let data = this._data[key];\r\n        if (data[4] != this._options.bg) {\r\n            clearBefore = true;\r\n        }\r\n        this._backend.draw(data, clearBefore);\r\n    }\r\n}\r\nDisplay.Rect = Rect;\r\nDisplay.Hex = Hex;\r\nDisplay.Tile = Tile;\r\nDisplay.Term = Term;\r\n","import RNG from \"./rng.js\";\r\nexport default class StringGenerator {\r\n    constructor(options) {\r\n        this._options = {\r\n            words: false,\r\n            order: 3,\r\n            prior: 0.001\r\n        };\r\n        Object.assign(this._options, options);\r\n        this._boundary = String.fromCharCode(0);\r\n        this._suffix = this._boundary;\r\n        this._prefix = [];\r\n        for (let i = 0; i < this._options.order; i++) {\r\n            this._prefix.push(this._boundary);\r\n        }\r\n        this._priorValues = {};\r\n        this._priorValues[this._boundary] = this._options.prior;\r\n        this._data = {};\r\n    }\r\n    clear() {\r\n        this._data = {};\r\n        this._priorValues = {};\r\n    }\r\n    generate() {\r\n        let result = [this._sample(this._prefix)];\r\n        while (result[result.length - 1] != this._boundary) {\r\n            result.push(this._sample(result));\r\n        }\r\n        return this._join(result.slice(0, -1));\r\n    }\r\n    observe(string) {\r\n        let tokens = this._split(string);\r\n        for (let i = 0; i < tokens.length; i++) {\r\n            this._priorValues[tokens[i]] = this._options.prior;\r\n        }\r\n        tokens = this._prefix.concat(tokens).concat(this._suffix);\r\n        for (let i = this._options.order; i < tokens.length; i++) {\r\n            let context = tokens.slice(i - this._options.order, i);\r\n            let event = tokens[i];\r\n            for (let j = 0; j < context.length; j++) {\r\n                let subcontext = context.slice(j);\r\n                this._observeEvent(subcontext, event);\r\n            }\r\n        }\r\n    }\r\n    getStats() {\r\n        let parts = [];\r\n        let priorCount = Object.keys(this._priorValues).length;\r\n        priorCount--;\r\n        parts.push(\"distinct samples: \" + priorCount);\r\n        let dataCount = Object.keys(this._data).length;\r\n        let eventCount = 0;\r\n        for (let p in this._data) {\r\n            eventCount += Object.keys(this._data[p]).length;\r\n        }\r\n        parts.push(\"dictionary size (contexts): \" + dataCount);\r\n        parts.push(\"dictionary size (events): \" + eventCount);\r\n        return parts.join(\", \");\r\n    }\r\n    _split(str) {\r\n        return str.split(this._options.words ? /\\s+/ : \"\");\r\n    }\r\n    _join(arr) {\r\n        return arr.join(this._options.words ? \" \" : \"\");\r\n    }\r\n    _observeEvent(context, event) {\r\n        let key = this._join(context);\r\n        if (!(key in this._data)) {\r\n            this._data[key] = {};\r\n        }\r\n        let data = this._data[key];\r\n        if (!(event in data)) {\r\n            data[event] = 0;\r\n        }\r\n        data[event]++;\r\n    }\r\n    _sample(context) {\r\n        context = this._backoff(context);\r\n        let key = this._join(context);\r\n        let data = this._data[key];\r\n        let available = {};\r\n        if (this._options.prior) {\r\n            for (let event in this._priorValues) {\r\n                available[event] = this._priorValues[event];\r\n            }\r\n            for (let event in data) {\r\n                available[event] += data[event];\r\n            }\r\n        }\r\n        else {\r\n            available = data;\r\n        }\r\n        return RNG.getWeightedValue(available);\r\n    }\r\n    _backoff(context) {\r\n        if (context.length > this._options.order) {\r\n            context = context.slice(-this._options.order);\r\n        }\r\n        else if (context.length < this._options.order) {\r\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\r\n        }\r\n        while (!(this._join(context) in this._data) && context.length > 0) {\r\n            context = context.slice(1);\r\n        }\r\n        return context;\r\n    }\r\n}\r\n","export default class EventQueue {\r\n    constructor() {\r\n        this._time = 0;\r\n        this._events = [];\r\n        this._eventTimes = [];\r\n    }\r\n    getTime() { return this._time; }\r\n    clear() {\r\n        this._events = [];\r\n        this._eventTimes = [];\r\n        return this;\r\n    }\r\n    add(event, time) {\r\n        let index = this._events.length;\r\n        for (let i = 0; i < this._eventTimes.length; i++) {\r\n            if (this._eventTimes[i] > time) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        this._events.splice(index, 0, event);\r\n        this._eventTimes.splice(index, 0, time);\r\n    }\r\n    get() {\r\n        if (!this._events.length) {\r\n            return null;\r\n        }\r\n        let time = this._eventTimes.splice(0, 1)[0];\r\n        if (time > 0) {\r\n            this._time += time;\r\n            for (let i = 0; i < this._eventTimes.length; i++) {\r\n                this._eventTimes[i] -= time;\r\n            }\r\n        }\r\n        return this._events.splice(0, 1)[0];\r\n    }\r\n    getEventTime(event) {\r\n        let index = this._events.indexOf(event);\r\n        if (index == -1) {\r\n            return undefined;\r\n        }\r\n        return this._eventTimes[index];\r\n    }\r\n    remove(event) {\r\n        let index = this._events.indexOf(event);\r\n        if (index == -1) {\r\n            return false;\r\n        }\r\n        this._remove(index);\r\n        return true;\r\n    }\r\n    ;\r\n    _remove(index) {\r\n        this._events.splice(index, 1);\r\n        this._eventTimes.splice(index, 1);\r\n    }\r\n    ;\r\n}\r\n","import EventQueue from \"../eventqueue.js\";\r\nexport default class Scheduler {\r\n    constructor() {\r\n        this._queue = new EventQueue();\r\n        this._repeat = [];\r\n        this._current = null;\r\n    }\r\n    getTime() { return this._queue.getTime(); }\r\n    add(item, repeat) {\r\n        if (repeat) {\r\n            this._repeat.push(item);\r\n        }\r\n        return this;\r\n    }\r\n    getTimeOf(item) {\r\n        return this._queue.getEventTime(item);\r\n    }\r\n    clear() {\r\n        this._queue.clear();\r\n        this._repeat = [];\r\n        this._current = null;\r\n        return this;\r\n    }\r\n    remove(item) {\r\n        let result = this._queue.remove(item);\r\n        let index = this._repeat.indexOf(item);\r\n        if (index != -1) {\r\n            this._repeat.splice(index, 1);\r\n        }\r\n        if (this._current == item) {\r\n            this._current = null;\r\n        }\r\n        return result;\r\n    }\r\n    next() {\r\n        this._current = this._queue.get();\r\n        return this._current;\r\n    }\r\n}\r\n","import Simple from \"./simple.js\";\r\nimport Speed from \"./speed.js\";\r\nimport Action from \"./action.js\";\r\nexport default { Simple, Speed, Action };\r\n","import Scheduler from \"./scheduler.js\";\r\nexport default class Simple extends Scheduler {\r\n    add(item, repeat) {\r\n        this._queue.add(item, 0);\r\n        return super.add(item, repeat);\r\n    }\r\n    next() {\r\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\r\n            this._queue.add(this._current, 0);\r\n        }\r\n        return super.next();\r\n    }\r\n}\r\n","import Scheduler from \"./scheduler.js\";\r\nexport default class Speed extends Scheduler {\r\n    add(item, repeat, time) {\r\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\r\n        return super.add(item, repeat);\r\n    }\r\n    next() {\r\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\r\n            this._queue.add(this._current, 1 / this._current.getSpeed());\r\n        }\r\n        return super.next();\r\n    }\r\n}\r\n","import Scheduler from \"./scheduler.js\";\r\nexport default class Action extends Scheduler {\r\n    constructor() {\r\n        super();\r\n        this._defaultDuration = 1;\r\n        this._duration = this._defaultDuration;\r\n    }\r\n    add(item, repeat, time) {\r\n        this._queue.add(item, time || this._defaultDuration);\r\n        return super.add(item, repeat);\r\n    }\r\n    clear() {\r\n        this._duration = this._defaultDuration;\r\n        return super.clear();\r\n    }\r\n    remove(item) {\r\n        if (item == this._current) {\r\n            this._duration = this._defaultDuration;\r\n        }\r\n        return super.remove(item);\r\n    }\r\n    next() {\r\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\r\n            this._queue.add(this._current, this._duration || this._defaultDuration);\r\n            this._duration = this._defaultDuration;\r\n        }\r\n        return super.next();\r\n    }\r\n    setDuration(time) {\r\n        if (this._current) {\r\n            this._duration = time;\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","import { DIRS } from \"../constants.js\";\r\n;\r\n;\r\nexport default class FOV {\r\n    constructor(lightPassesCallback, options = {}) {\r\n        this._lightPasses = lightPassesCallback;\r\n        this._options = Object.assign({ topology: 8 }, options);\r\n    }\r\n    _getCircle(cx, cy, r) {\r\n        let result = [];\r\n        let dirs, countFactor, startOffset;\r\n        switch (this._options.topology) {\r\n            case 4:\r\n                countFactor = 1;\r\n                startOffset = [0, 1];\r\n                dirs = [\r\n                    DIRS[8][7],\r\n                    DIRS[8][1],\r\n                    DIRS[8][3],\r\n                    DIRS[8][5]\r\n                ];\r\n                break;\r\n            case 6:\r\n                dirs = DIRS[6];\r\n                countFactor = 1;\r\n                startOffset = [-1, 1];\r\n                break;\r\n            case 8:\r\n                dirs = DIRS[4];\r\n                countFactor = 2;\r\n                startOffset = [-1, 1];\r\n                break;\r\n            default:\r\n                throw new Error(\"Incorrect topology for FOV computation\");\r\n                break;\r\n        }\r\n        let x = cx + startOffset[0] * r;\r\n        let y = cy + startOffset[1] * r;\r\n        for (let i = 0; i < dirs.length; i++) {\r\n            for (let j = 0; j < r * countFactor; j++) {\r\n                result.push([x, y]);\r\n                x += dirs[i][0];\r\n                y += dirs[i][1];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","import FOV from \"./fov.js\";\r\nconst OCTANTS = [\r\n    [-1, 0, 0, 1],\r\n    [0, -1, 1, 0],\r\n    [0, -1, -1, 0],\r\n    [-1, 0, 0, -1],\r\n    [1, 0, 0, -1],\r\n    [0, 1, -1, 0],\r\n    [0, 1, 1, 0],\r\n    [1, 0, 0, 1]\r\n];\r\nexport default class RecursiveShadowcasting extends FOV {\r\n    compute(x, y, R, callback) {\r\n        callback(x, y, 0, 1);\r\n        for (let i = 0; i < OCTANTS.length; i++) {\r\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\r\n        }\r\n    }\r\n    compute180(x, y, R, dir, callback) {\r\n        callback(x, y, 0, 1);\r\n        let previousOctant = (dir - 1 + 8) % 8;\r\n        let nextPreviousOctant = (dir - 2 + 8) % 8;\r\n        let nextOctant = (dir + 1 + 8) % 8;\r\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\r\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\r\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\r\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\r\n    }\r\n    ;\r\n    compute90(x, y, R, dir, callback) {\r\n        callback(x, y, 0, 1);\r\n        let previousOctant = (dir - 1 + 8) % 8;\r\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\r\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\r\n    }\r\n    _renderOctant(x, y, octant, R, callback) {\r\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\r\n    }\r\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\r\n        if (visSlopeStart < visSlopeEnd) {\r\n            return;\r\n        }\r\n        for (let i = row; i <= radius; i++) {\r\n            let dx = -i - 1;\r\n            let dy = -i;\r\n            let blocked = false;\r\n            let newStart = 0;\r\n            while (dx <= 0) {\r\n                dx += 1;\r\n                let mapX = startX + dx * xx + dy * xy;\r\n                let mapY = startY + dx * yx + dy * yy;\r\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\r\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\r\n                if (slopeEnd > visSlopeStart) {\r\n                    continue;\r\n                }\r\n                if (slopeStart < visSlopeEnd) {\r\n                    break;\r\n                }\r\n                if ((dx * dx + dy * dy) < (radius * radius)) {\r\n                    callback(mapX, mapY, i, 1);\r\n                }\r\n                if (!blocked) {\r\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\r\n                        blocked = true;\r\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\r\n                        newStart = slopeEnd;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!this._lightPasses(mapX, mapY)) {\r\n                        newStart = slopeEnd;\r\n                        continue;\r\n                    }\r\n                    blocked = false;\r\n                    visSlopeStart = newStart;\r\n                }\r\n            }\r\n            if (blocked) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\r\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\r\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\r\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\r\n","import FOV from \"./fov.js\";\r\nexport default class DiscreteShadowcasting extends FOV {\r\n    compute(x, y, R, callback) {\r\n        callback(x, y, 0, 1);\r\n        if (!this._lightPasses(x, y)) {\r\n            return;\r\n        }\r\n        let DATA = [];\r\n        let A, B, cx, cy, blocks;\r\n        for (let r = 1; r <= R; r++) {\r\n            let neighbors = this._getCircle(x, y, r);\r\n            let angle = 360 / neighbors.length;\r\n            for (let i = 0; i < neighbors.length; i++) {\r\n                cx = neighbors[i][0];\r\n                cy = neighbors[i][1];\r\n                A = angle * (i - 0.5);\r\n                B = A + angle;\r\n                blocks = !this._lightPasses(cx, cy);\r\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\r\n                    callback(cx, cy, r, 1);\r\n                }\r\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _visibleCoords(A, B, blocks, DATA) {\r\n        if (A < 0) {\r\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\r\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\r\n            return v1 || v2;\r\n        }\r\n        let index = 0;\r\n        while (index < DATA.length && DATA[index] < A) {\r\n            index++;\r\n        }\r\n        if (index == DATA.length) {\r\n            if (blocks) {\r\n                DATA.push(A, B);\r\n            }\r\n            return true;\r\n        }\r\n        let count = 0;\r\n        if (index % 2) {\r\n            while (index < DATA.length && DATA[index] < B) {\r\n                index++;\r\n                count++;\r\n            }\r\n            if (count == 0) {\r\n                return false;\r\n            }\r\n            if (blocks) {\r\n                if (count % 2) {\r\n                    DATA.splice(index - count, count, B);\r\n                }\r\n                else {\r\n                    DATA.splice(index - count, count);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            while (index < DATA.length && DATA[index] < B) {\r\n                index++;\r\n                count++;\r\n            }\r\n            if (A == DATA[index - count] && count == 1) {\r\n                return false;\r\n            }\r\n            if (blocks) {\r\n                if (count % 2) {\r\n                    DATA.splice(index - count, count, A);\r\n                }\r\n                else {\r\n                    DATA.splice(index - count, count, A, B);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n}\r\n","import FOV from \"./fov.js\";\r\nexport default class PreciseShadowcasting extends FOV {\r\n    compute(x, y, R, callback) {\r\n        callback(x, y, 0, 1);\r\n        if (!this._lightPasses(x, y)) {\r\n            return;\r\n        }\r\n        let SHADOWS = [];\r\n        let cx, cy, blocks, A1, A2, visibility;\r\n        for (let r = 1; r <= R; r++) {\r\n            let neighbors = this._getCircle(x, y, r);\r\n            let neighborCount = neighbors.length;\r\n            for (let i = 0; i < neighborCount; i++) {\r\n                cx = neighbors[i][0];\r\n                cy = neighbors[i][1];\r\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\r\n                A2 = [2 * i + 1, 2 * neighborCount];\r\n                blocks = !this._lightPasses(cx, cy);\r\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\r\n                //if (visibility) {\r\n                    callback(cx, cy, r, visibility);\r\n                //}\r\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\r\n        if (A1[0] > A2[0]) {\r\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\r\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\r\n            return (v1 + v2) / 2;\r\n        }\r\n        let index1 = 0, edge1 = false;\r\n        while (index1 < SHADOWS.length) {\r\n            let old = SHADOWS[index1];\r\n            let diff = old[0] * A1[1] - A1[0] * old[1];\r\n            if (diff >= 0) {\r\n                if (diff == 0 && !(index1 % 2)) {\r\n                    edge1 = true;\r\n                }\r\n                break;\r\n            }\r\n            index1++;\r\n        }\r\n        let index2 = SHADOWS.length, edge2 = false;\r\n        while (index2--) {\r\n            let old = SHADOWS[index2];\r\n            let diff = A2[0] * old[1] - old[0] * A2[1];\r\n            if (diff >= 0) {\r\n                if (diff == 0 && (index2 % 2)) {\r\n                    edge2 = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        let visible = true;\r\n        if (index1 == index2 && (edge1 || edge2)) {\r\n            visible = false;\r\n        }\r\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) {\r\n            visible = false;\r\n        }\r\n        else if (index1 > index2 && (index1 % 2)) {\r\n            visible = false;\r\n        }\r\n        if (!visible) {\r\n            return 0;\r\n        }\r\n        let visibleLength;\r\n        let remove = index2 - index1 + 1;\r\n        if (remove % 2) {\r\n            if (index1 % 2) {\r\n                let P = SHADOWS[index1];\r\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\r\n                if (blocks) {\r\n                    SHADOWS.splice(index1, remove, A2);\r\n                }\r\n            }\r\n            else {\r\n                let P = SHADOWS[index2];\r\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\r\n                if (blocks) {\r\n                    SHADOWS.splice(index1, remove, A1);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (index1 % 2) {\r\n                let P1 = SHADOWS[index1];\r\n                let P2 = SHADOWS[index2];\r\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\r\n                if (blocks) {\r\n                    SHADOWS.splice(index1, remove);\r\n                }\r\n            }\r\n            else {\r\n                if (blocks) {\r\n                    SHADOWS.splice(index1, remove, A1, A2);\r\n                }\r\n                return 1;\r\n            }\r\n        }\r\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\r\n        return visibleLength / arcLength;\r\n    }\r\n}\r\n","export default class Noise {\r\n}\r\n","import Noise from \"./noise.js\";\r\nimport RNG from \"../rng.js\";\r\nimport { mod } from \"../util.js\";\r\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\r\nconst G2 = (3 - Math.sqrt(3)) / 6;\r\nexport default class Simplex extends Noise {\r\n    constructor(gradients = 256) {\r\n        super();\r\n        this._gradients = [\r\n            [0, -1],\r\n            [1, -1],\r\n            [1, 0],\r\n            [1, 1],\r\n            [0, 1],\r\n            [-1, 1],\r\n            [-1, 0],\r\n            [-1, -1]\r\n        ];\r\n        let permutations = [];\r\n        for (let i = 0; i < gradients; i++) {\r\n            permutations.push(i);\r\n        }\r\n        permutations = RNG.shuffle(permutations);\r\n        this._perms = [];\r\n        this._indexes = [];\r\n        for (let i = 0; i < 2 * gradients; i++) {\r\n            this._perms.push(permutations[i % gradients]);\r\n            this._indexes.push(this._perms[i] % this._gradients.length);\r\n        }\r\n    }\r\n    get(xin, yin) {\r\n        let perms = this._perms;\r\n        let indexes = this._indexes;\r\n        let count = perms.length / 2;\r\n        let n0 = 0, n1 = 0, n2 = 0, gi;\r\n        let s = (xin + yin) * F2;\r\n        let i = Math.floor(xin + s);\r\n        let j = Math.floor(yin + s);\r\n        let t = (i + j) * G2;\r\n        let X0 = i - t;\r\n        let Y0 = j - t;\r\n        let x0 = xin - X0;\r\n        let y0 = yin - Y0;\r\n        let i1, j1;\r\n        if (x0 > y0) {\r\n            i1 = 1;\r\n            j1 = 0;\r\n        }\r\n        else {\r\n            i1 = 0;\r\n            j1 = 1;\r\n        }\r\n        let x1 = x0 - i1 + G2;\r\n        let y1 = y0 - j1 + G2;\r\n        let x2 = x0 - 1 + 2 * G2;\r\n        let y2 = y0 - 1 + 2 * G2;\r\n        let ii = mod(i, count);\r\n        let jj = mod(j, count);\r\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\r\n        if (t0 >= 0) {\r\n            t0 *= t0;\r\n            gi = indexes[ii + perms[jj]];\r\n            let grad = this._gradients[gi];\r\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\r\n        }\r\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\r\n        if (t1 >= 0) {\r\n            t1 *= t1;\r\n            gi = indexes[ii + i1 + perms[jj + j1]];\r\n            let grad = this._gradients[gi];\r\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\r\n        }\r\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\r\n        if (t2 >= 0) {\r\n            t2 *= t2;\r\n            gi = indexes[ii + 1 + perms[jj + 1]];\r\n            let grad = this._gradients[gi];\r\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\r\n        }\r\n        return 70 * (n0 + n1 + n2);\r\n    }\r\n}\r\n","import Simplex from \"./simplex.js\";\r\nexport default { Simplex };\r\n","import { DIRS } from \"../constants.js\";\r\nexport default class Path {\r\n    constructor(toX, toY, passableCallback, options = {}) {\r\n        this._toX = toX;\r\n        this._toY = toY;\r\n        this._passableCallback = passableCallback;\r\n        this._options = Object.assign({\r\n            topology: 8\r\n        }, options);\r\n        this._dirs = DIRS[this._options.topology];\r\n        if (this._options.topology == 8) {\r\n            this._dirs = [\r\n                this._dirs[0],\r\n                this._dirs[2],\r\n                this._dirs[4],\r\n                this._dirs[6],\r\n                this._dirs[1],\r\n                this._dirs[3],\r\n                this._dirs[5],\r\n                this._dirs[7]\r\n            ];\r\n        }\r\n    }\r\n    _getNeighbors(cx, cy) {\r\n        let result = [];\r\n        for (let i = 0; i < this._dirs.length; i++) {\r\n            let dir = this._dirs[i];\r\n            let x = cx + dir[0];\r\n            let y = cy + dir[1];\r\n            if (!this._passableCallback(x, y)) {\r\n                continue;\r\n            }\r\n            result.push([x, y]);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","import Dijkstra from \"./dijkstra.js\";\r\nimport AStar from \"./astar.js\";\r\nexport default { Dijkstra, AStar };\r\n","import Path from \"./path.js\";\r\nexport default class Dijkstra extends Path {\r\n    constructor(toX, toY, passableCallback, options) {\r\n        super(toX, toY, passableCallback, options);\r\n        this._computed = {};\r\n        this._todo = [];\r\n        this._add(toX, toY, null);\r\n    }\r\n    compute(fromX, fromY, callback) {\r\n        let key = fromX + \",\" + fromY;\r\n        if (!(key in this._computed)) {\r\n            this._compute(fromX, fromY);\r\n        }\r\n        if (!(key in this._computed)) {\r\n            return;\r\n        }\r\n        let item = this._computed[key];\r\n        while (item) {\r\n            callback(item.x, item.y);\r\n            item = item.prev;\r\n        }\r\n    }\r\n    _compute(fromX, fromY) {\r\n        while (this._todo.length) {\r\n            let item = this._todo.shift();\r\n            if (item.x == fromX && item.y == fromY) {\r\n                return;\r\n            }\r\n            let neighbors = this._getNeighbors(item.x, item.y);\r\n            for (let i = 0; i < neighbors.length; i++) {\r\n                let neighbor = neighbors[i];\r\n                let x = neighbor[0];\r\n                let y = neighbor[1];\r\n                let id = x + \",\" + y;\r\n                if (id in this._computed) {\r\n                    continue;\r\n                }\r\n                this._add(x, y, item);\r\n            }\r\n        }\r\n    }\r\n    _add(x, y, prev) {\r\n        let obj = {\r\n            x: x,\r\n            y: y,\r\n            prev: prev\r\n        };\r\n        this._computed[x + \",\" + y] = obj;\r\n        this._todo.push(obj);\r\n    }\r\n}\r\n","import Path from \"./path.js\";\r\nexport default class AStar extends Path {\r\n    constructor(toX, toY, passableCallback, options = {}) {\r\n        super(toX, toY, passableCallback, options);\r\n        this._todo = [];\r\n        this._done = {};\r\n    }\r\n    compute(fromX, fromY, callback) {\r\n        this._todo = [];\r\n        this._done = {};\r\n        this._fromX = fromX;\r\n        this._fromY = fromY;\r\n        this._add(this._toX, this._toY, null);\r\n        while (this._todo.length) {\r\n            let item = this._todo.shift();\r\n            let id = item.x + \",\" + item.y;\r\n            if (id in this._done) {\r\n                continue;\r\n            }\r\n            this._done[id] = item;\r\n            if (item.x == fromX && item.y == fromY) {\r\n                break;\r\n            }\r\n            let neighbors = this._getNeighbors(item.x, item.y);\r\n            for (let i = 0; i < neighbors.length; i++) {\r\n                let neighbor = neighbors[i];\r\n                let x = neighbor[0];\r\n                let y = neighbor[1];\r\n                let id = x + \",\" + y;\r\n                if (id in this._done) {\r\n                    continue;\r\n                }\r\n                this._add(x, y, item);\r\n            }\r\n        }\r\n        let item = this._done[fromX + \",\" + fromY];\r\n        if (!item) {\r\n            return;\r\n        }\r\n        while (item) {\r\n            callback(item.x, item.y);\r\n            item = item.prev;\r\n        }\r\n    }\r\n    _add(x, y, prev) {\r\n        let h = this._distance(x, y);\r\n        let obj = {\r\n            x: x,\r\n            y: y,\r\n            prev: prev,\r\n            g: (prev ? prev.g + 1 : 0),\r\n            h: h\r\n        };\r\n        let f = obj.g + obj.h;\r\n        for (let i = 0; i < this._todo.length; i++) {\r\n            let item = this._todo[i];\r\n            let itemF = item.g + item.h;\r\n            if (f < itemF || (f == itemF && h < item.h)) {\r\n                this._todo.splice(i, 0, obj);\r\n                return;\r\n            }\r\n        }\r\n        this._todo.push(obj);\r\n    }\r\n    _distance(x, y) {\r\n        switch (this._options.topology) {\r\n            case 4:\r\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\r\n                break;\r\n            case 6:\r\n                let dx = Math.abs(x - this._fromX);\r\n                let dy = Math.abs(y - this._fromY);\r\n                return dy + Math.max(0, (dx - dy) / 2);\r\n                break;\r\n            case 8:\r\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\r\n                break;\r\n        }\r\n    }\r\n}\r\n","export default class Engine {\r\n    constructor(scheduler) {\r\n        this._scheduler = scheduler;\r\n        this._lock = 1;\r\n    }\r\n    start() { return this.unlock(); }\r\n    lock() {\r\n        this._lock++;\r\n        return this;\r\n    }\r\n    unlock() {\r\n        if (!this._lock) {\r\n            throw new Error(\"Cannot unlock unlocked engine\");\r\n        }\r\n        this._lock--;\r\n        while (!this._lock) {\r\n            let actor = this._scheduler.next();\r\n            if (!actor) {\r\n                return this.lock();\r\n            }\r\n            let result = actor.act();\r\n            if (result && result.then) {\r\n                this.lock();\r\n                result.then(this.unlock.bind(this));\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","import * as Color from \"./color.js\";\r\n;\r\n;\r\n;\r\n;\r\nexport default class Lighting {\r\n    constructor(reflectivityCallback, options = {}) {\r\n        this._reflectivityCallback = reflectivityCallback;\r\n        this._options = {};\r\n        options = Object.assign({\r\n            passes: 1,\r\n            emissionThreshold: 100,\r\n            range: 10\r\n        }, options);\r\n        this._lights = {};\r\n        this._reflectivityCache = {};\r\n        this._fovCache = {};\r\n        this.setOptions(options);\r\n    }\r\n    setOptions(options) {\r\n        Object.assign(this._options, options);\r\n        if (options && options.range) {\r\n            this.reset();\r\n        }\r\n        return this;\r\n    }\r\n    setFOV(fov) {\r\n        this._fov = fov;\r\n        this._fovCache = {};\r\n        return this;\r\n    }\r\n    setLight(x, y, color) {\r\n        let key = x + \",\" + y;\r\n        if (color) {\r\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\r\n        }\r\n        else {\r\n            delete this._lights[key];\r\n        }\r\n        return this;\r\n    }\r\n    clearLights() { this._lights = {}; }\r\n    reset() {\r\n        this._reflectivityCache = {};\r\n        this._fovCache = {};\r\n        return this;\r\n    }\r\n    compute(lightingCallback) {\r\n        let doneCells = {};\r\n        let emittingCells = {};\r\n        let litCells = {};\r\n        for (let key in this._lights) {\r\n            let light = this._lights[key];\r\n            emittingCells[key] = [0, 0, 0];\r\n            Color.add_(emittingCells[key], light);\r\n        }\r\n        for (let i = 0; i < this._options.passes; i++) {\r\n            this._emitLight(emittingCells, litCells, doneCells);\r\n            if (i + 1 == this._options.passes) {\r\n                continue;\r\n            }\r\n            emittingCells = this._computeEmitters(litCells, doneCells);\r\n        }\r\n        for (let litKey in litCells) {\r\n            let parts = litKey.split(\",\");\r\n            let x = parseInt(parts[0]);\r\n            let y = parseInt(parts[1]);\r\n            lightingCallback(x, y, litCells[litKey]);\r\n        }\r\n        return this;\r\n    }\r\n    _emitLight(emittingCells, litCells, doneCells) {\r\n        for (let key in emittingCells) {\r\n            let parts = key.split(\",\");\r\n            let x = parseInt(parts[0]);\r\n            let y = parseInt(parts[1]);\r\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\r\n            doneCells[key] = 1;\r\n        }\r\n        return this;\r\n    }\r\n    _computeEmitters(litCells, doneCells) {\r\n        let result = {};\r\n        for (let key in litCells) {\r\n            if (key in doneCells) {\r\n                continue;\r\n            }\r\n            let color = litCells[key];\r\n            let reflectivity;\r\n            if (key in this._reflectivityCache) {\r\n                reflectivity = this._reflectivityCache[key];\r\n            }\r\n            else {\r\n                let parts = key.split(\",\");\r\n                let x = parseInt(parts[0]);\r\n                let y = parseInt(parts[1]);\r\n                reflectivity = this._reflectivityCallback(x, y);\r\n                this._reflectivityCache[key] = reflectivity;\r\n            }\r\n            if (reflectivity == 0) {\r\n                continue;\r\n            }\r\n            let emission = [0, 0, 0];\r\n            let intensity = 0;\r\n            for (let i = 0; i < 3; i++) {\r\n                let part = Math.round(color[i] * reflectivity);\r\n                emission[i] = part;\r\n                intensity += part;\r\n            }\r\n            if (intensity > this._options.emissionThreshold) {\r\n                result[key] = emission;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    _emitLightFromCell(x, y, color, litCells) {\r\n        let key = x + \",\" + y;\r\n        let fov;\r\n        if (key in this._fovCache) {\r\n            fov = this._fovCache[key];\r\n        }\r\n        else {\r\n            fov = this._updateFOV(x, y);\r\n        }\r\n        for (let fovKey in fov) {\r\n            let formFactor = fov[fovKey];\r\n            let result;\r\n            if (fovKey in litCells) {\r\n                result = litCells[fovKey];\r\n            }\r\n            else {\r\n                result = [0, 0, 0];\r\n                litCells[fovKey] = result;\r\n            }\r\n            for (let i = 0; i < 3; i++) {\r\n                result[i] += Math.round(color[i] * formFactor);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _updateFOV(x, y) {\r\n        let key1 = x + \",\" + y;\r\n        let cache = {};\r\n        this._fovCache[key1] = cache;\r\n        let range = this._options.range;\r\n        function cb(x, y, r, vis) {\r\n            let key2 = x + \",\" + y;\r\n            let formFactor = vis * (1 - r / range);\r\n            if (formFactor == 0) {\r\n                return;\r\n            }\r\n            cache[key2] = formFactor;\r\n        }\r\n        ;\r\n        this._fov.compute(x, y, range, cb.bind(this));\r\n        return cache;\r\n    }\r\n}\r\n","export { default as RNG } from \"./rng.js\";\r\nexport { default as Display } from \"./display/display.js\";\r\nexport { default as StringGenerator } from \"./stringgenerator.js\";\r\nexport { default as EventQueue } from \"./eventqueue.js\";\r\nexport { default as Scheduler } from \"./scheduler/index.js\";\r\nexport { default as FOV } from \"./fov/index.js\";\r\nexport { default as Map } from \"./map/index.js\";\r\nexport { default as Noise } from \"./noise/index.js\";\r\nexport { default as Path } from \"./path/index.js\";\r\nexport { default as Engine } from \"./engine.js\";\r\nexport { default as Lighting } from \"./lighting.js\";\r\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\r\nimport * as util from \"./util.js\";\r\nexport const Util = util;\r\nimport * as color from \"./color.js\";\r\nexport const Color = color;\r\nimport * as text from \"./text.js\";\r\nexport const Text = text;\r\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\r\n;\r\nexport default class Map {\r\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\r\n        this._width = width;\r\n        this._height = height;\r\n    }\r\n    ;\r\n    _fillMap(value) {\r\n        let map = [];\r\n        for (let i = 0; i < this._width; i++) {\r\n            map.push([]);\r\n            for (let j = 0; j < this._height; j++) {\r\n                map[i].push(value);\r\n            }\r\n        }\r\n        return map;\r\n    }\r\n}\r\n","import Map from \"./map.js\";\r\nexport default class Dungeon extends Map {\r\n    constructor(width, height) {\r\n        super(width, height);\r\n        this._rooms = [];\r\n        this._corridors = [];\r\n    }\r\n    getRooms() { return this._rooms; }\r\n    getCorridors() { return this._corridors; }\r\n}\r\n","import RNG from \"../rng.js\";\r\n;\r\nclass Feature {\r\n}\r\nexport class Room extends Feature {\r\n    constructor(x1, y1, x2, y2, doorX, doorY) {\r\n        super();\r\n        this._x1 = x1;\r\n        this._y1 = y1;\r\n        this._x2 = x2;\r\n        this._y2 = y2;\r\n        this._doors = {};\r\n        if (doorX !== undefined && doorY !== undefined) {\r\n            this.addDoor(doorX, doorY);\r\n        }\r\n    }\r\n    ;\r\n    static createRandomAt(x, y, dx, dy, options) {\r\n        let min = options.roomWidth[0];\r\n        let max = options.roomWidth[1];\r\n        let width = RNG.getUniformInt(min, max);\r\n        min = options.roomHeight[0];\r\n        max = options.roomHeight[1];\r\n        let height = RNG.getUniformInt(min, max);\r\n        if (dx == 1) {\r\n            let y2 = y - Math.floor(RNG.getUniform() * height);\r\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\r\n        }\r\n        if (dx == -1) {\r\n            let y2 = y - Math.floor(RNG.getUniform() * height);\r\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\r\n        }\r\n        if (dy == 1) {\r\n            let x2 = x - Math.floor(RNG.getUniform() * width);\r\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\r\n        }\r\n        if (dy == -1) {\r\n            let x2 = x - Math.floor(RNG.getUniform() * width);\r\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\r\n        }\r\n        throw new Error(\"dx or dy must be 1 or -1\");\r\n    }\r\n    static createRandomCenter(cx, cy, options) {\r\n        let min = options.roomWidth[0];\r\n        let max = options.roomWidth[1];\r\n        let width = RNG.getUniformInt(min, max);\r\n        min = options.roomHeight[0];\r\n        max = options.roomHeight[1];\r\n        let height = RNG.getUniformInt(min, max);\r\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\r\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\r\n        let x2 = x1 + width - 1;\r\n        let y2 = y1 + height - 1;\r\n        return new this(x1, y1, x2, y2);\r\n    }\r\n    static createRandom(availWidth, availHeight, options) {\r\n        let min = options.roomWidth[0];\r\n        let max = options.roomWidth[1];\r\n        let width = RNG.getUniformInt(min, max);\r\n        min = options.roomHeight[0];\r\n        max = options.roomHeight[1];\r\n        let height = RNG.getUniformInt(min, max);\r\n        let left = availWidth - width - 1;\r\n        let top = availHeight - height - 1;\r\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\r\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\r\n        let x2 = x1 + width - 1;\r\n        let y2 = y1 + height - 1;\r\n        return new this(x1, y1, x2, y2);\r\n    }\r\n    addDoor(x, y) {\r\n        this._doors[x + \",\" + y] = 1;\r\n        return this;\r\n    }\r\n    getDoors(cb) {\r\n        for (let key in this._doors) {\r\n            let parts = key.split(\",\");\r\n            cb(parseInt(parts[0]), parseInt(parts[1]));\r\n        }\r\n        return this;\r\n    }\r\n    clearDoors() {\r\n        this._doors = {};\r\n        return this;\r\n    }\r\n    addDoors(isWallCallback) {\r\n        let left = this._x1 - 1;\r\n        let right = this._x2 + 1;\r\n        let top = this._y1 - 1;\r\n        let bottom = this._y2 + 1;\r\n        for (let x = left; x <= right; x++) {\r\n            for (let y = top; y <= bottom; y++) {\r\n                if (x != left && x != right && y != top && y != bottom) {\r\n                    continue;\r\n                }\r\n                if (isWallCallback(x, y)) {\r\n                    continue;\r\n                }\r\n                this.addDoor(x, y);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    debug() {\r\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\r\n    }\r\n    isValid(isWallCallback, canBeDugCallback) {\r\n        let left = this._x1 - 1;\r\n        let right = this._x2 + 1;\r\n        let top = this._y1 - 1;\r\n        let bottom = this._y2 + 1;\r\n        for (let x = left; x <= right; x++) {\r\n            for (let y = top; y <= bottom; y++) {\r\n                if (x == left || x == right || y == top || y == bottom) {\r\n                    if (!isWallCallback(x, y)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!canBeDugCallback(x, y)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    create(digCallback) {\r\n        let left = this._x1 - 1;\r\n        let right = this._x2 + 1;\r\n        let top = this._y1 - 1;\r\n        let bottom = this._y2 + 1;\r\n        let value = 0;\r\n        for (let x = left; x <= right; x++) {\r\n            for (let y = top; y <= bottom; y++) {\r\n                if (x + \",\" + y in this._doors) {\r\n                    value = 2;\r\n                }\r\n                else if (x == left || x == right || y == top || y == bottom) {\r\n                    value = 1;\r\n                }\r\n                else {\r\n                    value = 0;\r\n                }\r\n                digCallback(x, y, value);\r\n            }\r\n        }\r\n    }\r\n    getCenter() {\r\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\r\n    }\r\n    getLeft() { return this._x1; }\r\n    getRight() { return this._x2; }\r\n    getTop() { return this._y1; }\r\n    getBottom() { return this._y2; }\r\n}\r\nexport class Corridor extends Feature {\r\n    constructor(startX, startY, endX, endY) {\r\n        super();\r\n        this._startX = startX;\r\n        this._startY = startY;\r\n        this._endX = endX;\r\n        this._endY = endY;\r\n        this._endsWithAWall = true;\r\n    }\r\n    static createRandomAt(x, y, dx, dy, options) {\r\n        let min = options.corridorLength[0];\r\n        let max = options.corridorLength[1];\r\n        let length = RNG.getUniformInt(min, max);\r\n        return new this(x, y, x + dx * length, y + dy * length);\r\n    }\r\n    debug() {\r\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\r\n    }\r\n    isValid(isWallCallback, canBeDugCallback) {\r\n        let sx = this._startX;\r\n        let sy = this._startY;\r\n        let dx = this._endX - sx;\r\n        let dy = this._endY - sy;\r\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\r\n        if (dx) {\r\n            dx = dx / Math.abs(dx);\r\n        }\r\n        if (dy) {\r\n            dy = dy / Math.abs(dy);\r\n        }\r\n        let nx = dy;\r\n        let ny = -dx;\r\n        let ok = true;\r\n        for (let i = 0; i < length; i++) {\r\n            let x = sx + i * dx;\r\n            let y = sy + i * dy;\r\n            if (!canBeDugCallback(x, y)) {\r\n                ok = false;\r\n            }\r\n            if (!isWallCallback(x + nx, y + ny)) {\r\n                ok = false;\r\n            }\r\n            if (!isWallCallback(x - nx, y - ny)) {\r\n                ok = false;\r\n            }\r\n            if (!ok) {\r\n                length = i;\r\n                this._endX = x - dx;\r\n                this._endY = y - dy;\r\n                break;\r\n            }\r\n        }\r\n        if (length == 0) {\r\n            return false;\r\n        }\r\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\r\n            return false;\r\n        }\r\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\r\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\r\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\r\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    create(digCallback) {\r\n        let sx = this._startX;\r\n        let sy = this._startY;\r\n        let dx = this._endX - sx;\r\n        let dy = this._endY - sy;\r\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\r\n        if (dx) {\r\n            dx = dx / Math.abs(dx);\r\n        }\r\n        if (dy) {\r\n            dy = dy / Math.abs(dy);\r\n        }\r\n        for (let i = 0; i < length; i++) {\r\n            let x = sx + i * dx;\r\n            let y = sy + i * dy;\r\n            digCallback(x, y, 0);\r\n        }\r\n        return true;\r\n    }\r\n    createPriorityWalls(priorityWallCallback) {\r\n        if (!this._endsWithAWall) {\r\n            return;\r\n        }\r\n        let sx = this._startX;\r\n        let sy = this._startY;\r\n        let dx = this._endX - sx;\r\n        let dy = this._endY - sy;\r\n        if (dx) {\r\n            dx = dx / Math.abs(dx);\r\n        }\r\n        if (dy) {\r\n            dy = dy / Math.abs(dy);\r\n        }\r\n        let nx = dy;\r\n        let ny = -dx;\r\n        priorityWallCallback(this._endX + dx, this._endY + dy);\r\n        priorityWallCallback(this._endX + nx, this._endY + ny);\r\n        priorityWallCallback(this._endX - nx, this._endY - ny);\r\n    }\r\n}\r\n","import Dungeon from \"./dungeon.js\";\r\nimport { Room, Corridor } from \"./features.js\";\r\nimport RNG from \"../rng.js\";\r\nimport { DIRS } from \"../constants.js\";\r\nconst FEATURES = {\r\n    \"room\": Room,\r\n    \"corridor\": Corridor\r\n};\r\nexport default class Digger extends Dungeon {\r\n    constructor(width, height, options = {}) {\r\n        super(width, height);\r\n        this._options = Object.assign({\r\n            roomWidth: [3, 9],\r\n            roomHeight: [3, 5],\r\n            corridorLength: [3, 10],\r\n            dugPercentage: 0.2,\r\n            timeLimit: 1000\r\n        }, options);\r\n        this._features = {\r\n            \"room\": 4,\r\n            \"corridor\": 4\r\n        };\r\n        this._map = [];\r\n        this._featureAttempts = 20;\r\n        this._walls = {};\r\n        this._dug = 0;\r\n        this._digCallback = this._digCallback.bind(this);\r\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\r\n        this._isWallCallback = this._isWallCallback.bind(this);\r\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\r\n    }\r\n    create(callback) {\r\n        this._rooms = [];\r\n        this._corridors = [];\r\n        this._map = this._fillMap(1);\r\n        this._walls = {};\r\n        this._dug = 0;\r\n        let area = (this._width - 2) * (this._height - 2);\r\n        this._firstRoom();\r\n        let t1 = Date.now();\r\n        let priorityWalls;\r\n        do {\r\n            priorityWalls = 0;\r\n            let t2 = Date.now();\r\n            if (t2 - t1 > this._options.timeLimit) {\r\n                break;\r\n            }\r\n            let wall = this._findWall();\r\n            if (!wall) {\r\n                break;\r\n            }\r\n            let parts = wall.split(\",\");\r\n            let x = parseInt(parts[0]);\r\n            let y = parseInt(parts[1]);\r\n            let dir = this._getDiggingDirection(x, y);\r\n            if (!dir) {\r\n                continue;\r\n            }\r\n            let featureAttempts = 0;\r\n            do {\r\n                featureAttempts++;\r\n                if (this._tryFeature(x, y, dir[0], dir[1])) {\r\n                    this._removeSurroundingWalls(x, y);\r\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\r\n                    break;\r\n                }\r\n            } while (featureAttempts < this._featureAttempts);\r\n            for (let id in this._walls) {\r\n                if (this._walls[id] > 1) {\r\n                    priorityWalls++;\r\n                }\r\n            }\r\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls);\r\n        this._addDoors();\r\n        if (callback) {\r\n            for (let i = 0; i < this._width; i++) {\r\n                for (let j = 0; j < this._height; j++) {\r\n                    callback(i, j, this._map[i][j]);\r\n                }\r\n            }\r\n        }\r\n        this._walls = {};\r\n        this._map = [];\r\n        return this;\r\n    }\r\n    _digCallback(x, y, value) {\r\n        if (value == 0 || value == 2) {\r\n            this._map[x][y] = 0;\r\n            this._dug++;\r\n        }\r\n        else {\r\n            this._walls[x + \",\" + y] = 1;\r\n        }\r\n    }\r\n    _isWallCallback(x, y) {\r\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\r\n            return false;\r\n        }\r\n        return (this._map[x][y] == 1);\r\n    }\r\n    _canBeDugCallback(x, y) {\r\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\r\n            return false;\r\n        }\r\n        return (this._map[x][y] == 1);\r\n    }\r\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\r\n    ;\r\n    _firstRoom() {\r\n        let cx = Math.floor(this._width / 2);\r\n        let cy = Math.floor(this._height / 2);\r\n        let room = Room.createRandomCenter(cx, cy, this._options);\r\n        this._rooms.push(room);\r\n        room.create(this._digCallback);\r\n    }\r\n    _findWall() {\r\n        let prio1 = [];\r\n        let prio2 = [];\r\n        for (let id in this._walls) {\r\n            let prio = this._walls[id];\r\n            if (prio == 2) {\r\n                prio2.push(id);\r\n            }\r\n            else {\r\n                prio1.push(id);\r\n            }\r\n        }\r\n        let arr = (prio2.length ? prio2 : prio1);\r\n        if (!arr.length) {\r\n            return null;\r\n        }\r\n        let id = RNG.getItem(arr.sort());\r\n        delete this._walls[id];\r\n        return id;\r\n    }\r\n    _tryFeature(x, y, dx, dy) {\r\n        let featureName = RNG.getWeightedValue(this._features);\r\n        let ctor = FEATURES[featureName];\r\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\r\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\r\n            return false;\r\n        }\r\n        feature.create(this._digCallback);\r\n        if (feature instanceof Room) {\r\n            this._rooms.push(feature);\r\n        }\r\n        if (feature instanceof Corridor) {\r\n            feature.createPriorityWalls(this._priorityWallCallback);\r\n            this._corridors.push(feature);\r\n        }\r\n        return true;\r\n    }\r\n    _removeSurroundingWalls(cx, cy) {\r\n        let deltas = DIRS[4];\r\n        for (let i = 0; i < deltas.length; i++) {\r\n            let delta = deltas[i];\r\n            let x = cx + delta[0];\r\n            let y = cy + delta[1];\r\n            delete this._walls[x + \",\" + y];\r\n            x = cx + 2 * delta[0];\r\n            y = cy + 2 * delta[1];\r\n            delete this._walls[x + \",\" + y];\r\n        }\r\n    }\r\n    _getDiggingDirection(cx, cy) {\r\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\r\n            return null;\r\n        }\r\n        let result = null;\r\n        let deltas = DIRS[4];\r\n        for (let i = 0; i < deltas.length; i++) {\r\n            let delta = deltas[i];\r\n            let x = cx + delta[0];\r\n            let y = cy + delta[1];\r\n            if (!this._map[x][y]) {\r\n                if (result) {\r\n                    return null;\r\n                }\r\n                result = delta;\r\n            }\r\n        }\r\n        if (!result) {\r\n            return null;\r\n        }\r\n        return [-result[0], -result[1]];\r\n    }\r\n    _addDoors() {\r\n        let data = this._map;\r\n        function isWallCallback(x, y) {\r\n            return (data[x][y] == 1);\r\n        }\r\n        ;\r\n        for (let i = 0; i < this._rooms.length; i++) {\r\n            let room = this._rooms[i];\r\n            room.clearDoors();\r\n            room.addDoors(isWallCallback);\r\n        }\r\n    }\r\n}\r\n","import Map from \"./map.js\";\r\nimport RNG from \"../rng.js\";\r\nfunction addToList(i, L, R) {\r\n    R[L[i + 1]] = R[i];\r\n    L[R[i]] = L[i + 1];\r\n    R[i] = i + 1;\r\n    L[i + 1] = i;\r\n}\r\nfunction removeFromList(i, L, R) {\r\n    R[L[i]] = R[i];\r\n    L[R[i]] = L[i];\r\n    R[i] = i;\r\n    L[i] = i;\r\n}\r\nexport default class EllerMaze extends Map {\r\n    create(callback) {\r\n        let map = this._fillMap(1);\r\n        let w = Math.ceil((this._width - 2) / 2);\r\n        let rand = 9 / 24;\r\n        let L = [];\r\n        let R = [];\r\n        for (let i = 0; i < w; i++) {\r\n            L.push(i);\r\n            R.push(i);\r\n        }\r\n        L.push(w - 1);\r\n        let j;\r\n        for (j = 1; j + 3 < this._height; j += 2) {\r\n            for (let i = 0; i < w; i++) {\r\n                let x = 2 * i + 1;\r\n                let y = j;\r\n                map[x][y] = 0;\r\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\r\n                    addToList(i, L, R);\r\n                    map[x + 1][y] = 0;\r\n                }\r\n                if (i != L[i] && RNG.getUniform() > rand) {\r\n                    removeFromList(i, L, R);\r\n                }\r\n                else {\r\n                    map[x][y + 1] = 0;\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < w; i++) {\r\n            let x = 2 * i + 1;\r\n            let y = j;\r\n            map[x][y] = 0;\r\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\r\n                addToList(i, L, R);\r\n                map[x + 1][y] = 0;\r\n            }\r\n            removeFromList(i, L, R);\r\n        }\r\n        for (let i = 0; i < this._width; i++) {\r\n            for (let j = 0; j < this._height; j++) {\r\n                callback(i, j, map[i][j]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","import Arena from \"./arena.js\";\r\nimport Uniform from \"./uniform.js\";\r\nimport Cellular from \"./cellular.js\";\r\nimport Digger from \"./digger.js\";\r\nimport EllerMaze from \"./ellermaze.js\";\r\nimport DividedMaze from \"./dividedmaze.js\";\r\nimport IceyMaze from \"./iceymaze.js\";\r\nimport Rogue from \"./rogue.js\";\r\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\r\n","import Map from \"./map.js\";\r\nexport default class Arena extends Map {\r\n    create(callback) {\r\n        let w = this._width - 1;\r\n        let h = this._height - 1;\r\n        for (let i = 0; i <= w; i++) {\r\n            for (let j = 0; j <= h; j++) {\r\n                let empty = (i && j && i < w && j < h);\r\n                callback(i, j, empty ? 0 : 1);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","import Dungeon from \"./dungeon.js\";\r\nimport { Room, Corridor } from \"./features.js\";\r\nimport RNG from \"../rng.js\";\r\n;\r\nexport default class Uniform extends Dungeon {\r\n    constructor(width, height, options) {\r\n        super(width, height);\r\n        this._options = {\r\n            roomWidth: [3, 9],\r\n            roomHeight: [3, 5],\r\n            roomDugPercentage: 0.1,\r\n            timeLimit: 1000\r\n        };\r\n        Object.assign(this._options, options);\r\n        this._map = [];\r\n        this._dug = 0;\r\n        this._roomAttempts = 20;\r\n        this._corridorAttempts = 20;\r\n        this._connected = [];\r\n        this._unconnected = [];\r\n        this._digCallback = this._digCallback.bind(this);\r\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\r\n        this._isWallCallback = this._isWallCallback.bind(this);\r\n    }\r\n    create(callback) {\r\n        let t1 = Date.now();\r\n        while (1) {\r\n            let t2 = Date.now();\r\n            if (t2 - t1 > this._options.timeLimit) {\r\n                return null;\r\n            }\r\n            this._map = this._fillMap(1);\r\n            this._dug = 0;\r\n            this._rooms = [];\r\n            this._unconnected = [];\r\n            this._generateRooms();\r\n            if (this._rooms.length < 2) {\r\n                continue;\r\n            }\r\n            if (this._generateCorridors()) {\r\n                break;\r\n            }\r\n        }\r\n        if (callback) {\r\n            for (let i = 0; i < this._width; i++) {\r\n                for (let j = 0; j < this._height; j++) {\r\n                    callback(i, j, this._map[i][j]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _generateRooms() {\r\n        let w = this._width - 2;\r\n        let h = this._height - 2;\r\n        let room;\r\n        do {\r\n            room = this._generateRoom();\r\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\r\n                break;\r\n            }\r\n        } while (room);\r\n    }\r\n    _generateRoom() {\r\n        let count = 0;\r\n        while (count < this._roomAttempts) {\r\n            count++;\r\n            let room = Room.createRandom(this._width, this._height, this._options);\r\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\r\n                continue;\r\n            }\r\n            room.create(this._digCallback);\r\n            this._rooms.push(room);\r\n            return room;\r\n        }\r\n        return null;\r\n    }\r\n    _generateCorridors() {\r\n        let cnt = 0;\r\n        while (cnt < this._corridorAttempts) {\r\n            cnt++;\r\n            this._corridors = [];\r\n            this._map = this._fillMap(1);\r\n            for (let i = 0; i < this._rooms.length; i++) {\r\n                let room = this._rooms[i];\r\n                room.clearDoors();\r\n                room.create(this._digCallback);\r\n            }\r\n            this._unconnected = RNG.shuffle(this._rooms.slice());\r\n            this._connected = [];\r\n            if (this._unconnected.length) {\r\n                this._connected.push(this._unconnected.pop());\r\n            }\r\n            while (1) {\r\n                let connected = RNG.getItem(this._connected);\r\n                if (!connected) {\r\n                    break;\r\n                }\r\n                let room1 = this._closestRoom(this._unconnected, connected);\r\n                if (!room1) {\r\n                    break;\r\n                }\r\n                let room2 = this._closestRoom(this._connected, room1);\r\n                if (!room2) {\r\n                    break;\r\n                }\r\n                let ok = this._connectRooms(room1, room2);\r\n                if (!ok) {\r\n                    break;\r\n                }\r\n                if (!this._unconnected.length) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    ;\r\n    _closestRoom(rooms, room) {\r\n        let dist = Infinity;\r\n        let center = room.getCenter();\r\n        let result = null;\r\n        for (let i = 0; i < rooms.length; i++) {\r\n            let r = rooms[i];\r\n            let c = r.getCenter();\r\n            let dx = c[0] - center[0];\r\n            let dy = c[1] - center[1];\r\n            let d = dx * dx + dy * dy;\r\n            if (d < dist) {\r\n                dist = d;\r\n                result = r;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    _connectRooms(room1, room2) {\r\n        let center1 = room1.getCenter();\r\n        let center2 = room2.getCenter();\r\n        let diffX = center2[0] - center1[0];\r\n        let diffY = center2[1] - center1[1];\r\n        let start;\r\n        let end;\r\n        let dirIndex1, dirIndex2, min, max, index;\r\n        if (Math.abs(diffX) < Math.abs(diffY)) {\r\n            dirIndex1 = (diffY > 0 ? 2 : 0);\r\n            dirIndex2 = (dirIndex1 + 2) % 4;\r\n            min = room2.getLeft();\r\n            max = room2.getRight();\r\n            index = 0;\r\n        }\r\n        else {\r\n            dirIndex1 = (diffX > 0 ? 1 : 3);\r\n            dirIndex2 = (dirIndex1 + 2) % 4;\r\n            min = room2.getTop();\r\n            max = room2.getBottom();\r\n            index = 1;\r\n        }\r\n        start = this._placeInWall(room1, dirIndex1);\r\n        if (!start) {\r\n            return false;\r\n        }\r\n        if (start[index] >= min && start[index] <= max) {\r\n            end = start.slice();\r\n            let value = 0;\r\n            switch (dirIndex2) {\r\n                case 0:\r\n                    value = room2.getTop() - 1;\r\n                    break;\r\n                case 1:\r\n                    value = room2.getRight() + 1;\r\n                    break;\r\n                case 2:\r\n                    value = room2.getBottom() + 1;\r\n                    break;\r\n                case 3:\r\n                    value = room2.getLeft() - 1;\r\n                    break;\r\n            }\r\n            end[(index + 1) % 2] = value;\r\n            this._digLine([start, end]);\r\n        }\r\n        else if (start[index] < min - 1 || start[index] > max + 1) {\r\n            let diff = start[index] - center2[index];\r\n            let rotation = 0;\r\n            switch (dirIndex2) {\r\n                case 0:\r\n                case 1:\r\n                    rotation = (diff < 0 ? 3 : 1);\r\n                    break;\r\n                case 2:\r\n                case 3:\r\n                    rotation = (diff < 0 ? 1 : 3);\r\n                    break;\r\n            }\r\n            dirIndex2 = (dirIndex2 + rotation) % 4;\r\n            end = this._placeInWall(room2, dirIndex2);\r\n            if (!end) {\r\n                return false;\r\n            }\r\n            let mid = [0, 0];\r\n            mid[index] = start[index];\r\n            let index2 = (index + 1) % 2;\r\n            mid[index2] = end[index2];\r\n            this._digLine([start, mid, end]);\r\n        }\r\n        else {\r\n            let index2 = (index + 1) % 2;\r\n            end = this._placeInWall(room2, dirIndex2);\r\n            if (!end) {\r\n                return false;\r\n            }\r\n            let mid = Math.round((end[index2] + start[index2]) / 2);\r\n            let mid1 = [0, 0];\r\n            let mid2 = [0, 0];\r\n            mid1[index] = start[index];\r\n            mid1[index2] = mid;\r\n            mid2[index] = end[index];\r\n            mid2[index2] = mid;\r\n            this._digLine([start, mid1, mid2, end]);\r\n        }\r\n        room1.addDoor(start[0], start[1]);\r\n        room2.addDoor(end[0], end[1]);\r\n        index = this._unconnected.indexOf(room1);\r\n        if (index != -1) {\r\n            this._unconnected.splice(index, 1);\r\n            this._connected.push(room1);\r\n        }\r\n        index = this._unconnected.indexOf(room2);\r\n        if (index != -1) {\r\n            this._unconnected.splice(index, 1);\r\n            this._connected.push(room2);\r\n        }\r\n        return true;\r\n    }\r\n    _placeInWall(room, dirIndex) {\r\n        let start = [0, 0];\r\n        let dir = [0, 0];\r\n        let length = 0;\r\n        switch (dirIndex) {\r\n            case 0:\r\n                dir = [1, 0];\r\n                start = [room.getLeft(), room.getTop() - 1];\r\n                length = room.getRight() - room.getLeft() + 1;\r\n                break;\r\n            case 1:\r\n                dir = [0, 1];\r\n                start = [room.getRight() + 1, room.getTop()];\r\n                length = room.getBottom() - room.getTop() + 1;\r\n                break;\r\n            case 2:\r\n                dir = [1, 0];\r\n                start = [room.getLeft(), room.getBottom() + 1];\r\n                length = room.getRight() - room.getLeft() + 1;\r\n                break;\r\n            case 3:\r\n                dir = [0, 1];\r\n                start = [room.getLeft() - 1, room.getTop()];\r\n                length = room.getBottom() - room.getTop() + 1;\r\n                break;\r\n        }\r\n        let avail = [];\r\n        let lastBadIndex = -2;\r\n        for (let i = 0; i < length; i++) {\r\n            let x = start[0] + i * dir[0];\r\n            let y = start[1] + i * dir[1];\r\n            avail.push(null);\r\n            let isWall = (this._map[x][y] == 1);\r\n            if (isWall) {\r\n                if (lastBadIndex != i - 1) {\r\n                    avail[i] = [x, y];\r\n                }\r\n            }\r\n            else {\r\n                lastBadIndex = i;\r\n                if (i) {\r\n                    avail[i - 1] = null;\r\n                }\r\n            }\r\n        }\r\n        for (let i = avail.length - 1; i >= 0; i--) {\r\n            if (!avail[i]) {\r\n                avail.splice(i, 1);\r\n            }\r\n        }\r\n        return (avail.length ? RNG.getItem(avail) : null);\r\n    }\r\n    _digLine(points) {\r\n        for (let i = 1; i < points.length; i++) {\r\n            let start = points[i - 1];\r\n            let end = points[i];\r\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\r\n            corridor.create(this._digCallback);\r\n            this._corridors.push(corridor);\r\n        }\r\n    }\r\n    _digCallback(x, y, value) {\r\n        this._map[x][y] = value;\r\n        if (value == 0) {\r\n            this._dug++;\r\n        }\r\n    }\r\n    _isWallCallback(x, y) {\r\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\r\n            return false;\r\n        }\r\n        return (this._map[x][y] == 1);\r\n    }\r\n    _canBeDugCallback(x, y) {\r\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\r\n            return false;\r\n        }\r\n        return (this._map[x][y] == 1);\r\n    }\r\n}\r\n","import Map from \"./map.js\";\r\nimport { DIRS } from \"../constants.js\";\r\nimport RNG from \"../rng.js\";\r\n;\r\nexport default class Cellular extends Map {\r\n    constructor(width, height, options = {}) {\r\n        super(width, height);\r\n        this._options = {\r\n            born: [5, 6, 7, 8],\r\n            survive: [4, 5, 6, 7, 8],\r\n            topology: 8\r\n        };\r\n        this.setOptions(options);\r\n        this._dirs = DIRS[this._options.topology];\r\n        this._map = this._fillMap(0);\r\n    }\r\n    randomize(probability) {\r\n        for (let i = 0; i < this._width; i++) {\r\n            for (let j = 0; j < this._height; j++) {\r\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    setOptions(options) { Object.assign(this._options, options); }\r\n    set(x, y, value) { this._map[x][y] = value; }\r\n    create(callback) {\r\n        let newMap = this._fillMap(0);\r\n        let born = this._options.born;\r\n        let survive = this._options.survive;\r\n        for (let j = 0; j < this._height; j++) {\r\n            let widthStep = 1;\r\n            let widthStart = 0;\r\n            if (this._options.topology == 6) {\r\n                widthStep = 2;\r\n                widthStart = j % 2;\r\n            }\r\n            for (let i = widthStart; i < this._width; i += widthStep) {\r\n                let cur = this._map[i][j];\r\n                let ncount = this._getNeighbors(i, j);\r\n                if (cur && survive.indexOf(ncount) != -1) {\r\n                    newMap[i][j] = 1;\r\n                }\r\n                else if (!cur && born.indexOf(ncount) != -1) {\r\n                    newMap[i][j] = 1;\r\n                }\r\n            }\r\n        }\r\n        this._map = newMap;\r\n        callback && this._serviceCallback(callback);\r\n    }\r\n    _serviceCallback(callback) {\r\n        for (let j = 0; j < this._height; j++) {\r\n            let widthStep = 1;\r\n            let widthStart = 0;\r\n            if (this._options.topology == 6) {\r\n                widthStep = 2;\r\n                widthStart = j % 2;\r\n            }\r\n            for (let i = widthStart; i < this._width; i += widthStep) {\r\n                callback(i, j, this._map[i][j]);\r\n            }\r\n        }\r\n    }\r\n    _getNeighbors(cx, cy) {\r\n        let result = 0;\r\n        for (let i = 0; i < this._dirs.length; i++) {\r\n            let dir = this._dirs[i];\r\n            let x = cx + dir[0];\r\n            let y = cy + dir[1];\r\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\r\n                continue;\r\n            }\r\n            result += (this._map[x][y] == 1 ? 1 : 0);\r\n        }\r\n        return result;\r\n    }\r\n    connect(callback, value, connectionCallback) {\r\n        if (!value)\r\n            value = 0;\r\n        let allFreeSpace = [];\r\n        let notConnected = {};\r\n        let widthStep = 1;\r\n        let widthStarts = [0, 0];\r\n        if (this._options.topology == 6) {\r\n            widthStep = 2;\r\n            widthStarts = [0, 1];\r\n        }\r\n        for (let y = 0; y < this._height; y++) {\r\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\r\n                if (this._freeSpace(x, y, value)) {\r\n                    let p = [x, y];\r\n                    notConnected[this._pointKey(p)] = p;\r\n                    allFreeSpace.push([x, y]);\r\n                }\r\n            }\r\n        }\r\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\r\n        let key = this._pointKey(start);\r\n        let connected = {};\r\n        connected[key] = start;\r\n        delete notConnected[key];\r\n        this._findConnected(connected, notConnected, [start], false, value);\r\n        while (Object.keys(notConnected).length > 0) {\r\n            let p = this._getFromTo(connected, notConnected);\r\n            let from = p[0];\r\n            let to = p[1];\r\n            let local = {};\r\n            local[this._pointKey(from)] = from;\r\n            this._findConnected(local, notConnected, [from], true, value);\r\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\r\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\r\n            for (let k in local) {\r\n                let pp = local[k];\r\n                this._map[pp[0]][pp[1]] = value;\r\n                connected[k] = pp;\r\n                delete notConnected[k];\r\n            }\r\n        }\r\n        callback && this._serviceCallback(callback);\r\n    }\r\n    _getFromTo(connected, notConnected) {\r\n        let from = [0, 0], to = [0, 0], d;\r\n        let connectedKeys = Object.keys(connected);\r\n        let notConnectedKeys = Object.keys(notConnected);\r\n        for (let i = 0; i < 5; i++) {\r\n            if (connectedKeys.length < notConnectedKeys.length) {\r\n                let keys = connectedKeys;\r\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\r\n                from = this._getClosest(to, notConnected);\r\n            }\r\n            else {\r\n                let keys = notConnectedKeys;\r\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\r\n                to = this._getClosest(from, connected);\r\n            }\r\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\r\n            if (d < 64) {\r\n                break;\r\n            }\r\n        }\r\n        return [from, to];\r\n    }\r\n    _getClosest(point, space) {\r\n        let minPoint = null;\r\n        let minDist = null;\r\n        for (let k in space) {\r\n            let p = space[k];\r\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\r\n            if (minDist == null || d < minDist) {\r\n                minDist = d;\r\n                minPoint = p;\r\n            }\r\n        }\r\n        return minPoint;\r\n    }\r\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\r\n        while (stack.length > 0) {\r\n            let p = stack.splice(0, 1)[0];\r\n            let tests;\r\n            if (this._options.topology == 6) {\r\n                tests = [\r\n                    [p[0] + 2, p[1]],\r\n                    [p[0] + 1, p[1] - 1],\r\n                    [p[0] - 1, p[1] - 1],\r\n                    [p[0] - 2, p[1]],\r\n                    [p[0] - 1, p[1] + 1],\r\n                    [p[0] + 1, p[1] + 1],\r\n                ];\r\n            }\r\n            else {\r\n                tests = [\r\n                    [p[0] + 1, p[1]],\r\n                    [p[0] - 1, p[1]],\r\n                    [p[0], p[1] + 1],\r\n                    [p[0], p[1] - 1]\r\n                ];\r\n            }\r\n            for (let i = 0; i < tests.length; i++) {\r\n                let key = this._pointKey(tests[i]);\r\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\r\n                    connected[key] = tests[i];\r\n                    if (!keepNotConnected) {\r\n                        delete notConnected[key];\r\n                    }\r\n                    stack.push(tests[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\r\n        let a, b;\r\n        if (from[0] < to[0]) {\r\n            a = from;\r\n            b = to;\r\n        }\r\n        else {\r\n            a = to;\r\n            b = from;\r\n        }\r\n        for (let xx = a[0]; xx <= b[0]; xx++) {\r\n            this._map[xx][a[1]] = value;\r\n            let p = [xx, a[1]];\r\n            let pkey = this._pointKey(p);\r\n            connected[pkey] = p;\r\n            delete notConnected[pkey];\r\n        }\r\n        if (connectionCallback && a[0] < b[0]) {\r\n            connectionCallback(a, [b[0], a[1]]);\r\n        }\r\n        let x = b[0];\r\n        if (from[1] < to[1]) {\r\n            a = from;\r\n            b = to;\r\n        }\r\n        else {\r\n            a = to;\r\n            b = from;\r\n        }\r\n        for (let yy = a[1]; yy < b[1]; yy++) {\r\n            this._map[x][yy] = value;\r\n            let p = [x, yy];\r\n            let pkey = this._pointKey(p);\r\n            connected[pkey] = p;\r\n            delete notConnected[pkey];\r\n        }\r\n        if (connectionCallback && a[1] < b[1]) {\r\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\r\n        }\r\n    }\r\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\r\n        let a, b;\r\n        if (from[0] < to[0]) {\r\n            a = from;\r\n            b = to;\r\n        }\r\n        else {\r\n            a = to;\r\n            b = from;\r\n        }\r\n        let xx = a[0];\r\n        let yy = a[1];\r\n        while (!(xx == b[0] && yy == b[1])) {\r\n            let stepWidth = 2;\r\n            if (yy < b[1]) {\r\n                yy++;\r\n                stepWidth = 1;\r\n            }\r\n            else if (yy > b[1]) {\r\n                yy--;\r\n                stepWidth = 1;\r\n            }\r\n            if (xx < b[0]) {\r\n                xx += stepWidth;\r\n            }\r\n            else if (xx > b[0]) {\r\n                xx -= stepWidth;\r\n            }\r\n            else if (b[1] % 2) {\r\n                xx -= stepWidth;\r\n            }\r\n            else {\r\n                xx += stepWidth;\r\n            }\r\n            this._map[xx][yy] = value;\r\n            let p = [xx, yy];\r\n            let pkey = this._pointKey(p);\r\n            connected[pkey] = p;\r\n            delete notConnected[pkey];\r\n        }\r\n        if (connectionCallback) {\r\n            connectionCallback(from, to);\r\n        }\r\n    }\r\n    _freeSpace(x, y, value) {\r\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\r\n    }\r\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\r\n}\r\n","import Map from \"./map.js\";\r\nimport RNG from \"../rng.js\";\r\nexport default class DividedMaze extends Map {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._stack = [];\r\n        this._map = [];\r\n    }\r\n    create(callback) {\r\n        let w = this._width;\r\n        let h = this._height;\r\n        this._map = [];\r\n        for (let i = 0; i < w; i++) {\r\n            this._map.push([]);\r\n            for (let j = 0; j < h; j++) {\r\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\r\n                this._map[i].push(border ? 1 : 0);\r\n            }\r\n        }\r\n        this._stack = [\r\n            [1, 1, w - 2, h - 2]\r\n        ];\r\n        this._process();\r\n        for (let i = 0; i < w; i++) {\r\n            for (let j = 0; j < h; j++) {\r\n                callback(i, j, this._map[i][j]);\r\n            }\r\n        }\r\n        this._map = [];\r\n        return this;\r\n    }\r\n    _process() {\r\n        while (this._stack.length) {\r\n            let room = this._stack.shift();\r\n            this._partitionRoom(room);\r\n        }\r\n    }\r\n    _partitionRoom(room) {\r\n        let availX = [];\r\n        let availY = [];\r\n        for (let i = room[0] + 1; i < room[2]; i++) {\r\n            let top = this._map[i][room[1] - 1];\r\n            let bottom = this._map[i][room[3] + 1];\r\n            if (top && bottom && !(i % 2)) {\r\n                availX.push(i);\r\n            }\r\n        }\r\n        for (let j = room[1] + 1; j < room[3]; j++) {\r\n            let left = this._map[room[0] - 1][j];\r\n            let right = this._map[room[2] + 1][j];\r\n            if (left && right && !(j % 2)) {\r\n                availY.push(j);\r\n            }\r\n        }\r\n        if (!availX.length || !availY.length) {\r\n            return;\r\n        }\r\n        let x = RNG.getItem(availX);\r\n        let y = RNG.getItem(availY);\r\n        this._map[x][y] = 1;\r\n        let walls = [];\r\n        let w = [];\r\n        walls.push(w);\r\n        for (let i = room[0]; i < x; i++) {\r\n            this._map[i][y] = 1;\r\n            w.push([i, y]);\r\n        }\r\n        w = [];\r\n        walls.push(w);\r\n        for (let i = x + 1; i <= room[2]; i++) {\r\n            this._map[i][y] = 1;\r\n            w.push([i, y]);\r\n        }\r\n        w = [];\r\n        walls.push(w);\r\n        for (let j = room[1]; j < y; j++) {\r\n            this._map[x][j] = 1;\r\n            w.push([x, j]);\r\n        }\r\n        w = [];\r\n        walls.push(w);\r\n        for (let j = y + 1; j <= room[3]; j++) {\r\n            this._map[x][j] = 1;\r\n            w.push([x, j]);\r\n        }\r\n        let solid = RNG.getItem(walls);\r\n        for (let i = 0; i < walls.length; i++) {\r\n            let w = walls[i];\r\n            if (w == solid) {\r\n                continue;\r\n            }\r\n            let hole = RNG.getItem(w);\r\n            this._map[hole[0]][hole[1]] = 0;\r\n        }\r\n        this._stack.push([room[0], room[1], x - 1, y - 1]);\r\n        this._stack.push([x + 1, room[1], room[2], y - 1]);\r\n        this._stack.push([room[0], y + 1, x - 1, room[3]]);\r\n        this._stack.push([x + 1, y + 1, room[2], room[3]]);\r\n    }\r\n}\r\n","import Map from \"./map.js\";\r\nimport RNG from \"../rng.js\";\r\nexport default class IceyMaze extends Map {\r\n    constructor(width, height, regularity = 0) {\r\n        super(width, height);\r\n        this._regularity = regularity;\r\n        this._map = [];\r\n    }\r\n    create(callback) {\r\n        let width = this._width;\r\n        let height = this._height;\r\n        let map = this._fillMap(1);\r\n        width -= (width % 2 ? 1 : 2);\r\n        height -= (height % 2 ? 1 : 2);\r\n        let cx = 0;\r\n        let cy = 0;\r\n        let nx = 0;\r\n        let ny = 0;\r\n        let done = 0;\r\n        let blocked = false;\r\n        let dirs = [\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0]\r\n        ];\r\n        do {\r\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\r\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\r\n            if (!done) {\r\n                map[cx][cy] = 0;\r\n            }\r\n            if (!map[cx][cy]) {\r\n                this._randomize(dirs);\r\n                do {\r\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\r\n                        this._randomize(dirs);\r\n                    }\r\n                    blocked = true;\r\n                    for (let i = 0; i < 4; i++) {\r\n                        nx = cx + dirs[i][0] * 2;\r\n                        ny = cy + dirs[i][1] * 2;\r\n                        if (this._isFree(map, nx, ny, width, height)) {\r\n                            map[nx][ny] = 0;\r\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\r\n                            cx = nx;\r\n                            cy = ny;\r\n                            blocked = false;\r\n                            done++;\r\n                            break;\r\n                        }\r\n                    }\r\n                } while (!blocked);\r\n            }\r\n        } while (done + 1 < width * height / 4);\r\n        for (let i = 0; i < this._width; i++) {\r\n            for (let j = 0; j < this._height; j++) {\r\n                callback(i, j, map[i][j]);\r\n            }\r\n        }\r\n        this._map = [];\r\n        return this;\r\n    }\r\n    _randomize(dirs) {\r\n        for (let i = 0; i < 4; i++) {\r\n            dirs[i][0] = 0;\r\n            dirs[i][1] = 0;\r\n        }\r\n        switch (Math.floor(RNG.getUniform() * 4)) {\r\n            case 0:\r\n                dirs[0][0] = -1;\r\n                dirs[1][0] = 1;\r\n                dirs[2][1] = -1;\r\n                dirs[3][1] = 1;\r\n                break;\r\n            case 1:\r\n                dirs[3][0] = -1;\r\n                dirs[2][0] = 1;\r\n                dirs[1][1] = -1;\r\n                dirs[0][1] = 1;\r\n                break;\r\n            case 2:\r\n                dirs[2][0] = -1;\r\n                dirs[3][0] = 1;\r\n                dirs[0][1] = -1;\r\n                dirs[1][1] = 1;\r\n                break;\r\n            case 3:\r\n                dirs[1][0] = -1;\r\n                dirs[0][0] = 1;\r\n                dirs[3][1] = -1;\r\n                dirs[2][1] = 1;\r\n                break;\r\n        }\r\n    }\r\n    _isFree(map, x, y, width, height) {\r\n        if (x < 1 || y < 1 || x >= width || y >= height) {\r\n            return false;\r\n        }\r\n        return map[x][y];\r\n    }\r\n}\r\n","import Map from \"./map.js\";\r\nimport RNG from \"../rng.js\";\r\nimport { DIRS } from \"../constants.js\";\r\nexport default class Rogue extends Map {\r\n    constructor(width, height, options) {\r\n        super(width, height);\r\n        this.map = [];\r\n        this.rooms = [];\r\n        this.connectedCells = [];\r\n        options = Object.assign({\r\n            cellWidth: 3,\r\n            cellHeight: 3\r\n        }, options);\r\n        if (!options.hasOwnProperty(\"roomWidth\")) {\r\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\r\n        }\r\n        if (!options.hasOwnProperty(\"roomHeight\")) {\r\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\r\n        }\r\n        this._options = options;\r\n    }\r\n    create(callback) {\r\n        this.map = this._fillMap(1);\r\n        this.rooms = [];\r\n        this.connectedCells = [];\r\n        this._initRooms();\r\n        this._connectRooms();\r\n        this._connectUnconnectedRooms();\r\n        this._createRandomRoomConnections();\r\n        this._createRooms();\r\n        this._createCorridors();\r\n        if (callback) {\r\n            for (let i = 0; i < this._width; i++) {\r\n                for (let j = 0; j < this._height; j++) {\r\n                    callback(i, j, this.map[i][j]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    _calculateRoomSize(size, cell) {\r\n        let max = Math.floor((size / cell) * 0.8);\r\n        let min = Math.floor((size / cell) * 0.25);\r\n        if (min < 2) {\r\n            min = 2;\r\n        }\r\n        if (max < 2) {\r\n            max = 2;\r\n        }\r\n        return [min, max];\r\n    }\r\n    _initRooms() {\r\n        for (let i = 0; i < this._options.cellWidth; i++) {\r\n            this.rooms.push([]);\r\n            for (let j = 0; j < this._options.cellHeight; j++) {\r\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\r\n            }\r\n        }\r\n    }\r\n    _connectRooms() {\r\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\r\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\r\n        let idx;\r\n        let ncgx;\r\n        let ncgy;\r\n        let found = false;\r\n        let room;\r\n        let otherRoom;\r\n        let dirToCheck;\r\n        do {\r\n            dirToCheck = [0, 2, 4, 6];\r\n            dirToCheck = RNG.shuffle(dirToCheck);\r\n            do {\r\n                found = false;\r\n                idx = dirToCheck.pop();\r\n                ncgx = cgx + DIRS[8][idx][0];\r\n                ncgy = cgy + DIRS[8][idx][1];\r\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\r\n                    continue;\r\n                }\r\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\r\n                    continue;\r\n                }\r\n                room = this.rooms[cgx][cgy];\r\n                if (room[\"connections\"].length > 0) {\r\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\r\n                        break;\r\n                    }\r\n                }\r\n                otherRoom = this.rooms[ncgx][ncgy];\r\n                if (otherRoom[\"connections\"].length == 0) {\r\n                    otherRoom[\"connections\"].push([cgx, cgy]);\r\n                    this.connectedCells.push([ncgx, ncgy]);\r\n                    cgx = ncgx;\r\n                    cgy = ncgy;\r\n                    found = true;\r\n                }\r\n            } while (dirToCheck.length > 0 && found == false);\r\n        } while (dirToCheck.length > 0);\r\n    }\r\n    _connectUnconnectedRooms() {\r\n        let cw = this._options.cellWidth;\r\n        let ch = this._options.cellHeight;\r\n        this.connectedCells = RNG.shuffle(this.connectedCells);\r\n        let room;\r\n        let otherRoom;\r\n        let validRoom;\r\n        for (let i = 0; i < this._options.cellWidth; i++) {\r\n            for (let j = 0; j < this._options.cellHeight; j++) {\r\n                room = this.rooms[i][j];\r\n                if (room[\"connections\"].length == 0) {\r\n                    let directions = [0, 2, 4, 6];\r\n                    directions = RNG.shuffle(directions);\r\n                    validRoom = false;\r\n                    do {\r\n                        let dirIdx = directions.pop();\r\n                        let newI = i + DIRS[8][dirIdx][0];\r\n                        let newJ = j + DIRS[8][dirIdx][1];\r\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\r\n                            continue;\r\n                        }\r\n                        otherRoom = this.rooms[newI][newJ];\r\n                        validRoom = true;\r\n                        if (otherRoom[\"connections\"].length == 0) {\r\n                            break;\r\n                        }\r\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\r\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\r\n                                validRoom = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (validRoom) {\r\n                            break;\r\n                        }\r\n                    } while (directions.length);\r\n                    if (validRoom) {\r\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\r\n                    }\r\n                    else {\r\n                        console.log(\"-- Unable to connect room.\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _createRandomRoomConnections() {\r\n    }\r\n    _createRooms() {\r\n        let w = this._width;\r\n        let h = this._height;\r\n        let cw = this._options.cellWidth;\r\n        let ch = this._options.cellHeight;\r\n        let cwp = Math.floor(this._width / cw);\r\n        let chp = Math.floor(this._height / ch);\r\n        let roomw;\r\n        let roomh;\r\n        let roomWidth = this._options[\"roomWidth\"];\r\n        let roomHeight = this._options[\"roomHeight\"];\r\n        let sx;\r\n        let sy;\r\n        let otherRoom;\r\n        for (let i = 0; i < cw; i++) {\r\n            for (let j = 0; j < ch; j++) {\r\n                sx = cwp * i;\r\n                sy = chp * j;\r\n                if (sx == 0) {\r\n                    sx = 1;\r\n                }\r\n                if (sy == 0) {\r\n                    sy = 1;\r\n                }\r\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\r\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\r\n                if (j > 0) {\r\n                    otherRoom = this.rooms[i][j - 1];\r\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\r\n                        sy++;\r\n                    }\r\n                }\r\n                if (i > 0) {\r\n                    otherRoom = this.rooms[i - 1][j];\r\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\r\n                        sx++;\r\n                    }\r\n                }\r\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\r\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\r\n                while (sx + sxOffset + roomw >= w) {\r\n                    if (sxOffset) {\r\n                        sxOffset--;\r\n                    }\r\n                    else {\r\n                        roomw--;\r\n                    }\r\n                }\r\n                while (sy + syOffset + roomh >= h) {\r\n                    if (syOffset) {\r\n                        syOffset--;\r\n                    }\r\n                    else {\r\n                        roomh--;\r\n                    }\r\n                }\r\n                sx = sx + sxOffset;\r\n                sy = sy + syOffset;\r\n                this.rooms[i][j][\"x\"] = sx;\r\n                this.rooms[i][j][\"y\"] = sy;\r\n                this.rooms[i][j][\"width\"] = roomw;\r\n                this.rooms[i][j][\"height\"] = roomh;\r\n                for (let ii = sx; ii < sx + roomw; ii++) {\r\n                    for (let jj = sy; jj < sy + roomh; jj++) {\r\n                        this.map[ii][jj] = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getWallPosition(aRoom, aDirection) {\r\n        let rx;\r\n        let ry;\r\n        let door;\r\n        if (aDirection == 1 || aDirection == 3) {\r\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\r\n            if (aDirection == 1) {\r\n                ry = aRoom[\"y\"] - 2;\r\n                door = ry + 1;\r\n            }\r\n            else {\r\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\r\n                door = ry - 1;\r\n            }\r\n            this.map[rx][door] = 0;\r\n        }\r\n        else {\r\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\r\n            if (aDirection == 2) {\r\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\r\n                door = rx - 1;\r\n            }\r\n            else {\r\n                rx = aRoom[\"x\"] - 2;\r\n                door = rx + 1;\r\n            }\r\n            this.map[door][ry] = 0;\r\n        }\r\n        return [rx, ry];\r\n    }\r\n    _drawCorridor(startPosition, endPosition) {\r\n        let xOffset = endPosition[0] - startPosition[0];\r\n        let yOffset = endPosition[1] - startPosition[1];\r\n        let xpos = startPosition[0];\r\n        let ypos = startPosition[1];\r\n        let tempDist;\r\n        let xDir;\r\n        let yDir;\r\n        let move;\r\n        let moves = [];\r\n        let xAbs = Math.abs(xOffset);\r\n        let yAbs = Math.abs(yOffset);\r\n        let percent = RNG.getUniform();\r\n        let firstHalf = percent;\r\n        let secondHalf = 1 - percent;\r\n        xDir = xOffset > 0 ? 2 : 6;\r\n        yDir = yOffset > 0 ? 4 : 0;\r\n        if (xAbs < yAbs) {\r\n            tempDist = Math.ceil(yAbs * firstHalf);\r\n            moves.push([yDir, tempDist]);\r\n            moves.push([xDir, xAbs]);\r\n            tempDist = Math.floor(yAbs * secondHalf);\r\n            moves.push([yDir, tempDist]);\r\n        }\r\n        else {\r\n            tempDist = Math.ceil(xAbs * firstHalf);\r\n            moves.push([xDir, tempDist]);\r\n            moves.push([yDir, yAbs]);\r\n            tempDist = Math.floor(xAbs * secondHalf);\r\n            moves.push([xDir, tempDist]);\r\n        }\r\n        this.map[xpos][ypos] = 0;\r\n        while (moves.length > 0) {\r\n            move = moves.pop();\r\n            while (move[1] > 0) {\r\n                xpos += DIRS[8][move[0]][0];\r\n                ypos += DIRS[8][move[0]][1];\r\n                this.map[xpos][ypos] = 0;\r\n                move[1] = move[1] - 1;\r\n            }\r\n        }\r\n    }\r\n    _createCorridors() {\r\n        let cw = this._options.cellWidth;\r\n        let ch = this._options.cellHeight;\r\n        let room;\r\n        let connection;\r\n        let otherRoom;\r\n        let wall;\r\n        let otherWall;\r\n        for (let i = 0; i < cw; i++) {\r\n            for (let j = 0; j < ch; j++) {\r\n                room = this.rooms[i][j];\r\n                for (let k = 0; k < room[\"connections\"].length; k++) {\r\n                    connection = room[\"connections\"][k];\r\n                    otherRoom = this.rooms[connection[0]][connection[1]];\r\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\r\n                        wall = 2;\r\n                        otherWall = 4;\r\n                    }\r\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\r\n                        wall = 4;\r\n                        otherWall = 2;\r\n                    }\r\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\r\n                        wall = 3;\r\n                        otherWall = 1;\r\n                    }\r\n                    else {\r\n                        wall = 1;\r\n                        otherWall = 3;\r\n                    }\r\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import Backend from \"./backend.js\";\r\nimport * as Color from \"../color.js\";\r\nfunction clearToAnsi(bg) {\r\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\r\n}\r\nfunction colorToAnsi(fg, bg) {\r\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\r\n}\r\nfunction positionToAnsi(x, y) {\r\n    return `\\x1b[${y + 1};${x + 1}H`;\r\n}\r\nfunction termcolor(color) {\r\n    const SRC_COLORS = 256.0;\r\n    const DST_COLORS = 6.0;\r\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\r\n    let rgb = Color.fromString(color);\r\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\r\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\r\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\r\n    return r * 36 + g * 6 + b * 1 + 16;\r\n}\r\nexport default class Term extends Backend {\r\n    constructor() {\r\n        super();\r\n        this._offset = [0, 0];\r\n        this._cursor = [-1, -1];\r\n        this._lastColor = \"\";\r\n    }\r\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\r\n    setOptions(options) {\r\n        super.setOptions(options);\r\n        let size = [options.width, options.height];\r\n        let avail = this.computeSize();\r\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\r\n    }\r\n    clear() {\r\n        process.stdout.write(clearToAnsi(this._options.bg));\r\n    }\r\n    draw(data, clearBefore) {\r\n        let [x, y, ch, fg, bg] = data;\r\n        let dx = this._offset[0] + x;\r\n        let dy = this._offset[1] + y;\r\n        let size = this.computeSize();\r\n        if (dx < 0 || dx >= size[0]) {\r\n            return;\r\n        }\r\n        if (dy < 0 || dy >= size[1]) {\r\n            return;\r\n        }\r\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\r\n            process.stdout.write(positionToAnsi(dx, dy));\r\n            this._cursor[0] = dx;\r\n            this._cursor[1] = dy;\r\n        }\r\n        if (clearBefore) {\r\n            if (!ch) {\r\n                ch = \" \";\r\n            }\r\n        }\r\n        if (!ch) {\r\n            return;\r\n        }\r\n        let newColor = colorToAnsi(fg, bg);\r\n        if (newColor !== this._lastColor) {\r\n            process.stdout.write(newColor);\r\n            this._lastColor = newColor;\r\n        }\r\n        let chars = [].concat(ch);\r\n        process.stdout.write(chars[0]);\r\n        this._cursor[0]++;\r\n        if (this._cursor[0] >= size[0]) {\r\n            this._cursor[0] = 0;\r\n            this._cursor[1]++;\r\n        }\r\n    }\r\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\r\n    eventToPosition(x, y) { return [x, y]; }\r\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\r\n}\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import { Glyph } from \"./glyph\"\r\nimport { Color } from \"../lib\";\r\n\r\nexport class Tile {\r\n    tile: Glyph;\r\n    baseTile: Glyph;\r\n    visitedTile: Glyph;\r\n    visibility: number = 0;\r\n    visited: boolean = false;\r\n    _isWalkable: boolean = false;\r\n    _isDiggable: boolean = false;\r\n    _blocksLight: boolean = false;\r\n    name: string;\r\n\r\n    constructor(name: string, char: string=' ', background: [number,number,number]=[0,0,0], foreground: [number,number,number]=[255,255,255]) {\r\n        let walkable = false;\r\n        let diggable = false;\r\n        let blockslight = false;\r\n\r\n        switch (name) {\r\n            case 'debugWall':\r\n                blockslight = false;\r\n            case 'wall':\r\n                walkable = false;\r\n                diggable = false;\r\n                blockslight = true;\r\n                break;\r\n            case 'floor':\r\n                walkable = true;\r\n                break;\r\n            case 'empty':\r\n                walkable = true;\r\n                break;\r\n            case 'bossTile':\r\n                walkable = false;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        \r\n        this.name = name;\r\n        this._isDiggable = diggable;\r\n        this._isWalkable = walkable;\r\n        this._blocksLight = blockslight;\r\n        this.tile = new Glyph(char, background, foreground);\r\n        this.baseTile = new Glyph(char, background, foreground);\r\n        this.visitedTile = new Glyph(char, background, foreground);\r\n        let fogRGB = this.tile.foreground;\r\n        this.visitedTile.foreground = [Math.floor(fogRGB[0]*0.2), Math.floor(fogRGB[1]*0.2), Math.floor(fogRGB[2]*0.2)];\r\n    }\r\n}","import { Equipment } from \"../../components/equipment\";\r\nimport { Entity } from \"../../entity\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { Glyph } from \"../../glyph\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { randperc } from \"../../helper/randperc\";\r\nimport { qualityGenerator } from \"../../helper/qualityGenerator\";\r\n\r\nexport class Knife extends Equipment {\r\n    power_bonus: number = 2;\r\n    skill_bonus: number = 0.8;\r\n    defense_bonus: number = 0;\r\n    hp_bonus: number = 0;\r\n    owner: Entity;\r\n    prefix: string = '';\r\n    name: string = 'knife';\r\n    fullname:string = 'knife';\r\n    cooldown: number = 6\r\n    max_cooldown: number = 6\r\n    glyph: Glyph;\r\n\r\n    constructor(drop: Equipment = undefined, upgrades: number[] = undefined) {\r\n        super(\"main\");\r\n        if (drop != undefined) {\r\n            this.power_bonus = drop.power_bonus;\r\n            this.skill_bonus = drop.skill_bonus;\r\n            this.defense_bonus = drop.defense_bonus;\r\n            this.hp_bonus = drop.hp_bonus;\r\n            this.name = drop.name;\r\n            this.fullname = drop.fullname;\r\n            this.max_cooldown = drop.max_cooldown;\r\n            this.glyph = drop.glyph;\r\n        } else {\r\n            let item = qualityGenerator(\"main\");\r\n            this.power_bonus += (this.power_bonus+upgrades[0])*item.power_bonus;\r\n            this.skill_bonus += (this.skill_bonus+(upgrades[1]/10))*item.skill_bonus;\r\n            if (item.defense_bonus*100 > 13) this.defense_bonus += (Math.random()*2);\r\n            this.defense_bonus += (this.defense_bonus+upgrades[2])*item.defense_bonus;\r\n            this.max_cooldown -= Math.round((this.max_cooldown-(upgrades[3]*0.2))*item.max_cooldown);\r\n            this.hp_bonus += upgrades[4]*5;\r\n            this.fullname = item.prefix + this.name;\r\n            this.glyph = new Glyph('⟊', [0,0,0], [item.alpha, item.alpha, 0]);\r\n        }\r\n        this.startCountDown();\r\n    }\r\n\r\n\r\n\r\n    startCountDown(){\r\n        var interval = setInterval(() => {\r\n            if ( this.cooldown > 0 ) this.cooldown--;\r\n        }, 100);\r\n    }\r\n\r\n    strike() {\r\n        if ( this.cooldown <= 0) {\r\n            this.cooldown = this.max_cooldown;\r\n            let dir =this.owner.face;\r\n            let dmg = new DamageBlock(this.skill_bonus)\r\n            let attack:Entity = null;\r\n            dmg.owner = this.owner;\r\n            if (this.owner.face == 's') { \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+1, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+2, this.name, this.skill_bonus);\r\n            }\r\n            else if (this.owner.face == 'n') { \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-1, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-2, this.name, this.skill_bonus);\r\n            }\r\n            else if (this.owner.face == 'w') { \r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y, this.name, this.skill_bonus);\r\n            }\r\n            else if (this.owner.face == 'e') { \r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y, this.name, this.skill_bonus);\r\n            }\r\n        }\r\n    }\r\n}","export function randperc(perc:number): number {\r\n    /// Return -(0.perc/2) ~ +(0.perc/2)\r\n    let t = (Math.random() * (perc))-Math.ceil(perc/2);\r\n    return (t/100);\r\n}\r\n","import { Entity } from \"../entity\";\r\nimport { Fungi } from \"../content/monsters/fungi\";\r\nimport { Orc } from \"../content/monsters/orc\";\r\nimport { Troll } from \"../content/monsters/troll\";\r\nimport { Glyph } from \"../glyph\";\r\nimport { Fighter } from \"../components/fighter\";\r\nimport { Ranger } from \"../content/monsters/ranger\";\r\nimport { Wyvern } from \"../content/monsters/wyvern\";\r\nimport { Dragon } from \"../content/monsters/dragon\";\r\nimport { randperc } from \"./randperc\";\r\nimport { Crawler } from \"../content/monsters/crawler\";\r\nimport { DummyTarget } from \"../content/monsters/dummyTarget\";\r\n\r\nexport function CreateMonster(monster_choice: string, x: number, y: number, dungeon_level: number): Entity{\r\n    let dl = dungeon_level/10;\r\n    let qHp = randperc(100)+0.2+dl;\r\n    let qAtk = randperc(50)+dl;\r\n    let qDef = randperc(30)+(dl/2);\r\n    if (dungeon_level < 10 ) qDef = randperc(30)+dl;\r\n    else qHp += dl/8;\r\n    let qExp = (qHp > 0 ? qHp : qHp*0.5)+(qAtk > 0 ? qAtk*2 : qAtk*0.5)+(qDef > 0 ? qDef*3 : qDef*0.5);\r\n    qExp = qExp/3;\r\n\r\n    if (monster_choice == 'fungi') {\r\n        let fighter_component = new Fighter(30+30*qHp, 2+2*qDef, 4+4*qAtk, 25+25*qExp)\r\n        let ai_component = new Fungi();\r\n        let monster = new Entity(x, y, new Glyph('f', [0,0,0], [0, 200, 0]), 'Fungi', 1, true, 8, 2, fighter_component, ai_component);\r\n        return monster;\r\n    }\r\n    else if (monster_choice == 'orc') {\r\n        let fighter_component = new Fighter(40+40*qHp, 2+2*qDef, 4+4*qAtk, 35+35*qExp)\r\n        let ai_component = new Orc();\r\n        let monster = new Entity(x, y, new Glyph('o', [0,0,0], [0, 128, 0]), 'Orc', 1, true, 7, 2, fighter_component, ai_component);\r\n        return monster;\r\n    }\r\n    else if (monster_choice == 'dummy') {\r\n        let fighter_component = new Fighter(400+40*qHp, 0, 0+0*qAtk, 0)\r\n        let ai_component = new DummyTarget();\r\n        let monster = new Entity(x, y, new Glyph('☺', [0,0,0], [128, 128, 0]), 'Dummy', 1, true, 5, 2, fighter_component, ai_component);\r\n        return monster;\r\n    }\r\n    else if (monster_choice == 'troll') {\r\n        let fighter_component = new Fighter(90+90*qHp, 3+3*qDef, 8+8*qAtk, 60+60*qExp)\r\n        let ai_component = new Troll()\r\n        let monster = new Entity(x,y, new Glyph('t', [0,0,0], [128, 0, 128]), 'Troll', 1, true, 7, 2, fighter_component, ai_component);\r\n        return monster;\r\n    }\r\n    else if (monster_choice == 'wyvern') {\r\n        let fighter_component = new Fighter(30+30*qHp, 2+2*qDef, 5+5*qAtk, 20+20*qExp)\r\n        let ai_component = new Wyvern()\r\n        let monster = new Entity(x,y, new Glyph('w', [0,0,0], [148, 0, 211]), 'Wyvern', 1, true, 6, 2, fighter_component, ai_component);\r\n        return monster\r\n    }\r\n    else if (monster_choice == 'ranger') {\r\n        let fighter_component = new Fighter(40+40*qHp, 3+3*qDef, 8+8*qAtk, 40+40*qExp)\r\n        let ai_component = new Ranger()//Ranger()\r\n        let monster = new Entity(x,y, new Glyph('r', [0,0,0], [233, 150, 122]), 'Ranger', 1, true, 5, 2, fighter_component, ai_component);\r\n        return monster\r\n    }\r\n    else if (monster_choice == 'crawler') {\r\n        let fighter_component = new Fighter(60+60*qHp, 5+5*qDef, 8+8*qAtk, 50+50*qExp)\r\n        let ai_component = new Crawler()//Ranger()\r\n        let monster = new Entity(x,y, new Glyph('c', [0,0,0], [172, 30 , 155]), 'Crawler', 1, true, 3, 2, fighter_component, ai_component);\r\n        return monster\r\n    }\r\n    else if (monster_choice == 'dragon') {\r\n        let fighter_component = new Fighter(100+100*qHp, 6+6*qDef, 20+20*qAtk, 300+300*qExp)\r\n        let ai_component = new Dragon()\r\n        let monster = new Entity(x,y, new Glyph('Đ', [0,0,0], [220, 20, 60]), 'Dragon', 1, true, 5, 2, fighter_component, ai_component);\r\n        return monster \r\n    }\r\n}","import { Entity } from \"../../entity\";\r\nimport { Glyph } from \"../../glyph\";\r\nimport { Map } from \"../../map\";\r\n\r\nexport class Exit {\r\n    _map: Map;\r\n    glyph: Glyph;\r\n\r\n    constructor(map: Map) {\r\n        this._map = map;\r\n    }\r\n\r\n    climb() {\r\n        this._map.owner.level += 1;\r\n\r\n        this._map.owner.switchScreen(this._map.owner.Screen.playScreen);\r\n    }\r\n}","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  // Only Node.JS has a process variable that is of [[Class]] process\n  if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  } else if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  utils.forEach(['url', 'method', 'params', 'data'], function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(['headers', 'auth', 'proxy'], function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach([\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength',\n    'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken',\n    'socketPath'\n  ], function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","import { Display, Color } from \"../lib/index\";\r\nimport { Tile } from \"./tiles\";\r\nimport { Entity } from \"./entity\";\r\nimport { playScreen, startScreen, winScreen, loseScreen, debugScreen, scoreScreen } from \"./screens\";\r\nimport { KEYS } from \"../lib/constants\";\r\nimport { Objeto } from \"./interface/objeto\";\r\nimport { Glyph } from \"./glyph\";\r\nimport { Fighter } from \"./components/fighter\";\r\nimport { Messagelog } from \"./messages\";\r\nimport { Map } from \"./map\";\r\nimport { Logo } from \"../logo/logo\";\r\nimport { CreateItem } from \"./helper/createItens\";\r\nimport { Knife } from \"./content/itens/knife\";\r\n\r\n\r\n\r\nexport class Game {\r\n\t_display : Display;\r\n\t_inventory: Display;\r\n\t_messaging: Display;\r\n\tmessageLog: Messagelog;\r\n\t_messageBoxSize: number = 10;\r\n\t_currentScreen : any;\r\n\t_screenWidth: number = 74;\r\n\t_screenHeight: number = 40;\r\n\t//_screenWidth: number = 120;\r\n\t//_screenHeight: number = 90;\r\n\t_centerX: number;\r\n\t_centerY: number;\r\n\tScreen : any;\r\n\t_map : Map;\r\n\t_player: Entity;\r\n\t_entities: Entity[] = [];\r\n\ttimer: boolean = true;\r\n\tlogo: any;\r\n\tlevel: number = 0;\r\n\tblinkLevel: number = 0;\r\n\tlang: string = \"En\";\r\n\tmainmenuOpt:number = 0;\r\n\tendMessage: string= \"[A] n d  s o . . . w e  f a l l  a g a i n . . .\";\r\n\tiControl:number = 0;\r\n\tclr = 255;\r\n\tscores: {name: string, score: string, killedby: string}[] = [];\r\n\tstarttime: number=0;\r\n\tendtime: number=0;\r\n\tbg: HTMLMediaElement;\r\n\r\n\tconstructor() {\r\n\t\tthis._centerX = 0;\r\n\t\tthis._centerY = 0;\r\n\t\tthis._display= null;\r\n\t\tthis._currentScreen= null;\r\n\t\tthis.Screen = {\r\n\t\t\tstartScreen : startScreen(),\r\n\t\t\tdebugScreen : debugScreen(),\r\n\t\t\tplayScreen : playScreen(),\r\n\t\t\twinScreen : winScreen(),\r\n\t\t\tloseScreen : loseScreen(),\r\n\t\t\tscoreScreen : scoreScreen()\r\n\t\t}\r\n\t\tthis._map = null;\r\n\t\tthis._entities = new Array<Entity>();\r\n\t}\r\n\r\n\tinit() {\r\n\t\t// Any necessary initialization will go here.\r\n\t\t\r\n\t\t\r\n\t\tthis.logo = Logo();\r\n\t\t\r\n\t\tthis._display = new Display({\r\n\t\t\twidth: this._screenWidth, \r\n\t\t\theight: this._screenHeight, \r\n\t\t\tforceSquareRatio:true,\r\n\t\t\tfontFamily: \"Courier\",\r\n\t\t\tfontStyle: \"bold\", \r\n\t\t\tspacing : 0.75});\r\n\t\tthis._inventory = new Display({width: 20, height: this._screenHeight*0.8});\r\n\t\tthis._messaging = new Display({width: this._screenWidth*1.5, height: this._messageBoxSize});\r\n\t\tthis.messageLog = new Messagelog(0, this._screenHeight, this._messageBoxSize, this);\r\n\t\tthis.messageLog.messages = [{message: '', color0 : [0,0,0], color1 : [0,0,0], color2 : [0,0,0], type : \"empty\"}, \r\n\t\t\t{message: '', color0 : [0,0,0], color1 : [0,0,0], color2 : [0,0,0], type : \"empty\"}, \r\n\t\t\t{message: '', color0 : [0,0,0], color1 : [0,0,0], color2 : [0,0,0], type : \"empty\"},\r\n\t\t\t{message: '', color0 : [0,0,0], color1 : [0,0,0], color2 : [0,0,0], type : \"empty\"},\r\n\t\t\t{message: '', color0 : [0,0,0], color1 : [0,0,0], color2 : [0,0,0], type : \"empty\"},\r\n\t\t\t{message: '', color0 : [0,0,0], color1 : [0,0,0], color2 : [0,0,0], type : \"empty\"},\r\n\t\t\t{message: '', color0 : [0,0,0], color1 : [0,0,0], color2 : [0,0,0], type : \"empty\"},\r\n\t\t\t{message: '', color0 : [0,0,0], color1 : [0,0,0], color2 : [0,0,0], type : \"empty\"}]\r\n\t\t//let game = this; // So that we don't lose this\r\n\t\tlet event = \"keydown\";\r\n\r\n\t\tlet menu = document.getElementById(\"menu\")\r\n\t\twindow.addEventListener(event, e => {\r\n\t\t\t// When an event is received, send it to the\r\n\t\t\t// screen if there is one\r\n\t\t\t\r\n\t\t\tif (this._currentScreen !== null) {\r\n\t\t\t\t// Send the event type and data to the screen\r\n\t\t\t\tthis._currentScreen.handleInput(event, e, this);\r\n\t\t\t\tthis._display.clear();\r\n\t\t\t\tthis._currentScreen.render(this._display, this);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\twindow.onkeydown = ((e) => {\r\n\t\t\tif (e.keyCode == 8 && e.target == document.body)\r\n\t\t\te.preventDefault();\r\n\t\t})\r\n\t\t//add event listener to inv\r\n\t\tmenu.addEventListener(\"click\", e => {\r\n\t\t\tthis._currentScreen.handleInput(\"click\", e, this);\r\n\t\t\tthis._display.clear();\r\n\t\t\tthis._currentScreen.render(this._display, this);\r\n\t\t});\r\n\t}\r\n\r\n\tgetDisplay() {\r\n\t\treturn this._display;\r\n\t}\r\n\r\n\tgetInventory() {\r\n\t\treturn this._inventory;\r\n\t}\r\n\r\n\tgetMessaging() {\r\n\t\treturn this._messaging;\r\n\t}\r\n\r\n\twriteMessages() {\r\n\t\tlet x = 0;\r\n\t\tlet alpha = 0;\r\n\t\tlet fading = '';\r\n\t\tlet fading2 = '';\r\n\t\tlet fading3 = '';\r\n\t\tlet out = '';\r\n\t\tlet out2 = '';\r\n\t\tlet out3 = '';\r\n\t\tlet outf = '';\r\n\t\tlet base = 255;\r\n\t\tfor (let message of this.messageLog.messages) {\r\n\t\t\talpha += 0.1;\r\n\t\t\t//if (message.type.startsWith('death') || message.type.startsWith('fight') || message.type.startsWith('skill') || message.type.startsWith('pickup') || message.type.startsWith('potion')) {\r\n\t\t\t\tlet basefading = \"%c{rgb(\" + (base*alpha).toString() +\",\"+ (base*alpha).toString() +\",\"+ (base*alpha).toString() +\")}\";\r\n\t\t\t\tfading = \"%c{rgb(\" + Math.round(message.color0[0]*alpha).toString() +\",\"+Math.round(message.color0[1]*alpha).toString() +\",\"+Math.round(message.color0[2]*alpha).toString() +\")}\";\r\n\t\t\t\tfading2 = \"%c{rgb(\" + Math.round(message.color1[0]*alpha).toString() +\",\"+Math.round(message.color1[1]*alpha).toString() +\",\"+Math.round(message.color1[2]*alpha).toString() +\")}\";\r\n\t\t\t\tfading3 = \"%c{rgb(\" + Math.round(message.color2[0]*alpha).toString() +\",\"+Math.round(message.color2[1]*alpha).toString() +\",\"+Math.round(message.color2[2]*alpha).toString() +\")}\";\r\n\t\t\t\tout =  message.message.replace(/%c\\{0}/g, fading);\r\n\t\t\t\tout2 =  out.replace(/%c\\{1}/g, fading2);\r\n\t\t\t\tout3 =  out2.replace(/%c\\{2}/g, fading3);\r\n\t\t\t\toutf = out3.replace(/%c\\{base}/g, basefading);\r\n\t\t\t\tthis._messaging.drawText(1, x, ''+outf, this._screenWidth*2);\r\n\r\n\t\t\t//}\r\n\t\t\tx += 1\r\n\t\t}\r\n\t}\r\n\r\n\twriteStats() {\r\n\t\tlet hp = this._player.fighter.hp.toFixed(2);\r\n\t\tlet max_hp = this._player.fighter.max_hp();\r\n\t\tthis._inventory.drawText(0, 1, \"Status: \")\r\n\t\tif (this.lang == \"En\") {\r\n\t\t\tthis._inventory.drawText(1, 3, \"%c{rgb(255,0,0)}HP: %c{}\" +hp + \"/\" +max_hp);\r\n\t\t\tthis._inventory.drawText(1, 4, \"%c{blue}Atk: %c{}\"+this._player.fighter.power().toFixed(2));\r\n\t\t\tthis._inventory.drawText(1, 5, \"%c{yellow}Def: %c{}\"+this._player.fighter.defense().toFixed(2));\r\n\t\r\n\t\t\tif (this._player.fighter.unspentPoints > 0) {\r\n\t\t\t\tlet blink = \"\";\r\n\t\t\t\tif (this.blinkLevel < 2) blink = \"%c{rgb(140, 140, 140)}\";\r\n\t\t\t\tif (this.blinkLevel >= 2) blink = \"%c{rgb(240, 240, 240)}\";\r\n\t\t\t\tif (this.blinkLevel > 5) this.blinkLevel = 0;\r\n\t\t\t\tthis.blinkLevel += 1;\r\n\t\r\n\t\t\t\tthis._inventory.drawText(1, 7, blink +\" LEVEL UP! : \"+this._player.fighter.unspentPoints);\r\n\t\t\t\tthis._inventory.drawText(1, 8, \"%c{rgb(24,191,230)}Might: %c{}\"+this._player.fighter.base_power.toFixed(2) + blink + \" (a)\");\r\n\t\t\t\tthis._inventory.drawText(1, 9, \"%c{rgb(211, 234, 49)}Resist: %c{}\"+this._player.fighter.base_defense.toFixed(2) + blink + \" (s)\");\r\n\t\t\t\tthis._inventory.drawText(1, 10, \"%c{rgb(230, 121, 70)}Base HP: %c{}\"+ this._player.fighter.base_max_hp.toFixed(2) + blink + \" (d)\");\r\n\t\t\t} else {\r\n\t\t\t\tthis._inventory.drawText(1, 8, \"%c{rgb(24,191,230)}Might: %c{}\"+this._player.fighter.base_power.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(1, 9, \"%c{rgb(211, 234, 49)}Resist: %c{}\"+this._player.fighter.base_defense.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(1, 10, \"%c{rgb(230, 121, 70)}Base HP: %c{}\"+ this._player.fighter.base_max_hp.toFixed(2));\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._inventory.drawText(1, 12, \"%c{rgb(140, 140, 160)}Rank: %c{}\"+ this._player.fighter.rank);\r\n\t\t\tthis._inventory.drawText(1, 13, \"%c{rgb(140, 140, 160)}Exp: %c{}\"+ this._player.fighter.current_exp.toFixed(2) + \"/\" + this._player.fighter.nextRank.toFixed(2));\r\n\t\r\n\t\t\tif ( this._player.equipment != undefined) {\r\n\t\t\t\tthis._inventory.drawText(1, 15, \"%c{rgb(140, 140, 160)}Main: %c{rgb(\"+this._player.equipment.glyph.foreground.toString()+\")}\"+ this._player.equipment.name);\r\n\t\t\t\tthis._inventory.drawText(3, 16, \"%c{rgb(140, 140, 160)}atk: %c{}\"+ this._player.equipment.power_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 17, \"%c{rgb(140, 140, 160)}skl: %c{}\"+ this._player.equipment.skill_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 18, \"%c{rgb(140, 140, 160)}def: %c{}\"+ this._player.equipment.defense_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 19, \"%c{rgb(140, 140, 160)}hp: %c{}\"+ this._player.equipment.hp_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 20, \"%c{rgb(140, 140, 160)}cd: %c{}\"+ (this._player.equipment.max_cooldown-this._player.equipment.cooldown).toFixed(0) + \"/\" + this._player.equipment.max_cooldown.toFixed(0));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this._player.subequipment != undefined) {\r\n\t\t\t\tthis._inventory.drawText(1, 22, \"%c{rgb(140, 140, 160)}Sub: %c{}\"+ this._player.subequipment.name);\r\n\t\t\t\tthis._inventory.drawText(3, 23, \"%c{rgb(140, 140, 160)}atk: %c{}\"+ this._player.subequipment.power_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 24, \"%c{rgb(140, 140, 160)}skl: %c{}\"+ this._player.subequipment.skill_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 25, \"%c{rgb(140, 140, 160)}def: %c{}\"+ this._player.subequipment.defense_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 26, \"%c{rgb(140, 140, 160)}hp: %c{}\"+ this._player.subequipment.hp_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 27, \"%c{rgb(140, 140, 160)}cd: %c{}\"+ (this._player.subequipment.max_cooldown-this._player.subequipment.cooldown).toFixed(0) + \"/\" + this._player.subequipment.max_cooldown.toFixed(0));\r\n\t\t\t\t\r\n\t\t\t\tthis._inventory.drawText(1, 29, \"%c{rgb(0, 255, 102)}Potions: %c{}\"+ this._player.inventory + \" [p]\");\r\n\t\t\t} else {\r\n\t\t\t\tthis._inventory.drawText(1, 22, \"%c{rgb(0, 255, 102)}Potions: %c{}\"+ this._player.inventory + \" [p]\");\r\n\t\t\t}\r\n\t\t\t//this._inventory.drawText(1, 29, \"%c{rgb(140, 140, 160)}posdebug: %c{}\"+ this._player.x + \" \" + this._player.y);\r\n\t\t\tthis._inventory.drawText(1, 31, \"%c{rgb(140, 140, 160)}Floor: %c{}\"+ this._map.dungeon_level);\r\n\t\t}\r\n\t\telse if (this.lang = \"Pt\") {\r\n\t\t\tthis._inventory.drawText(1, 3, \"%c{rgb(255,0,0)}PV: %c{}\" +hp + \"/\" +max_hp);\r\n\t\t\tthis._inventory.drawText(1, 4, \"%c{blue}Ataque: %c{}\"+this._player.fighter.power().toFixed(2));\r\n\t\t\tthis._inventory.drawText(1, 5, \"%c{yellow}Defesa: %c{}\"+this._player.fighter.defense().toFixed(2));\r\n\r\n\t\t\tif (this._player.fighter.unspentPoints > 0) {\r\n\t\t\t\tlet blink = \"\";\r\n\t\t\t\tif (this.blinkLevel < 2) blink = \"%c{rgb(140, 140, 140)}\";\r\n\t\t\t\tif (this.blinkLevel >= 2) blink = \"%c{rgb(240, 240, 240)}\";\r\n\t\t\t\tif (this.blinkLevel > 5) this.blinkLevel = 0;\r\n\t\t\t\tthis.blinkLevel += 1;\r\n\r\n\t\t\t\tthis._inventory.drawText(1, 7, blink +\" SUBIU DE NIVEL! : \"+this._player.fighter.unspentPoints);\r\n\t\t\t\tthis._inventory.drawText(1, 8, \"%c{rgb(24,191,230)}Força: %c{}\"+this._player.fighter.base_power.toFixed(2) + blink + \" (a)\");\r\n\t\t\t\tthis._inventory.drawText(1, 9, \"%c{rgb(211, 234, 49)}Proteção: %c{}\"+this._player.fighter.base_defense.toFixed(2) + blink + \" (s)\");\r\n\t\t\t\tthis._inventory.drawText(1, 10, \"%c{rgb(230, 121, 70)}PV Base: %c{}\"+ this._player.fighter.base_max_hp.toFixed(2) + blink + \" (d)\");\r\n\t\t\t} else {\r\n\t\t\t\tthis._inventory.drawText(1, 8, \"%c{rgb(24,191,230)}Força: %c{}\"+this._player.fighter.base_power.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(1, 9, \"%c{rgb(211, 234, 49)}Proteção: %c{}\"+this._player.fighter.base_defense.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(1, 10, \"%c{rgb(230, 121, 70)}PV Base: %c{}\"+ this._player.fighter.base_max_hp.toFixed(2));\r\n\t\t\t}\r\n\r\n\t\t\tthis._inventory.drawText(1, 12, \"%c{rgb(140, 140, 160)}Rank: %c{}\"+ this._player.fighter.rank);\r\n\t\t\tthis._inventory.drawText(1, 13, \"%c{rgb(140, 140, 160)}Exp: %c{}\"+ this._player.fighter.current_exp.toFixed(2) + \"/\" + this._player.fighter.nextRank.toFixed(0));\r\n\r\n\t\t\tif ( this._player.equipment != undefined) {\r\n\t\t\t\tthis._inventory.drawText(1, 15, \"%c{rgb(140, 140, 160)}Prima: %c{rgb(\"+this._player.equipment.glyph.foreground.toString()+\")}\"+ this._player.equipment.name);\r\n\t\t\t\tthis._inventory.drawText(3, 16, \"%c{rgb(140, 140, 160)}atq: %c{}\"+ this._player.equipment.power_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 17, \"%c{rgb(140, 140, 160)}hab: %c{}\"+ this._player.equipment.skill_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 18, \"%c{rgb(140, 140, 160)}def: %c{}\"+ this._player.equipment.defense_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 19, \"%c{rgb(140, 140, 160)}pv: %c{}\"+ this._player.equipment.hp_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 20, \"%c{rgb(140, 140, 160)}cd: %c{}\"+ (this._player.equipment.max_cooldown-this._player.equipment.cooldown).toFixed(0) + \"/\" + this._player.equipment.max_cooldown.toFixed(0));\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif ( this._player.subequipment != undefined) {\r\n\t\t\t\tthis._inventory.drawText(1, 22, \"%c{rgb(140, 140, 160)}Secnd: %c{}\"+ this._player.subequipment.name);\r\n\t\t\t\tthis._inventory.drawText(3, 23, \"%c{rgb(140, 140, 160)}atq: %c{}\"+ this._player.subequipment.power_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 24, \"%c{rgb(140, 140, 160)}hab: %c{}\"+ this._player.subequipment.skill_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 25, \"%c{rgb(140, 140, 160)}def: %c{}\"+ this._player.subequipment.defense_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 26, \"%c{rgb(140, 140, 160)}pv: %c{}\"+ this._player.subequipment.hp_bonus.toFixed(2));\r\n\t\t\t\tthis._inventory.drawText(3, 27, \"%c{rgb(140, 140, 160)}cd: %c{}\"+ (this._player.subequipment.max_cooldown-this._player.subequipment.cooldown).toFixed(0) + \"/\" + this._player.subequipment.max_cooldown.toFixed(0));\r\n\t\t\t\t\r\n\t\t\t\tthis._inventory.drawText(1, 29, \"%c{rgb(0, 255, 102)}Poções: %c{}\"+ this._player.inventory + \" [p]\");\r\n\t\t\t} else {\r\n\t\t\t\tthis._inventory.drawText(1, 22, \"%c{rgb(0, 255, 102)}Poções: %c{}\"+ this._player.inventory + \" [p]\");\r\n\t\t\t}\r\n\r\n\t\t\t//this._inventory.drawText(1, 30, \"%c{rgb(140, 140, 160)}Pos: %c{}\"+ this._player.x + \" \" + this._player.y);\r\n\t\t\tthis._inventory.drawText(1, 31, \"%c{rgb(140, 140, 160)}Andar: %c{}\"+ this._map.dungeon_level);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tswitchScreen(screen : any) {\r\n\t    // If we had a screen before, notify it that we exited\r\n\t    if (this._currentScreen !== null) {\r\n\t        this._currentScreen.exit(this);\r\n\t    }\r\n\t    // Clear the display\r\n\t    this.getDisplay().clear();\r\n\t    // Update our current screen, notify it we entered\r\n\t\t// and then render it\r\n\t\tthis._currentScreen = screen;\r\n\t    if (!this._currentScreen !== null) {\r\n\t\t\tthis._currentScreen.enter(this)\r\n\t\t\tthis.refresh();\r\n\t    }\r\n\t}\r\n\r\n\trefresh() {\r\n\t\tthis._display.clear();\r\n\t\tthis._messaging.clear();\r\n\t\tthis._inventory.clear();\r\n\t\tif (this._currentScreen == this.Screen.playScreen) {\r\n\t\t\tthis.writeMessages();\r\n\t\t\tthis.writeStats();\r\n\t\t}\r\n\t\tthis._currentScreen.render(this._display, this);\r\n\t}\r\n\r\n\tstartCountDown(){\r\n\t\tlet counter = 1\r\n        var interval = setInterval(() => {\r\n\t\t\t\r\n            counter--;\r\n            if (counter < 0) {\r\n                \r\n                // code here will run when the counter reaches zero.\r\n\t\t\t\tif (!this.timer) clearInterval(interval);\r\n\t\t\t\telse counter = 1;\r\n\t\t\t\tthis.refresh();\r\n            }\t\r\n        }, 50);\r\n\t}\r\n\r\n}\r\n\r\nwindow.onload = function() {\r\n\tlet game = new Game();\r\n\t// Initialize the game\r\n\r\n\tgame.init();\r\n\t// Add the container to our HTML page\r\n\tlet doc = document.getElementById(\"game\");\r\n\tdoc.appendChild(game.getDisplay().getContainer());\r\n\tlet inv = document.getElementById(\"menu\");\r\n\tinv.appendChild(game.getInventory().getContainer());\r\n\tlet msg = document.getElementById(\"info\");\r\n\tmsg.appendChild(game.getMessaging().getContainer());\r\n\r\n\t// Load the start screen\r\n\tgame.startCountDown();\r\n\tgame.switchScreen(game.Screen.startScreen);\r\n}\r\n\r\n\r\n  \r\n","import { Game } from \"./game\"\r\nimport { Map } from \"./map\"\r\nimport { KEYS } from \"../lib/constants\"\r\nimport * as Color from \"../lib/color\"\r\nimport { Tile } from \"./tiles\";\r\nimport * as maps from \"../lib/map\"\r\nimport { Entity } from \"./entity\";\r\nimport { randint } from \"./helper/randint\";\r\nimport { Knife } from \"./content/itens/knife\";\r\nimport { Display } from \"../lib\";\r\nimport { generateDunMaze } from \"./helper/dungeonMaze\";\r\nimport { CreateItem } from \"./helper/createItens\";\r\nimport { Exit } from \"./content/itens/exit\";\r\nimport { Glyph } from \"./glyph\";\r\nimport { CreateMonster } from \"./helper/createMonters\";\r\nimport { Fighter } from \"./components/fighter\";\r\nimport axios from 'axios';\r\n\r\nexport function startScreen() {\r\n    //Game.Screen.startScreen = {\r\n    return {\r\n        enter : (game: Game) => {\r\n            game.bg = <HTMLVideoElement> document.getElementById(\"mainbg\");\r\n            game.bg.play();\r\n            let fighter = new Fighter(100, 1, 4, 0);\r\n            let player = new Entity(60, 45, new Glyph('@', [0,0,0], [0, 191, 255]), '', 1, true, 1, 1, fighter, undefined, true);\r\n            player.fighter.unspentPoints = 2;\r\n            game._player = player\r\n            game._entities = [game._player];\r\n            //let knife = new Knife();\r\n            //knife.owner = game._player;\r\n            //game._player.equipment = CreateItem('knife', game._player.x, game._player.y).item;\r\n            game._player.equipStart(CreateItem('knife', game._player.x, game._player.y, 1));\r\n            game._player.equipment.owner = game._player;\r\n            console.log('enter');\r\n\r\n                        //Get Leaderboard\r\n            axios.get('https://at-the-tsbyss-leaderboard.herokuapp.com/api/leaderboard?page=1&limit=30')\r\n            //axios.get('http://localhost:3333/api/leaderboard?page=1&limit=30')\r\n            .then(function (response: any) {\r\n                // handle success\r\n                //console.log(response);\r\n                response.data.docs.sort((a: any, b: any) => {\r\n                    return b.score - a.score;\r\n                });\r\n                game.scores = response.data.docs;\r\n            })\r\n            .catch(function (error: any) {\r\n                // handle error\r\n                console.log(error);\r\n                game.scores.push({name: \"failed to connect to leaderboads\", score: \"\", killedby: \"\"})\r\n            })\r\n        },\r\n        exit : (game: Game) => { \r\n            console.log(\"Exited start screen.\"); \r\n            game.bg.pause();\r\n        },\r\n        render : (display : any, game: Game) => {\r\n            display.drawText(1,1, \"%c{rgb(100, 100, 100)}Beta: v.190719\");\r\n            let y = 8;\r\n            for (const line of game.logo) {\r\n                display.drawText(10,y, line);\r\n                y+=1;\r\n            }\r\n\r\n\r\n            let blink = \"\";\r\n\t\t\tif (game.blinkLevel < 2) blink = \"%c{rgb(140, 140, 140)}\";\r\n\t\t\tif (game.blinkLevel >= 2) blink = \"%c{rgb(240, 240, 240)}\";\r\n\t\t\tif (game.blinkLevel > 4) game.blinkLevel = -1;\r\n            game.blinkLevel += 1;\r\n\r\n             // Render our prompt to the screen\r\n            display.drawText((game._screenWidth/2)-3,game._screenHeight-13, \"%c{rgb(0, 191, 255)}So... you are awake...\");\r\n            display.drawText((game._screenWidth/2)-5,game._screenHeight-11, \"%c{rgb(0, 191, 255)}Who are you? %c{}\"+ game._entities[0].name + blink +\"_<\");\r\n            if (game.mainmenuOpt == 0) display.drawText((game._screenWidth/2)-1,game._screenHeight-8, \"%c{yellow}>Eng%c{}      Port\");\r\n            if (game.mainmenuOpt == 1) display.drawText((game._screenWidth/2),game._screenHeight-8, \"Eng     %c{yellow}>Port%c{}\"); \r\n\r\n            display.drawText((game._screenWidth/2)+15,game._screenHeight-1, \"%c{yellow}Ctrlkey%c{}: leaderboards\"); \r\n            display.drawText((game._screenWidth/10),game._screenHeight-4, \"%c{yellow}Arrow%c{}: move/attack\"); \r\n            display.drawText((game._screenWidth/10),game._screenHeight-3, \"%c{yellow}Enter%c{}: pickup itens/open door\"); \r\n            display.drawText((game._screenWidth/10),game._screenHeight-2, \"%c{yellow}Space%c{}: use weapon skill\"); \r\n            display.drawText((game._screenWidth/10),game._screenHeight-1, \"%c{yellow}P Key%c{}: use potion\"); \r\n            \r\n        },\r\n        handleInput : (inputType : any, inputData : any, game : Game) => {\r\n            // When [Enter] is pressed, go to the play screen\r\n            if (inputType === \"keydown\") {\r\n                //console.log(inputData);\r\n                // if (inputData.keyCode === KEYS.VK_E) {\r\n                //     game.lang = \"En\";\r\n                //     game.switchScreen(game.Screen.playScreen);\r\n                // }\r\n                // if (inputData.keyCode === KEYS.VK_P) {\r\n                //     game.lang = \"Pt\";\r\n                //     game.switchScreen(game.Screen.playScreen);\r\n                // }\r\n                if (inputData.keyCode === KEYS.VK_RETURN || inputData.keyCode === KEYS.VK_ENTER) {\r\n                    if (game.mainmenuOpt == 0) game.lang = \"En\";\r\n                    if (game.mainmenuOpt == 1) game.lang = \"Pt\";\r\n                    if (game._entities[0].name.length > 0) {\r\n                        let hash = hashStringToColor(game._entities[0].name);\r\n                        game._entities[0].glyph.foreground[0] = Color.fromString(hash)[0];\r\n                        game._entities[0].glyph.foreground[1] = Color.fromString(hash)[1];\r\n                        game._entities[0].glyph.foreground[2] = Color.fromString(hash)[2];\r\n                        game.switchScreen(game.Screen.playScreen);\r\n                        if (game.starttime == 0) game.starttime = Math.floor(Date.now()/(1000*60));\r\n                    }\r\n                }\r\n                // if (inputData.keyCode === KEYS.VK_COMMA) {\r\n                //     game.switchScreen(game.Screen.winScreen);\r\n                // }\r\n\r\n                if (inputData.keyCode === KEYS.VK_LEFT) {\r\n                    game.mainmenuOpt -= 1;\r\n                    if (game.mainmenuOpt < 0) game.mainmenuOpt = 0;\r\n                }\r\n                if (inputData.keyCode === KEYS.VK_RIGHT) {\r\n                    game.mainmenuOpt += 1;\r\n                    if (game.mainmenuOpt > 1) game.mainmenuOpt = 1;\r\n                }\r\n\r\n                if (inputData.keyCode >= 65 && inputData.keyCode <= 90 && game._entities[0].name.length <= 20) game._entities[0].name = game._entities[0].name + inputData.key;\r\n                if (inputData.keyCode == 8 && game._entities[0].name.length > 0) {\r\n                    game._entities[0].name = game._entities[0].name.slice(0,-1);\r\n                }\r\n                if (inputData.keyCode == 32 && game._entities[0].name.length > 0) game._entities[0].name = game._entities[0].name + \" \";\r\n                if (inputData.keyCode == 17) {\r\n                    game.switchScreen(game.Screen.scoreScreen);\r\n                    // var http = new XMLHttpRequest();\r\n                    // var url = 'http://localhost:3333/api/leaderboard';\r\n                    // http.open('GET', url, true);\r\n\r\n                    // //Send the proper header information along with the request\r\n                    // http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n\r\n                    // http.onreadystatechange = function() {//Call a function when the state changes.\r\n                    //     if(http.readyState == 4 && http.status == 200) {\r\n                    //         alert(http.responseText);\r\n                    //     }\r\n                    // }\r\n                    // http.send('');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function debugScreen() {\r\n    return {\r\n        enter : (game : Game) => {\r\n            createDungeon(game);\r\n            //game._map._tiles[0][0] = new Tile('Floor', 'X', [0,0,0] , [200, 0, 200], true, false);\r\n            // Sync map and game variables\r\n            game._map._entities = [];\r\n\r\n            // debug stuff\r\n            let knife = new Knife();\r\n            knife.owner = game._player;\r\n            game._player.equipment = knife;\r\n            game._map._entities.push(game._player); //player always [0]\r\n            game._player._map = game._map;  \r\n            game._map._display = game._display;\r\n            game._map.messageLog = game.messageLog;\r\n\r\n            \r\n            //let ai_component = new Fungi();\r\n            //let fighter_component = new Fighter(20, 0, 3, 35);\r\n            //let monster = new Entity(60, 47, new Glyph('f', 'black', '#0000aa'), 'fungi', 1, true, 2, 2, fighter_component, ai_component, false);\r\n            //monster._map = game._map;\r\n            //game._map._entities.push(monster);\r\n\r\n            //let knifeItem = new Entity()\r\n\r\n            game.timer = true;\r\n            //game.startCountDown();\r\n            game._map.addEntityToMap('cave');\r\n            \r\n            game._entities = game._map._entities;\r\n\r\n        },\r\n        exit : () => { console.log(\"Exited play screen.\"); \r\n        },\r\n        render : (display : Display, game: Game) => {\r\n            let screenWidth = game._screenWidth;\r\n            let screenHeight = game._screenHeight;\r\n            let player = game._player;\r\n            // Make sure the x-axis doesn't go to the left of the left bound\r\n            let topLeftX = Math.max(0, player.x - (screenWidth / 2));\r\n            // Make sure we still have enough space to fit an entire game screen\r\n            topLeftX = Math.min(topLeftX, game._map._width - screenWidth);\r\n            // Make sure the y-axis doesn't above the top bound\r\n            let topLeftY = Math.max(0, player.y - (screenHeight / 2));\r\n            // Make sure we still have enough space to fit an entire game screen\r\n            topLeftY = Math.min(topLeftY, game._map._height - screenHeight);\r\n            for (let x = topLeftX; x < topLeftX + screenWidth; x++) {\r\n                for (let y = topLeftY; y < topLeftY + screenHeight; y++) {\r\n                    // Fetch the glyph for the tile and render it to the screen\r\n                    let cell = game._map.getTile(x, y) as Tile;\r\n                    //cell.visited ?\r\n                    display.draw(\r\n                        x - topLeftX, \r\n                        y - topLeftY,\r\n                        cell.visitedTile.char, \r\n                        Color.toRGB(cell.tile.foreground), \r\n                        Color.toRGB(cell.tile.background))\r\n                    \r\n                }\r\n            }\r\n            removeExpiredDamage(game._entities)\r\n            game._map._entities = entityRenderSort(game);\r\n            game._entities = game._map._entities;\r\n            for (let i = game._entities.length-1; i >= 0; i--) {\r\n                let cell = game._map.getTile(game._entities[i].x, game._entities[i].y) as Tile;\r\n                if (cell.visibility != 0) { // 0\r\n                    let dx = Math.pow(game._entities[0].x - game._entities[i].x, 2);\r\n                    let dy = Math.pow(game._entities[0].y - game._entities[i].y, 2);\r\n                    let dist = Math.sqrt(dx+dy);\r\n                    if (dist == 0 || dist <= game._entities[0].sight) {\r\n                        display.draw(\r\n                            game._entities[i].x - topLeftX,\r\n                            game._entities[i].y - topLeftY,\r\n                            game._entities[i].glyph.char,\r\n                            Color.toRGB(game._entities[i].glyph.foreground),\r\n                            Color.toRGB(game._entities[i].glyph.background)\r\n                            );\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        handleInput : (inputType : any, inputData : any, game : Game) => {\r\n            if (inputType === 'keydown') {\r\n                switch (inputData.keyCode) {\r\n                    case KEYS.VK_RETURN:\r\n                        //game.switchScreen(game.Screen.winScreen);\r\n                        let gnd = game._map.getItemAt(game._entities[0].x, game._entities[0].x2, game._entities[0].y, game._entities[0].y2);\r\n                        if (gnd.length > 0) {\r\n                            game._entities[0].equip(gnd[0]);\r\n                        } else {\r\n                        }\r\n                        break;\r\n                    case KEYS.VK_ESCAPE:\r\n                        //game.switchScreen(game.Screen.loseScreen);\r\n                        game.timer = false;\r\n                        break;\r\n                    case KEYS.VK_SPACE:\r\n                        if (game._entities[0].equipment != undefined) {\r\n                            game._entities[0].equipment.strike();\r\n                        }\r\n                        break;\r\n                    case KEYS.VK_LEFT:\r\n                        game._entities[0].move(-1, 0, game._map);\r\n                        break;\r\n                    case KEYS.VK_DOWN:\r\n                        game._entities[0].move(0, 1, game._map);\r\n                        break;\r\n                    case KEYS.VK_UP:\r\n                        game._entities[0].move(0, -1, game._map);\r\n                        break;\r\n                    case KEYS.VK_RIGHT:\r\n                        game._entities[0].move(1, 0, game._map);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function playScreen() {\r\n    return {\r\n        enter : (game : Game) => {\r\n            let corr = 99;\r\n            if (game.level == 0) {\r\n                game.bg = <HTMLVideoElement> document.getElementById(\"introbg\");\r\n                game.bg.play();\r\n                game.bg.loop = true;\r\n                createStart(game);\r\n\r\n                game._player.x = 10;\r\n                game._player.x2 = 10;\r\n                game._player.y = 28;\r\n                game._player.y2 = 28;\r\n                game._map._entities.push(game._player);\r\n                game._player._map = game._map;  \r\n                game._map._display = game._display;\r\n                game._map.messageLog = game.messageLog;\r\n                game.timer = true;\r\n                //game.startCountDown();\r\n                game._map.dungeon_level = game.level;\r\n                let exit = new Exit(game._map);\r\n                let newex = new Entity(10, 2, new Glyph(\"⍝\", [0,0,0], [20,150,200]), \"saida\", 1, false, -1,2, undefined, undefined, false, undefined, undefined, undefined, exit);\r\n                game._map._entities.push(newex);\r\n                let dummy = CreateMonster('dummy', 10, 5, 1);\r\n                dummy._map = game._map;\r\n                game._map._entities.push(dummy);\r\n                let posx = [6,10,14];\r\n                let posy = [12,10,12];\r\n                for (let i = 0; i < 3; i++) {\r\n\r\n                    let rd = randint(0,4);\r\n                    let item_choice = \"\";\r\n                    if (rd == 0) item_choice = 'potion';\r\n                    if (rd == 1) item_choice = 'knife';\r\n                    if (rd == 2) item_choice = 'knife';\r\n                    if (rd == 3) item_choice = 'dagger';\r\n                    if (rd == 4) item_choice = 'dagger';\r\n                    let q = CreateItem(item_choice, posx[i], posy[i], game.level);\r\n                    q._map = this;\r\n                    game._map._entities.push(q);\r\n                }\r\n\r\n                game._entities = game._map._entities;\r\n                return;\r\n            }\r\n            let mapType = '';\r\n            if (game.level > 0 && game.level <= 2) {\r\n                game.bg.pause();\r\n                game.bg = <HTMLVideoElement> document.getElementById(\"easybg\");\r\n                game.bg.play();\r\n                game.bg.loop = true;\r\n                corr = createCave(game);\r\n                mapType = 'cave';\r\n                if (game.level == 1) corr = 1;\r\n            }\r\n            if ((game.level > 2 && game.level <= 4) || (game.level > 10 && game.level.toString()[game.level.toString().length-1] != \"7\")) {\r\n                if (game.level == 3) {\r\n                    game.bg.pause();\r\n                    game.bg = <HTMLVideoElement> document.getElementById(\"midbg\");\r\n                    game.bg.play();\r\n                    game.bg.loop = true;\r\n                }\r\n                if( Math.random()*100 < 51 ) {\r\n                    corr = createCave(game);\r\n                    mapType = 'cave';\r\n                } else {\r\n                    corr = createDungeon(game);\r\n                    mapType = 'dungeon';\r\n                }\r\n            }\r\n            if (game.level >= 5 && game.level < 7 ) {\r\n                corr = createDungeon(game);\r\n                mapType = 'dungeon';\r\n            }\r\n            if (game.level == 8) {\r\n                game.bg.pause();\r\n                game.bg = <HTMLVideoElement> document.getElementById(\"bossbg\");\r\n                game.bg.play();\r\n                game.bg.loop = true;\r\n                game.switchScreen(winScreen);\r\n            }\r\n            if (game.level.toString()[game.level.toString().length-1] == \"7\") {\r\n                createArena(game);\r\n                game._player.x = 10;\r\n                game._player.x2 = 10;\r\n                game._player.y = 28;\r\n                game._player.y2 = 28;\r\n                game._map._entities.push(game._player);\r\n                game._player._map = game._map;  \r\n                game._map._display = game._display;\r\n                game._map.messageLog = game.messageLog;\r\n                game.timer = true;\r\n                //game.startCountDown();\r\n                game._map.dungeon_level = game.level;\r\n                game._map.addBossToMap();\r\n                game._entities = game._map._entities;\r\n                return;\r\n            }\r\n            \r\n            // Sync map and game variables\r\n            game._map._entities = [];\r\n            game._map._entities.push(game._player); //player always [0]\r\n\r\n            let newPlayerPositionBlocked = true;\r\n\r\n            while (newPlayerPositionBlocked) {\r\n                let x = randint(0, game._map._width - 1)\r\n                let y = randint(0, game._map._height - 1)\r\n\r\n                if (game._map.getTile(x, y)._isWalkable == false) {\r\n                    newPlayerPositionBlocked = true;\r\n                } else {\r\n                    game._player.x = x;\r\n                    game._player.x2 = x;\r\n                    game._player.y = y;\r\n                    game._player.y2 = y;\r\n                    newPlayerPositionBlocked = false;\r\n                }\r\n            }\r\n\r\n\r\n\r\n            game._player._map = game._map;  \r\n            game._map._display = game._display;\r\n            game._map.messageLog = game.messageLog;\r\n\r\n\r\n\r\n            game.timer = true;\r\n            //game.startCountDown();\r\n            if (corr) {\r\n                game._map.dungeon_level = game.level;\r\n                game._map.addEntityToMap(mapType);\r\n            } else {\r\n                game._map.dungeon_level = game.level+2;\r\n                game._map.addEntityToMap(mapType);\r\n                game._map.dungeon_level -= 2\r\n            }\r\n\r\n            \r\n            game._entities = game._map._entities;\r\n        },\r\n        exit : (game: Game) => { \r\n            console.log(\"Exited play screen.\"); \r\n            for (let i = 0; i < game._map._entities.length; i++) {\r\n                let element = game._map._entities[i];\r\n                if (element.fighter != undefined && element.player == false) element.fighter.hp = 0;\r\n            }\r\n            game._map._entities = [];\r\n            game._map._tiles = [];\r\n        },\r\n        render : (display : Display, game: Game) => {\r\n            let screenWidth = game._screenWidth;\r\n            let screenHeight = game._screenHeight;\r\n            if (game._player.fighter.status == 'dead') {\r\n                game.switchScreen(game.Screen.loseScreen);\r\n                return;\r\n            }\r\n            let player = game._player;\r\n            // Make sure the x-axis doesn't go to the left of the left bound\r\n            let topLeftX = Math.max(0, player.x - (screenWidth / 2));\r\n            // Make sure we still have enough space to fit an entire game screen\r\n            topLeftX = Math.min(topLeftX, game._map._width - screenWidth);\r\n            // Make sure the y-axis doesn't above the top bound\r\n            let topLeftY = Math.max(0, player.y - (screenHeight / 2));\r\n            // Make sure we still have enough space to fit an entire game screen\r\n            topLeftY = Math.min(topLeftY, game._map._height - screenHeight);\r\n\r\n            if (game.level % 7 != 0) {\r\n                for (let x = topLeftX; x < topLeftX + screenWidth; x++) {\r\n                    for (let y = topLeftY; y < topLeftY + screenHeight; y++) {\r\n                        // Fetch the glyph for the tile and render it to the screen\r\n                        let cell = game._map.getTile(x, y) as Tile;\r\n                        cell.visited ?\r\n                        display.draw(\r\n                            x - topLeftX, \r\n                            y - topLeftY,\r\n                            cell.visitedTile.char, \r\n                            Color.toRGB(cell.visitedTile.foreground), \r\n                            Color.toRGB(cell.visitedTile.background)) :\r\n                        display.draw(\r\n                            x - topLeftX, \r\n                            y - topLeftY,\r\n                            ' ', \r\n                            Color.toRGB([0,0,0]), \r\n                            Color.toRGB([0,0,0]));\r\n                        \r\n                    }\r\n                }\r\n                 game._map.setupFov(topLeftX, topLeftY);\r\n            } else {\r\n                for (let x = topLeftX; x < topLeftX + screenWidth; x++) {\r\n                    for (let y = topLeftY; y < topLeftY + screenHeight; y++) {\r\n                        // Fetch the glyph for the tile and render it to the screen\r\n                        let cell = game._map.getTile(x, y) as Tile;\r\n                        if (cell.name == 'bossTile') game._map._tiles[x][y] = new Tile('floor', '·', [0, 0, 0], [66, 7, 7]);\r\n                        display.draw(\r\n                            x - topLeftX, \r\n                            y - topLeftY,\r\n                            cell.baseTile.char, \r\n                            Color.toRGB(cell.baseTile.foreground), \r\n                            Color.toRGB(cell.baseTile.background))\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            removeExpiredDamage(game._entities)\r\n            game._map._entities = entityRenderSort(game);\r\n            game._entities = game._map._entities;\r\n\r\n            if (game.level % 7 != 0) {\r\n                for (let i = game._entities.length-1; i >= 0; i--) {\r\n                    let cell = game._map.getTile(game._entities[i].x, game._entities[i].y) as Tile;\r\n                    if (cell.visibility > 0) {\r\n                        let dx = Math.pow(game._entities[0].x - game._entities[i].x, 2);\r\n                        let dy = Math.pow(game._entities[0].y - game._entities[i].y, 2);\r\n                        let dist = Math.sqrt(dx+dy);\r\n                        if (dist == 0 || dist <= game._entities[0].sight) {\r\n                            display.draw(\r\n                                game._entities[i].x - topLeftX,\r\n                                game._entities[i].y - topLeftY,\r\n                                game._entities[i].glyph.char,\r\n                                Color.toRGB(game._entities[i].glyph.foreground),\r\n                                Color.toRGB(game._entities[i].glyph.background)\r\n                                );\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = game._entities.length-1; i >= 0; i--) {\r\n                    if (game._entities[i].boss == undefined) {\r\n                        display.draw(\r\n                            game._entities[i].x - topLeftX,\r\n                            game._entities[i].y - topLeftY,\r\n                            game._entities[i].glyph.char,\r\n                            Color.toRGB(game._entities[i].glyph.foreground),\r\n                            Color.toRGB(game._entities[i].glyph.background)\r\n                            );\r\n                    } else {\r\n                        for (let xhitbox = game._entities[i].x; xhitbox < game._entities[i].x2; xhitbox++) {\r\n                            for (let yhitbox = game._entities[i].y; yhitbox < game._entities[i].y2; yhitbox++) {\r\n                                game._map._tiles[xhitbox][yhitbox] = new Tile('bossTile', ' ');\r\n                            }\r\n                        }\r\n                        for (let line = 0; line < game._entities[i].boss.length-1; line++) {\r\n                            for (let letter = 0; letter < game._entities[i].boss[line].length; letter++) {\r\n                                let l = game._entities[i].boss[line][letter];\r\n                                let cell = game._map.getTile(game._entities[i].x+letter, game._entities[i].y+line) as Tile;\r\n                                if (l != \"·\" && cell.name != 'wall') {\r\n                                    //game._map._tiles[game._entities[i].x+letter-10][game._entities[i].y+line] = new Tile('bossTile', ' ');\r\n                                    display.draw(\r\n                                        game._entities[i].x+letter - topLeftX - 10,\r\n                                        game._entities[i].y+line - topLeftY,\r\n                                        l,\r\n                                        Color.toRGB(game._entities[i].glyph.foreground),\r\n                                        Color.toRGB(game._entities[i].glyph.background)\r\n                                        );\r\n                                }\r\n                                else {\r\n                                    game._map._tiles[game._entities[i].x+letter][game._entities[i].y+line] = new Tile('floor', '·', [0, 0, 0], [66, 7, 7]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            if (game.level == 0) {\r\n                if (game.lang == \"En\") {\r\n                    display.drawText((game._screenWidth/10),game._screenHeight-15, \"%c{yellow}Bump%c{} enemies to trade damage!\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-14, \"Blinking icons %c{yellow}hurt!%c{}\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-13, \"Your spell (space key) has your @ shade color\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-12, \"___You cant hurt yourself!\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-10, \"Test with the Dummy target!\");\r\n\r\n                    display.drawText((game._screenWidth/10),game._screenHeight-5, \"%c{yellow}Arrow%c{}: move/attack\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-4, \"%c{yellow}Enter%c{}: pickup itens/open door\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-3, \"%c{yellow}Space%c{}: use weapon skill\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-2, \"%c{yellow}P Key%c{}: use potion\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-1, \"%c{yellow}Events%c{} are logged below\"); \r\n                }\r\n                if (game.lang == \"Pt\") {\r\n                    display.drawText((game._screenWidth/10),game._screenHeight-15, \"%c{yellow}Esbarre%c{} em inimigos para trocar dano!\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-14, \"Icones piscantes %c{yellow}machucam!%c{}\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-13, \"Sua magia (barra de espaço) tem o mesmo tom do @\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-12, \"___Voce não se machuca!\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-10, \"Treine com o boneco desse nivel!\"); \r\n\r\n                    display.drawText((game._screenWidth/10),game._screenHeight-5, \"%c{yellow}Setas%c{}: mover/atacar\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-4, \"%c{yellow}Enter%c{}: pegar itens/abrir porta\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-3, \"%c{yellow}Espaço%c{}: usar habilidade da arma\"); \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-2, \"%c{yellow}P Key%c{}: usar poção\");                     \r\n                    display.drawText((game._screenWidth/10),game._screenHeight-1, \"%c{yellow}Eventos%c{} são descritos abaixo\");                     \r\n                }\r\n            }\r\n        },\r\n        handleInput : (inputType : any, inputData : any, game : Game) => {\r\n            if (inputType === 'keydown') {\r\n                switch (inputData.keyCode) {\r\n                    case KEYS.VK_RETURN:\r\n                        let gnd = game._map.getItemAt(game._entities[0].x, game._entities[0].x2, game._entities[0].y, game._entities[0].y2);\r\n                        if (gnd.length > 0) {\r\n                            if (gnd[0].stairs == undefined) {\r\n                                game._entities[0].equip(gnd[0]);\r\n                            } else {\r\n                                gnd[0].stairs.climb();\r\n                            }\r\n                        } else {\r\n                            console.log(\"nada\")\r\n                        }\r\n                        break;\r\n                    case KEYS.VK_ESCAPE:\r\n                        //game.switchScreen(game.Screen.loseScreen);\r\n                        game.timer = false;\r\n                        break;\r\n                    case KEYS.VK_SPACE:\r\n                        if (game._entities[0].equipment != undefined) {\r\n                            game._entities[0].equipment.strike();\r\n                        }\r\n                        break;\r\n                    case KEYS.VK_LEFT:\r\n                        if (game._entities[0].stamina >= game._entities[0].maxStamina) {\r\n                            game._entities[0].stamina = 0;\r\n                            game._entities[0].move(-1, 0, game._map);\r\n                        }\r\n                        break;\r\n                    case KEYS.VK_DOWN:\r\n                        if (game._entities[0].stamina >= game._entities[0].maxStamina) {\r\n                            game._entities[0].stamina = 0;\r\n                            game._entities[0].move(0, 1, game._map);\r\n                        }\r\n                        break;\r\n                    case KEYS.VK_UP:\r\n                        if (game._entities[0].stamina >= game._entities[0].maxStamina) {\r\n                            game._entities[0].stamina = 0;\r\n                            game._entities[0].move(0, -1, game._map);\r\n                        }\r\n                        break;\r\n                    case KEYS.VK_RIGHT:\r\n                        if (game._entities[0].stamina >= game._entities[0].maxStamina) {\r\n                            game._entities[0].stamina = 0;\r\n                            game._entities[0].move(1, 0, game._map);\r\n                        }\r\n                        break;\r\n                    case KEYS.VK_P:\r\n                        game._entities[0].usePotion();\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                if (game._player.fighter.unspentPoints > 0) {\r\n                    switch (inputData.keyCode) {\r\n                        case KEYS.VK_A:\r\n                            game._player.fighter.base_power += 0.5;\r\n                            game._player.fighter.unspentPoints -= 1;\r\n                            break;\r\n                        case KEYS.VK_S:\r\n                            game._player.fighter.base_defense += 0.5;\r\n                            game._player.fighter.unspentPoints -= 1;\r\n                            break;\r\n                        case KEYS.VK_D:\r\n                            game._player.fighter.base_max_hp += 20;\r\n                            game._player.fighter.hp += 20;\r\n                            game._player.fighter.unspentPoints -= 1;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    if (game._player.fighter.unspentPoints < 0) game._player.fighter.unspentPoints = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction createStart(game: Game) {\r\n    let mapWidth = 21;\r\n    let mapHeight = 31;\r\n    game._map = new Map(mapWidth, mapHeight);\r\n    game._map.owner = game;\r\n    let emptyTile = new Tile('empty', ' ', [0, 0, 0], [255, 255, 255]);\r\n    console.log(\"Entered play screen.\");\r\n    for (let x = 0; x < mapWidth; x++) {\r\n        // Create the nested array for the y values\r\n        game._map._tiles.push([]);\r\n        // Add all the tiles\r\n        for (let y = 0; y < mapHeight; y++) {\r\n            game._map._tiles[x].push(emptyTile);\r\n        }\r\n    }\r\n    for (let x = 0; x < mapWidth; x++) {\r\n        for (let y = 0; y < mapHeight; y++) {\r\n            if ((x < 4 || x > 16) && (y < 8 || y > 22)) {\r\n                game._map._tiles[x][y] = new Tile('wall', '#', [0, 0, 0], [128, 128, 128]); // false, true, true\r\n            } else {\r\n                game._map._tiles[x][y] = new Tile('floor', '·', [0, 0, 0], [60, 60, 60]); //floor\r\n            }\r\n            if (x == 0 || x == mapWidth-1 || y == 0 || y == mapHeight-1) {\r\n                game._map._tiles[x][y] = new Tile('wall', '#', [0, 0, 0], [128, 128, 128]);\r\n            } \r\n        }\r\n    }\r\n}\r\n\r\nfunction createCave(game: Game): number {//60,11,85 - //102,33,218\r\n    let mapWidth = 120;\r\n    let mapHeight = 88;\r\n    let corr = randint(0,9);\r\n    if (game.level > 10) corr = randint(0,1);\r\n    game._map = new Map(mapWidth, mapHeight);\r\n    game._map.owner = game;\r\n    let emptyTile = new Tile('empty', ' ', [0, 0, 0], [255, 255, 255]);\r\n    console.log(\"Entered play screen.\");\r\n    for (let x = 0; x < mapWidth; x++) {\r\n        // Create the nested array for the y values\r\n        game._map._tiles.push([]);\r\n        // Add all the tiles\r\n        for (let y = 0; y < mapHeight; y++) {\r\n            game._map._tiles[x].push(emptyTile);\r\n        }\r\n    }\r\n    let generator = new maps.default.Cellular(mapWidth, mapHeight);\r\n    generator.randomize(0.66);\r\n    let totalIterations = 3;\r\n    // Iteratively smoothen the map\r\n    for (let i = 0; i < totalIterations - 1; i++) {\r\n        generator.create();\r\n    }\r\n    // Smoothen it one last time and then update our map\r\n    generator.create((x, y, v) => {\r\n        if (v === 1){ // || x == 0 || y == 0 || x == mapWidth - 1 || x == mapHeight - 1) {\r\n            if (corr) game._map._tiles[x][y] = new Tile('floor', '.', [0, 0, 0], [84, 54, 11]); //floor\r\n            else game._map._tiles[x][y] = new Tile('floor', '.', [0, 0, 0], [60, 11, 85]);\r\n        }\r\n        else {\r\n            if (corr) game._map._tiles[x][y] = new Tile('wall', '#', [0, 0, 0], [218, 165, 32]);\r\n            else game._map._tiles[x][y] = new Tile('wall', '#', [0, 0, 0], [102, 33, 218]);\r\n        }\r\n        if (x == 0 || y == 0 || x == mapWidth - 1 || y == mapHeight - 1) {\r\n            if (corr) game._map._tiles[x][y] = new Tile('wall', '#', [0, 0, 0], [218, 165, 32]);\r\n            else game._map._tiles[x][y] = new Tile('wall', '#', [0, 0, 0], [102, 33, 218]);\r\n        }\r\n    });\r\n    return(corr);\r\n}\r\n\r\nfunction createDungeon(game: Game): number {\r\n    let mapWidth = 120;\r\n    let mapHeight = 88;\r\n    let corr = randint(0,9);\r\n    if (game.level > 10) corr = randint(0,1);\r\n    game._map = new Map(mapWidth, mapHeight);\r\n    game._map.owner = game;\r\n    let emptyTile = new Tile('empty', ' ', [0, 0, 0], [255, 255, 255]);\r\n    //console.log(\"Entered debug screen.\");\r\n    for (let x = 0; x < mapWidth; x++) {\r\n        // Create the nested array for the y values\r\n        game._map._tiles.push([]);\r\n        // Add all the tiles\r\n        for (let y = 0; y < mapHeight; y++) {\r\n            game._map._tiles[x].push(emptyTile);\r\n        }\r\n    }\r\n    let generator = generateDunMaze(mapWidth, mapHeight);\r\n    for (let x = 0; x < mapWidth; x++) {\r\n        for (let y = 0; y < mapHeight; y++) {\r\n            // if (generator[x][y] == 1) {\r\n            //     game._map._tiles[x][y] = new Tile('Wall', '#', [0,0,0], [218, 165, 32], true, true, false); // false, true, true\r\n            // } else {\r\n            //     game._map._tiles[x][y] = new Tile('Floor', '.', [0,0,0] , [84, 54, 11], true, false); //floor\r\n            // }\r\n            if (generator[x][y] == 1) {\r\n                if (corr) game._map._tiles[x][y] = new Tile('wall', '#', [0, 0, 0], [128, 128, 128]); // false, true, true\r\n                else game._map._tiles[x][y] = new Tile('wall', '#', [0, 0, 0], [255, 30, 30]);\r\n            }\r\n            if (generator[x][y] == 0) {\r\n                if (corr) game._map._tiles[x][y] = new Tile('floor', '·', [0, 0, 0], [60, 60, 60]); //floor\r\n                else game._map._tiles[x][y] = new Tile('floor', '·', [0, 0, 0], [80, 15, 15]);\r\n            }\r\n            if (generator[x][y] == 2) {\r\n                game._map._tiles[x][y] = new Tile('floor', 'E', [0, 0, 0], [200, 0, 0]);\r\n            }\r\n        }\r\n    }\r\n    return(corr);\r\n}\r\n\r\nexport function createArena(game: Game) {\r\n    let mapWidth = 70;\r\n    let mapHeight = 38;\r\n    game._map = new Map(mapWidth, mapHeight);\r\n    game._map.owner = game;\r\n    let emptyTile = new Tile('empty', ' ', [0, 0, 0], [255, 255, 255]);\r\n    console.log(\"Entered play screen.\");\r\n    for (let x = 0; x < mapWidth; x++) {\r\n        // Create the nested array for the y values\r\n        game._map._tiles.push([]);\r\n        // Add all the tiles\r\n        for (let y = 0; y < mapHeight; y++) {\r\n            game._map._tiles[x].push(emptyTile);\r\n        }\r\n    }\r\n    for (let x = 0; x < mapWidth; x++) {\r\n        for (let y = 0; y < mapHeight; y++) {\r\n            if (x == 0 || x == mapWidth-1 || y == 0 || y == mapHeight-1) {\r\n                game._map._tiles[x][y] = new Tile('wall', '#', [0, 0, 0], [128, 128, 128]);\r\n            } else game._map._tiles[x][y] = new Tile('floor', '·', [0, 0, 0], [66, 7, 7]);\r\n        }\r\n    }\r\n}\r\n\r\nexport function winScreen() {\r\n    return {\r\n        enter : (game: Game) => {    \r\n            game.bg.pause();\r\n            console.log(\"Entered win screen.\"); \r\n            game.endtime = Math.floor(Date.now()/(1000*60));\r\n            let gametime = game.endtime - game.starttime;\r\n            ((game._player.lastxp*(game.level > 8 ? 8 : game.level))/Math.sqrt(gametime));\r\n            axios.post('https://at-the-tsbyss-leaderboard.herokuapp.com/api/score', {\r\n                name: game._player.name,\r\n                score: (game._player.lastxp*(game.level > 8 ? 8+((game.level-8)/2) : game.level)).toFixed(2).toString(),\r\n                killedby: game._player.killedby,\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        },\r\n        exit : (game: Game) => { \r\n            console.log(\"Exited win screen.\"); \r\n        },\r\n        render : (display: any, game: Game) => {\r\n            // Render our prompt to the screen\r\n            \r\n            display.drawText(2, 16, \"%c{rgb(200,200,200)}your future is here, welcome\");\r\n            display.drawText(35, 18, \"%c{rgb(120,120,120)}l o o k a r o u n d\");\r\n            \r\n            let message = \"or... do you want to [P]ress on...?\";\r\n            for (let index = 0; index < game.iControl; index++) {\r\n                display.draw(index+20, 30, message[index], Color.toRGB([game.clr, game.clr, game.clr]), Color.toRGB([0,0,0]))\r\n                game.clr -= 4;\r\n            }\r\n            if (game.iControl <= message.length) {\r\n                game.iControl += 1;\r\n            }\r\n            game.clr = 255;\r\n        },\r\n        handleInput : (inputType: any, inputData: any, game: Game) => {\r\n            if (inputType === \"keydown\") {\r\n                if (inputData.keyCode === KEYS.VK_A || inputData.keyCode === KEYS.VK_R || inputData.keyCode === KEYS.VK_RETURN) {\r\n                    game.switchScreen(game.Screen.startScreen);\r\n                    game.clr = 255;\r\n                    game.iControl = 0;\r\n                    game.level = 0; \r\n                    game.starttime = 0;\r\n                }\r\n                if (inputData.keyCode === KEYS.VK_P) {\r\n                    game.clr = 255;\r\n                    game.iControl = 0;\r\n                    game.level += 13; \r\n                    game.switchScreen(game.Screen.playScreen);\r\n                }\r\n            }        \r\n        }\r\n    }\r\n}\r\n\r\n// Define our lsoing screen\r\nexport function loseScreen() {\r\n    return {\r\n        enter : (game: Game) => { \r\n            game.bg.pause();\r\n            console.log(\"Entered lose screen.\"); \r\n            game.endtime = Math.floor(Date.now()/(1000*60));\r\n            let gametime = game.endtime- game.starttime;\r\n            axios.post('https://at-the-tsbyss-leaderboard.herokuapp.com/api/score', {\r\n                name: game._player.name,\r\n                score: ((game._player.lastxp*(game.level > 8 ? 8+((game.level-8)/2) : game.level))/Math.sqrt(gametime)).toFixed(2).toString(),\r\n                killedby: game._player.killedby,\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n            game.level = 0;\r\n            game.starttime = 0;\r\n        },\r\n        exit : () => { console.log(\"Exited lose screen.\"); },\r\n        render : (display: Display, game: Game) => {\r\n            // Render our prompt to the screen\r\n            let message = \"[A] n d  s o . . . w e  f a l l  a g a i n . . . ?\";\r\n            for (let index = 0; index < game.iControl; index++) {\r\n                display.draw(index+15, 10+( index > 18? 1 : 0 )*20, message[index], Color.toRGB([game.clr, game.clr, game.clr]), Color.toRGB([0,0,0]))\r\n                game.clr -= 4;\r\n            }\r\n            if (game.iControl <= message.length) {\r\n                game.iControl += 1;\r\n            }\r\n            game.clr = 255;\r\n\r\n\r\n\r\n            // for (var i = 0; i < 22; i++) {\r\n            //     display.drawText(2, i + 1, \"%b{red}You lose! :(\");\r\n            // }\r\n        },\r\n        handleInput : (inputType: any, inputData: any, game: Game) => {\r\n            if (inputType === \"keydown\") {\r\n                if (inputData.keyCode === KEYS.VK_A || inputData.keyCode === KEYS.VK_R || inputData.keyCode === KEYS.VK_RETURN) {\r\n                    game.switchScreen(game.Screen.startScreen);\r\n                    game.clr = 255;\r\n                    game.iControl = 0;\r\n                }\r\n            }     \r\n        }\r\n    }\r\n}\r\n\r\n// Define our leaderboards screen\r\nexport function scoreScreen() {\r\n    return {\r\n        enter : () => {    console.log(\"Entered score screen.\"); },\r\n        exit : () => { console.log(\"Exited score screen.\"); },\r\n        render : (display: Display, game: Game) => {\r\n            // Render our prompt to the screen\r\n            display.drawText(2, 2, \"Name:\");\r\n            display.drawText(34, 2, \"Score:\");\r\n            display.drawText(50, 2, \"Killed by:\");\r\n            for (let i = 0; i < game.scores.length; i++) {\r\n                if (i == 0) {\r\n                    display.drawText(4, 3+i, \"%c{gold}\"+game.scores[i].name);\r\n                    display.drawText(36, 3+i, \"%c{gold}\"+game.scores[i].score);\r\n                    if (game.scores[i].killedby != undefined) display.drawText(53, 3+i, \"%c{gold}\"+game.scores[i].killedby);\r\n                }\r\n                if (i == 1) {\r\n                    display.drawText(4, 3+i, \"%c{#D7D7D7}\"+game.scores[i].name);\r\n                    display.drawText(36, 3+i, \"%c{#D7D7D7}\"+game.scores[i].score);\r\n                    if (game.scores[i].killedby != undefined) display.drawText(53, 3+i, \"%c{#D7D7D7}\"+game.scores[i].killedby);\r\n                } \r\n                \r\n                if (i == 2) {\r\n                    display.drawText(4, 3+i, \"%c{#CD7F32}\"+game.scores[i].name);\r\n                    display.drawText(36, 3+i, \"%c{#CD7F32}\"+game.scores[i].score);\r\n                    if (game.scores[i].killedby != undefined) display.drawText(53, 3+i, \"%c{#CD7F32}\"+game.scores[i].killedby);\r\n                }\r\n                if (i > 2) {\r\n                    display.drawText(4, 3+i, \"%c{#A7A7AD}\"+game.scores[i].name);\r\n                    display.drawText(36, 3+i, \"%c{#A7A7AD}\"+game.scores[i].score);\r\n                    if (game.scores[i].killedby != undefined) display.drawText(53, 3+i, \"%c{#A7A7AD}\"+game.scores[i].killedby);\r\n                } \r\n                \r\n                \r\n            }\r\n\r\n            \r\n\r\n        },\r\n        handleInput : (inputType: any, inputData: any, game: Game) => {\r\n            if (inputType === \"keydown\") {\r\n                if (inputData.keyCode === KEYS.VK_A || inputData.keyCode === KEYS.VK_R || inputData.keyCode === KEYS.VK_RETURN || inputData.keyCode == 17) {\r\n                    game.switchScreen(game.Screen.startScreen);\r\n                    game.clr = 255;\r\n                    game.iControl = 0;\r\n                }\r\n            }     \r\n        }\r\n    }\r\n}\r\n\r\nexport function entityRenderSort(game: Game ) {\r\n    return game._entities.sort(function (a: Entity, b: Entity) {\r\n        if(a.render_order == b.render_order) return 0;\r\n        if (a.render_order == 1) return -1;\r\n        if (b.render_order == 1) return 1;\r\n      \r\n        if (a.render_order < b.render_order)\r\n            return -1;\r\n        if (a.render_order > b.render_order)\r\n            return 1;\r\n        return 0;\r\n      });\r\n}\r\n\r\nexport function removeExpiredDamage(entities: Entity[]) {\r\n    for (let i = 0; i < entities.length; i++) {\r\n        if (entities[i].damage != undefined) {\r\n            if (entities[i].damage.expire) {\r\n                entities.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n        if (entities[i].item != undefined) {\r\n            if (entities[i].item.expire) {\r\n                entities.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction djb2(str :string){\r\n    var hash = 5381;\r\n    for (var i = 0; i < str.length; i++) {\r\n      hash = ((hash << 5) + hash) + str.charCodeAt(i); /* hash * 33 + c */\r\n    }\r\n    return hash;\r\n  }\r\n  \r\n  function hashStringToColor(str :string) {\r\n    var hash = djb2(str);\r\n    var r = (hash & 0xFF0000) >> 16;\r\n    var g = (hash & 0x00FF00) >> 8;\r\n    var b = hash & 0x0000FF;\r\n    return \"#\" + (\"0\" + r.toString(16)).substr(-2) + (\"0\" + g.toString(16)).substr(-2) + (\"0\" + b.toString(16)).substr(-2);\r\n  }\r\n","import { Tile } from \"./tiles\"\r\nimport { Glyph } from \"./glyph\";\r\nimport { Entity } from \"./entity\";\r\nimport { from_dungeon_level, random_choice_from_dict } from \"./helper/randFromLevel\";\r\nimport { randint } from \"./helper/randint\";\r\nimport { CreateMonster } from \"./helper/createMonters\"\r\nimport { Color, FOV, Display } from \"../lib\";\r\nimport { Messagelog } from \"./messages\";\r\nimport { CreateItem } from \"./helper/createItens\";\r\nimport { monsterProbabilities } from \"./settings/monsterProbabilities\";\r\nimport { itemProbabilities } from \"./settings/itemProbabilities\";\r\nimport { Game } from \"./game\";\r\nimport { Exit } from \"./content/itens/exit\";\r\nimport { CreateBoss } from \"./helper/createBoss\";\r\n\r\nexport class Map {\r\n    _display: Display;\r\n    messageLog: Messagelog;\r\n    _width: number;\r\n    _height: number;\r\n    dungeon_level: number;\r\n    _entities: Entity[];\r\n    _tiles: Tile[][];\r\n    _fov: any[];\r\n    owner: Game;\r\n\r\n    constructor(width : number, height : number) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._tiles = [];\r\n        this.dungeon_level = 1;\r\n        this._entities = [];\r\n    }\r\n\r\n    getTile(x: number, y: number) {\r\n        let emptyTile = new Tile('empty', ' ', [0,0,0], [255,255,255]);\r\n        if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\r\n            return emptyTile;\r\n        } else {\r\n            return this._tiles[x][y] || emptyTile;\r\n        }\r\n    }\r\n\r\n    getMovableArea(x: number, x2: number, y:number, y2: number): boolean {\r\n        let moveable = true;\r\n        if (x > this._width || x2 > this._width || x < 0 || x2 < 0 ) return false; \r\n        if (y > this._height || y2 > this._height || y < 0 || y2 < 0 ) return false;\r\n\r\n        for (let i = x; i <= x2; i++) {\r\n            for (let j = y; j <= y2; j++) {\r\n                if (!this.getTile(i,j)._isWalkable) {\r\n                    moveable = false;\r\n                }\r\n            }\r\n        }\r\n        return moveable;\r\n    }\r\n\r\n    getEntitiesAt(x: number, x2: number, y:number, y2: number, self: Entity): Entity[] {\r\n        let targets: Entity[] = [];\r\n\r\n        for (let index = 0; index < this._entities.length; index++) {\r\n            for (let i = x; i <= x2; i++) {\r\n                for (let j = y; j <= y2; j++) {\r\n                    if (((this._entities[index].x == i || this._entities[index].x2 == i ) && (this._entities[index].y == j ||  this._entities[index].y2 == j )\r\n                        || (this._entities[index].x <= i && this._entities[index].x2 >= i) && (this._entities[index].y <= j && this._entities[index].y2 >= j)\r\n                        ) \r\n                        && this._entities[index].blocks == true\r\n                        && this._entities[index] != self) {\r\n                        targets.push(this._entities[index]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return targets;\r\n    }\r\n\r\n    getItemAt(x: number, x2: number, y:number, y2: number): Entity[] {\r\n        let targets: Entity[] = [];\r\n        for (let index = 0; index < this._entities.length; index++) {\r\n            for (let i = x; i <= x2; i++) {\r\n                for (let j = y; j <= y2; j++) {\r\n                    if (this._entities[index].x == i && this._entities[index].y == j \r\n                        && this._entities[index].item != undefined \r\n                        && this._entities[index].item.expire == false) {\r\n                        targets.push(this._entities[index]);\r\n                    }\r\n                    if (this._entities[index].x == i && this._entities[index].y == j \r\n                        && this._entities[index].stairs != undefined) {\r\n                        targets.push(this._entities[index]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return targets;\r\n    }\r\n\r\n    getPlayer(): Entity {\r\n        let player: Entity;\r\n        for (let index = 0; index < this._entities.length; index++) {\r\n            if (this._entities[index].glyph.char == '@') player = this._entities[index];\r\n        }\r\n        return player;\r\n    }\r\n\r\n    addEntityToMap(mapType: string): void {\r\n        let max_monsters_per_room = from_dungeon_level([[30, 1], [40, 4], [40, 6]], this.dungeon_level)\r\n        let max_items_per_room = from_dungeon_level([[10, 1], [15, 4]], this.dungeon_level)\r\n\r\n        let number_of_monsters = randint(Math.ceil(max_monsters_per_room/(1.5)), max_monsters_per_room)\r\n        let number_of_items = randint(Math.ceil(max_monsters_per_room/2), max_items_per_room);\r\n        \r\n        let monster_chances = monsterProbabilities(this.dungeon_level);\r\n\r\n        let item_chances = itemProbabilities(this.dungeon_level);\r\n\r\n        let playerStart = false;\r\n\r\n        for (let index = 0; index < number_of_monsters; index++) {\r\n            let x = randint(0, this._width - 1)\r\n            let y = randint(0, this._height - 1)\r\n            let tooClose = true;\r\n            while(tooClose) {\r\n                let dist = Math.sqrt( (this._entities[0].x - x)**2+(this._entities[0].y - y)**2 );\r\n                if (dist > 20) tooClose = false;\r\n                else {\r\n                    x = randint(0, this._width - 1);\r\n                    y = randint(0, this._height - 1);\r\n                }\r\n            }\r\n            let emptyspace = true;\r\n            for (let index = 0; index < this._entities.length; index++) {\r\n                if (this._entities[index].x == x && this._entities[index].y == y) {\r\n                    emptyspace = false;\r\n                }\r\n\r\n            }\r\n\r\n            if (this.getTile(x, y)._isWalkable == false) {\r\n                emptyspace = false;\r\n            }\r\n\r\n            if (emptyspace == true) {\r\n                let monster_choice = random_choice_from_dict(monster_chances);\r\n                if (mapType == 'dungeon') {\r\n                    while (monster_choice == 'fungi' || monster_choice == 'ranger') {\r\n                        monster_choice = random_choice_from_dict(monster_chances);\r\n                    }\r\n                }\r\n                let q = CreateMonster(monster_choice, x, y, this.dungeon_level);\r\n                q._map = this;\r\n                this._entities.push(q);\r\n            } else {\r\n                index -= 1;\r\n            }\r\n        }\r\n\r\n        for (let index = 0; index < number_of_items; index++) {\r\n            let x = randint(0, this._width - 1)\r\n            let y = randint(0, this._height - 1)\r\n            let emptyspace = true;\r\n            for (let index = 0; index < this._entities.length; index++) {\r\n                if (this._entities[index].x == x && this._entities[index].y == y) {\r\n                    emptyspace = false;\r\n                }\r\n\r\n            }\r\n\r\n            if (this.getTile(x, y)._isWalkable == false) {\r\n                emptyspace = false;\r\n            }\r\n\r\n            if (emptyspace == true) {\r\n                let item_choice = random_choice_from_dict(item_chances);\r\n                let q;\r\n                if (index == 1 ) q = CreateItem(\"potion\", 61, 45, this.dungeon_level);\r\n                else q = CreateItem(item_choice, x, y, this.dungeon_level);\r\n                q._map = this;\r\n                this._entities.push(q);\r\n            } else {\r\n                index -= 1;\r\n            }\r\n        }\r\n\r\n        let emptyspace = true;\r\n        for (let xts = 0; xts < 4; xts++) {\r\n            let xexit = randint(0, this._width - 1)\r\n            let yexit = randint(0, this._height - 1)\r\n                    \r\n            while (emptyspace) {\r\n                let dist = Math.sqrt( (this._entities[0].x - xexit)**2+(this._entities[0].y - yexit)**2 );\r\n                if ( dist > 30 && this.getTile(xexit, yexit)._isWalkable) emptyspace = false;\r\n                else {\r\n                    xexit = randint(0, this._width - 1)\r\n                    yexit = randint(0, this._height - 1)\r\n                }\r\n            }\r\n\r\n            \r\n            let exit = new Exit(this);\r\n            let newex = new Entity(xexit, yexit, new Glyph(\"⍝\", [0,0,0], [20,150,200]), \"saida\", 1, false, -1,2, undefined, undefined, false, undefined, undefined, undefined, exit);\r\n            this._entities.push(newex);\r\n            //console.log(\"exitx:\" +xexit)\r\n            //console.log(\"exity:\" +yexit)\r\n            emptyspace = true\r\n        }\r\n        return null;\r\n    }\r\n\r\n    addBossToMap() {\r\n        let q = CreateBoss('angel', 10, 10, this.dungeon_level);\r\n        q._map = this;\r\n        this._entities.push(q);\r\n    }\r\n\r\n\r\n\r\n    lightPasses(x: number,y: number) {\r\n        return this._tiles[x][y]._blocksLight;\r\n    }\r\n\r\n\r\n    setupFov(topleftX: number, topleftY: number) {\r\n        \r\n        let fov = new FOV.PreciseShadowcasting((x,y): boolean => {\r\n            // x = x <= 0 ? this._entities[0].sight+1 : x >= this._width ? this._width-this._entities[0].sight-1 : x;\r\n            // y = y <= 0 ? this._entities[0].sight+1 : y >= this._height ? this._height-this._entities[0].sight-1 : y;\r\n            if ( x >= this._width) x = this._width-1;\r\n            if ( x <= 0) x = 0;\r\n            if ( y >= this._height) y = this._height-1;\r\n            if ( y <= 0) y = 0;\r\n            return !this._tiles[x][y]._blocksLight;\r\n        });\r\n\r\n        fov.compute(this._entities[0].x, this._entities[0].y, this._entities[0].sight, (x, y, r, visibility) => {\r\n            let dx = Math.pow(this._entities[0].x - x, 2);\r\n            let dy = Math.pow(this._entities[0].y - y, 2);\r\n            let dist = Math.sqrt(dx+dy);\r\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\r\n                return;\r\n            }\r\n            if (visibility == 0 ) {\r\n                this._tiles[x][y].visibility = visibility;\r\n            } else {\r\n                let fogRGB = this._tiles[x][y].baseTile.foreground;\r\n                let perc = visibility + 0.1\r\n                this._tiles[x][y].visibility = visibility;\r\n                if (dist <= this._entities[0].sight-2) {\r\n                    if (dist <= this._entities[0].sight/2) this._tiles[x][y].visited = true;\r\n                    perc = 1-((dist)/this._entities[0].sight)+0.2;\r\n                    \r\n                    this._tiles[x][y].tile.foreground = [Math.floor(fogRGB[0]*perc), Math.floor(fogRGB[1]*perc), Math.floor(fogRGB[2]*perc)];\r\n                }\r\n                else {\r\n                    this._tiles[x][y].tile.foreground = [Math.floor(fogRGB[0]*0.2), Math.floor(fogRGB[1]*0.2), Math.floor(fogRGB[2]*0.2)];\r\n                }\r\n                \r\n                this._display.draw(x - topleftX, y - topleftY, this._tiles[x][y].tile.char, Color.toRGB(this._tiles[x][y].tile.foreground), Color.toRGB([0,0,0]));\r\n            }\r\n\r\n        })\r\n        //this._fov.push(new FOV.DiscreteShadowcasting(this.lightPasses(x,y)) ) \r\n    }\r\n\r\n    getFov() {\r\n        return this._fov;\r\n    }\r\n}\r\n\r\n\r\n","import { Equipment } from \"../../components/equipment\";\r\nimport { Entity } from \"../../entity\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { Glyph } from \"../../glyph\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { qualityGenerator } from \"../../helper/qualityGenerator\";\r\n\r\nexport class Sword extends Equipment {\r\n    power_bonus: number = 4;\r\n    skill_bonus: number = 0.7;\r\n    defense_bonus: number = 0;\r\n    hp_bonus: number = 0;\r\n    owner: Entity;\r\n    name: string = 'sword';\r\n    fullname: string = 'sword';\r\n    cooldown: number = 12\r\n    max_cooldown: number = 12;\r\n\r\n    constructor(drop: Equipment = undefined, upgrades: number[] = undefined) {\r\n        super(\"main\");\r\n        if (drop != undefined) {\r\n            this.power_bonus = drop.power_bonus;\r\n            this.skill_bonus = drop.skill_bonus;\r\n            this.defense_bonus = drop.defense_bonus;\r\n            this.hp_bonus = drop.hp_bonus;\r\n            this.name = drop.name;\r\n            this.fullname = drop.fullname;\r\n            this.max_cooldown = drop.max_cooldown;\r\n        } else {\r\n            let item = qualityGenerator(\"main\");\r\n            this.power_bonus += (this.power_bonus+upgrades[0])*item.power_bonus;\r\n            this.skill_bonus += (this.skill_bonus+(upgrades[1]/10))*item.skill_bonus;\r\n            if (item.defense_bonus*100 > 13) this.defense_bonus += (Math.random()*2);\r\n            this.defense_bonus += (this.defense_bonus+upgrades[2])*item.defense_bonus;\r\n            this.max_cooldown -= Math.round((this.max_cooldown-(upgrades[3]*0.2))*item.max_cooldown);\r\n            this.hp_bonus += upgrades[4]*5;\r\n            this.fullname = item.prefix + this.name;\r\n            this.glyph = new Glyph('ރ', [0,0,0], [item.alpha, item.alpha, 0]);\r\n        }\r\n        this.startCountDown();\r\n    }\r\n\r\n    startCountDown(){\r\n        var interval = setInterval(() => {\r\n            if ( this.cooldown > 0) this.cooldown--;\r\n        }, 100);\r\n    }\r\n\r\n    strike() {\r\n        if ( this.cooldown <= 0) {\r\n            this.cooldown = this.max_cooldown;\r\n            let dir =this.owner.face;\r\n            let dmg = new DamageBlock(this.skill_bonus)\r\n            let attack:Entity = null;\r\n            dmg.owner = this.owner;\r\n            if (this.owner.face == 's') { \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+1, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+2, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+3, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+4, this.name, this.skill_bonus);\r\n            }\r\n            else if (this.owner.face == 'n') { \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-1, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-2, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-3, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-4, this.name, this.skill_bonus);\r\n            }\r\n            else if (this.owner.face == 'w') { \r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-4, this.owner.y, this.name, this.skill_bonus);\r\n            }\r\n            else if (this.owner.face == 'e') { \r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+4, this.owner.y, this.name, this.skill_bonus);\r\n            }\r\n        }\r\n    }\r\n}","import { Equipment } from \"../../components/equipment\";\r\nimport { Entity } from \"../../entity\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { Glyph } from \"../../glyph\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { qualityGenerator } from \"../../helper/qualityGenerator\";\r\n\r\nexport class Spear extends Equipment {\r\n    power_bonus: number = 3.5;\r\n    skill_bonus: number = 1.1;\r\n    defense_bonus: number = 0;\r\n    hp_bonus: number = 0;\r\n    owner: Entity;\r\n    name: string = 'spear';\r\n    fullname: string = 'spear';\r\n    max_cooldown: number = 10\r\n    cooldown: number = 13\r\n\r\n    constructor(drop: Equipment = undefined, upgrades: number[] = undefined) {\r\n        super(\"main\");\r\n        if (drop != undefined) {\r\n            this.power_bonus = drop.power_bonus;\r\n            this.skill_bonus = drop.skill_bonus;\r\n            this.defense_bonus = drop.defense_bonus;\r\n            this.hp_bonus = drop.hp_bonus;\r\n            this.name = drop.name;\r\n            this.fullname = drop.fullname;\r\n            this.max_cooldown = drop.max_cooldown;\r\n        } else {\r\n            let item = qualityGenerator(\"main\");\r\n            this.power_bonus += (this.power_bonus+upgrades[0])*item.power_bonus;\r\n            this.skill_bonus += (this.skill_bonus+(upgrades[1]/10))*item.skill_bonus;\r\n            if (item.defense_bonus*100 > 13) this.defense_bonus += (Math.random()*2);\r\n            this.defense_bonus += (this.defense_bonus+upgrades[2])*item.defense_bonus;\r\n            this.max_cooldown -= Math.round((this.max_cooldown-(upgrades[3]*0.2))*item.max_cooldown);\r\n            this.hp_bonus += upgrades[4]*5;\r\n            this.fullname = item.prefix + this.name;\r\n            this.glyph = new Glyph('ﴽ', [0,0,0], [item.alpha, item.alpha, 0]);\r\n        }\r\n        this.startCountDown();\r\n    }\r\n\r\n    startCountDown(){\r\n        var interval = setInterval(() => {\r\n            if ( this.cooldown > 0) this.cooldown--;\r\n        }, 100);\r\n    }\r\n\r\n    strike() {\r\n        if ( this.cooldown <= 0) {\r\n            this.cooldown = this.max_cooldown;\r\n            let dir =this.owner.face;\r\n            let dmg = new DamageBlock(this.skill_bonus)\r\n            let attack:Entity = null;\r\n            dmg.owner = this.owner;\r\n            if (this.owner.face == 's') { \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+1, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+2, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+3, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+4, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y+3, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y+3, this.name, this.skill_bonus);\r\n            }\r\n            else if (this.owner.face == 'n') { \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-1, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-2, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-3, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-4, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y-3, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y-3, this.name, this.skill_bonus);\r\n            }\r\n            else if (this.owner.face == 'w') { \r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-4, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y+1, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y-1, this.name, this.skill_bonus);\r\n            }\r\n            else if (this.owner.face == 'e') { \r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+4, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y+1, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y-1, this.name, this.skill_bonus);\r\n            }\r\n        }\r\n    }\r\n}","import { Equipment } from \"../../components/equipment\";\r\nimport { Entity } from \"../../entity\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { Glyph } from \"../../glyph\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { qualityGenerator } from \"../../helper/qualityGenerator\";\r\n\r\nexport class Shield extends Equipment {\r\n    power_bonus: number = 0;\r\n    skill_bonus: number = 0.1;\r\n    defense_bonus: number = 3;\r\n    hp_bonus: number = 15;\r\n    owner: Entity;\r\n    name: string = 'shield';\r\n    fullname: string = 'shield';\r\n    cooldown: number = 8\r\n    max_cooldown: number = 8\r\n    glyph: Glyph;\r\n\r\n    constructor(drop: Equipment = undefined, upgrades: number[] = undefined) {\r\n        super(\"sub\");\r\n        if (drop != undefined) {\r\n            this.power_bonus = drop.power_bonus;\r\n            this.skill_bonus = drop.skill_bonus;\r\n            this.defense_bonus = drop.defense_bonus;\r\n            this.hp_bonus = drop.hp_bonus;\r\n            this.name = drop.name;\r\n            this.fullname = drop.fullname;\r\n            this.max_cooldown = drop.max_cooldown;\r\n        } else {\r\n            let item = qualityGenerator(\"sub\");\r\n            this.power_bonus += (this.power_bonus+upgrades[0])*item.power_bonus;\r\n            this.skill_bonus += (this.skill_bonus+(upgrades[1]/10))*item.skill_bonus;\r\n            this.defense_bonus += (this.defense_bonus+upgrades[2])*item.defense_bonus;\r\n            this.max_cooldown -= Math.round((this.max_cooldown-(upgrades[3]*0.2))*item.max_cooldown);\r\n            this.hp_bonus += upgrades[4]*5;\r\n            this.fullname = item.prefix + this.name;\r\n            this.glyph = new Glyph('ꂷ', [0,0,0], [item.alpha, item.alpha, 0]);\r\n        }\r\n        this.startCountDown();\r\n    }\r\n\r\n\r\n\r\n    startCountDown(){\r\n        var interval = setInterval(() => {\r\n            if ( this.cooldown > 0) this.cooldown--;\r\n        }, 100);\r\n    }\r\n\r\n    defend(amount: number) {\r\n        if ( this.cooldown <= 0) {\r\n            this.cooldown = this.max_cooldown;\r\n            amount = amount - (this.owner.fighter.defense() * this.skill_bonus);\r\n            amount = amount < 0 ? 0 : amount;\r\n        }\r\n        return amount;\r\n    }\r\n\r\n    // strike() {\r\n    //     if ( this.cooldown == 0) {\r\n    //         this.cooldown = this.max_cooldown;\r\n    //         let dir =this.owner.face;\r\n    //         let dmg = new DamageBlock(this.skill_bonus)\r\n    //         let attack:Entity = null;\r\n    //         dmg.owner = this.owner;\r\n    //         if (this.owner.face == 's') { createDamageBlock(this.owner, this.owner.x, this.owner.y+1, this.name, this.skill_bonus);}\r\n    //         else if (this.owner.face == 'n') { createDamageBlock(this.owner, this.owner.x, this.owner.y-1, this.name, this.skill_bonus);}\r\n    //         else if (this.owner.face == 'w') { createDamageBlock(this.owner, this.owner.x-1, this.owner.y, this.name, this.skill_bonus);}\r\n    //         else if (this.owner.face == 'e') { createDamageBlock(this.owner, this.owner.x+1, this.owner.y, this.name, this.skill_bonus);}\r\n    //     }\r\n    // }\r\n}","import { Equipment } from \"../../components/equipment\";\r\nimport { Entity } from \"../../entity\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { Glyph } from \"../../glyph\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\n\r\nexport class Potion extends Equipment{\r\n    power_bonus: number = 2;\r\n    skill_bonus: number = 0.5;\r\n    defense_bonus: number = 0;\r\n    hp_bonus: number = 0;\r\n    owner: Entity;\r\n    prefix: string = '';\r\n    name: string = 'potion';\r\n    cooldown: number = 8\r\n    max_cooldown: number = 8\r\n    glyph: Glyph;\r\n\r\n    constructor(drop: Equipment = undefined) {\r\n        super(\"bag\");\r\n        this.glyph = new Glyph('ზ', [0,0,0], [204, 200, 0]);\r\n    }\r\n\r\n\r\n    strike() {\r\n        if ( this.cooldown <= 0) {\r\n            this.cooldown = this.max_cooldown;\r\n            let dir =this.owner.face;\r\n            let dmg = new DamageBlock(this.skill_bonus)\r\n            let attack:Entity = null;\r\n            dmg.owner = this.owner;\r\n            if (this.owner.face == 's') { createDamageBlock(this.owner, this.owner.x, this.owner.y+1, this.name, this.skill_bonus);}\r\n            else if (this.owner.face == 'n') { createDamageBlock(this.owner, this.owner.x, this.owner.y-1, this.name, this.skill_bonus);}\r\n            else if (this.owner.face == 'w') { createDamageBlock(this.owner, this.owner.x-1, this.owner.y, this.name, this.skill_bonus);}\r\n            else if (this.owner.face == 'e') { createDamageBlock(this.owner, this.owner.x+1, this.owner.y, this.name, this.skill_bonus);}\r\n        }\r\n    }\r\n}","import { Equipment } from \"../../components/equipment\";\r\nimport { Entity } from \"../../entity\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { Glyph } from \"../../glyph\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { randperc } from \"../../helper/randperc\";\r\nimport { qualityGenerator } from \"../../helper/qualityGenerator\";\r\n\r\nexport class Firerod extends Equipment {\r\n    power_bonus: number = -2;\r\n    skill_bonus: number = 2.5;\r\n    defense_bonus: number = 0;\r\n    hp_bonus: number = 0;\r\n    owner: Entity;\r\n    prefix: string = '';\r\n    name: string = 'firerod';\r\n    fullname:string = 'firerod';\r\n    cooldown: number = 12\r\n    max_cooldown: number = 12\r\n    glyph: Glyph;\r\n\r\n    constructor(drop: Equipment = undefined, upgrades: number[] = undefined) {\r\n        super(\"main\");\r\n        if (drop != undefined) {\r\n            this.power_bonus = drop.power_bonus;\r\n            this.skill_bonus = drop.skill_bonus;\r\n            this.defense_bonus = drop.defense_bonus;\r\n            this.hp_bonus = drop.hp_bonus;\r\n            this.name = drop.name;\r\n            this.fullname = drop.fullname;\r\n            this.max_cooldown = drop.max_cooldown;\r\n            this.glyph = drop.glyph;\r\n        } else {\r\n            let item = qualityGenerator(\"main\");\r\n            this.power_bonus += (this.power_bonus+upgrades[0])*item.power_bonus;\r\n            this.skill_bonus += (this.skill_bonus+(upgrades[1]/10))*item.skill_bonus;\r\n            if (item.defense_bonus*100 > 13) this.defense_bonus += (Math.random()*2);\r\n            this.defense_bonus += (this.defense_bonus+upgrades[2])*item.defense_bonus;\r\n            this.max_cooldown -= Math.round((this.max_cooldown-(upgrades[3]*0.2))*item.max_cooldown);\r\n            this.hp_bonus += upgrades[4]*5;\r\n            this.fullname = item.prefix + this.name;\r\n            this.glyph = new Glyph('‽', [0,0,0], [item.alpha, item.alpha, 0]);\r\n        }\r\n        this.startCountDown();\r\n    }\r\n\r\n\r\n\r\n    startCountDown(){\r\n        var interval = setInterval(() => {\r\n            if ( this.cooldown > 0 ) this.cooldown--;\r\n        }, 100);\r\n    }\r\n\r\n    strike() {\r\n        if ( this.cooldown <= 0) {\r\n            this.cooldown = this.max_cooldown;\r\n            let dir =this.owner.face;\r\n            let dmg = new DamageBlock(this.skill_bonus)\r\n            let attack:Entity = null;\r\n            dmg.owner = this.owner;\r\n            if (this.owner.face == 's') { \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+1, this.name, this.skill_bonus, 'f', 7);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y+2, this.name, this.skill_bonus, 'f', 9);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+2, this.name, this.skill_bonus, 'f', 9);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y+2, this.name, this.skill_bonus, 'f', 9);\r\n\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+3, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y+3, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y+3, this.name, this.skill_bonus, 'f', 10);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y+4, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y+4, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+4, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y+4, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y+4, this.name, this.skill_bonus, 'f', 10);\r\n            }\r\n            else if (this.owner.face == 'n') { \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-1, this.name, this.skill_bonus, 'f', 7);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y-2, this.name, this.skill_bonus, 'f', 9);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-2, this.name, this.skill_bonus, 'f', 9);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y-2, this.name, this.skill_bonus, 'f', 9);\r\n\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-3, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y-3, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y-3, this.name, this.skill_bonus, 'f', 10);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y-4, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y-4, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-4, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y-4, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y-4, this.name, this.skill_bonus, 'f', 10);\r\n            }\r\n            else if (this.owner.face == 'w') { \r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y, this.name, this.skill_bonus, 'f', 7);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y+1, this.name, this.skill_bonus, 'f', 9);\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y, this.name, this.skill_bonus, 'f', 9);\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y-1, this.name, this.skill_bonus, 'f', 9);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y+1, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y-1, this.name, this.skill_bonus, 'f', 10);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-4, this.owner.y+2, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x-4, this.owner.y+1, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x-4, this.owner.y, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x-4, this.owner.y-1, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x-4, this.owner.y-2, this.name, this.skill_bonus, 'f', 10);\r\n            }\r\n            else if (this.owner.face == 'e') { \r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y, this.name, this.skill_bonus, 'f', 7);\r\n\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y+1, this.name, this.skill_bonus, 'f', 9);\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y, this.name, this.skill_bonus, 'f', 9);\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y-1, this.name, this.skill_bonus, 'f', 9);\r\n\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y+1, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y-1, this.name, this.skill_bonus, 'f', 10);\r\n\r\n                createDamageBlock(this.owner, this.owner.x+4, this.owner.y+2, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x+4, this.owner.y+1, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x+4, this.owner.y, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x+4, this.owner.y-1, this.name, this.skill_bonus, 'f', 10);\r\n                createDamageBlock(this.owner, this.owner.x+4, this.owner.y-2, this.name, this.skill_bonus, 'f', 10);\r\n            }\r\n        }\r\n    }\r\n}","import { Equipment } from \"../../components/equipment\";\r\nimport { Entity } from \"../../entity\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { Glyph } from \"../../glyph\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { randperc } from \"../../helper/randperc\";\r\nimport { qualityGenerator } from \"../../helper/qualityGenerator\";\r\n\r\nexport class Dagger extends Equipment {\r\n    power_bonus: number = 1.5;\r\n    skill_bonus: number = 1.5;\r\n    defense_bonus: number = 0;\r\n    hp_bonus: number = 0;\r\n    owner: Entity;\r\n    prefix: string = '';\r\n    name: string = 'dagger';\r\n    fullname:string = 'dagger';\r\n    cooldown: number = 8\r\n    max_cooldown: number = 8\r\n    glyph: Glyph;\r\n\r\n    constructor(drop: Equipment = undefined, upgrades: number[] = undefined) {\r\n        super(\"main\");\r\n        if (drop != undefined) {\r\n            this.power_bonus = drop.power_bonus;\r\n            this.skill_bonus = drop.skill_bonus;\r\n            this.defense_bonus = drop.defense_bonus;\r\n            this.hp_bonus = drop.hp_bonus;\r\n            this.name = drop.name;\r\n            this.fullname = drop.fullname;\r\n            this.max_cooldown = drop.max_cooldown;\r\n            this.glyph = drop.glyph;\r\n        } else {\r\n            let item = qualityGenerator(\"main\");\r\n            this.power_bonus += (this.power_bonus+upgrades[0])*item.power_bonus;\r\n            this.skill_bonus += (this.skill_bonus+(upgrades[1]/10))*item.skill_bonus;\r\n            if (item.defense_bonus*100 > 13) this.defense_bonus += (Math.random()*2);\r\n            this.defense_bonus += (this.defense_bonus+upgrades[2])*item.defense_bonus;\r\n            this.max_cooldown -= Math.round((this.max_cooldown-(upgrades[3]*0.2))*item.max_cooldown);\r\n            this.hp_bonus += upgrades[4]*5;\r\n            this.fullname = item.prefix + this.name;\r\n            this.glyph = new Glyph('🗡', [0,0,0], [item.alpha, item.alpha, 0]);\r\n        }\r\n        this.startCountDown();\r\n    }\r\n\r\n\r\n\r\n    startCountDown(){\r\n        var interval = setInterval(() => {\r\n            if ( this.cooldown > 0 ) this.cooldown--;\r\n        }, 100);\r\n    }\r\n\r\n    strike() {\r\n        if ( this.cooldown <= 0) {\r\n            this.cooldown = this.max_cooldown;\r\n            let dir =this.owner.face;\r\n            let dmg = new DamageBlock(this.skill_bonus)\r\n            let attack:Entity = null;\r\n            dmg.owner = this.owner;\r\n            if (this.owner.face == 's') { \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+2, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y+3, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+3, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y+3, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+4, this.name, this.skill_bonus);\r\n            }\r\n            else if (this.owner.face == 'n') { \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-2, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y-3, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-3, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y-3, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-4, this.name, this.skill_bonus);\r\n            }\r\n            else if (this.owner.face == 'w') { \r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y+1, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y-1, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x-4, this.owner.y, this.name, this.skill_bonus);\r\n            }\r\n            else if (this.owner.face == 'e') { \r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y-1, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y+1, this.name, this.skill_bonus);\r\n                createDamageBlock(this.owner, this.owner.x+4, this.owner.y, this.name, this.skill_bonus);\r\n            }\r\n        }\r\n    }\r\n}","import { Equipment } from \"../../components/equipment\";\r\nimport { Entity } from \"../../entity\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { Glyph } from \"../../glyph\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { randperc } from \"../../helper/randperc\";\r\nimport { qualityGenerator } from \"../../helper/qualityGenerator\";\r\n\r\nexport class Icerod extends Equipment {\r\n    power_bonus: number = -2;\r\n    skill_bonus: number = 2.5;\r\n    defense_bonus: number = 0;\r\n    hp_bonus: number = 0;\r\n    owner: Entity;\r\n    prefix: string = '';\r\n    name: string = 'icerod';\r\n    fullname:string = 'icerod';\r\n    cooldown: number = 12\r\n    max_cooldown: number = 12\r\n    glyph: Glyph;\r\n\r\n    constructor(drop: Equipment = undefined, upgrades: number[] = undefined) {\r\n        super(\"main\");\r\n        if (drop != undefined) {\r\n            this.power_bonus = drop.power_bonus;\r\n            this.skill_bonus = drop.skill_bonus;\r\n            this.defense_bonus = drop.defense_bonus;\r\n            this.hp_bonus = drop.hp_bonus;\r\n            this.name = drop.name;\r\n            this.fullname = drop.fullname;\r\n            this.max_cooldown = drop.max_cooldown;\r\n            this.glyph = drop.glyph;\r\n        } else {\r\n            let item = qualityGenerator(\"main\");\r\n            this.power_bonus += (this.power_bonus+upgrades[0])*item.power_bonus;\r\n            this.skill_bonus += (this.skill_bonus+(upgrades[1]/10))*item.skill_bonus;\r\n            if (item.defense_bonus*100 > 13) this.defense_bonus += (Math.random()*2);\r\n            this.defense_bonus += (this.defense_bonus+upgrades[2])*item.defense_bonus;\r\n            this.max_cooldown -= Math.round((this.max_cooldown-(upgrades[3]*0.2))*item.max_cooldown);\r\n            this.hp_bonus += upgrades[4]*5;\r\n            this.fullname = item.prefix + this.name;\r\n            this.glyph = new Glyph('☦', [0,0,0], [item.alpha, item.alpha, 0]);\r\n        }\r\n        this.startCountDown();\r\n    }\r\n\r\n\r\n\r\n    startCountDown(){\r\n        var interval = setInterval(() => {\r\n            if ( this.cooldown > 0 ) this.cooldown--;\r\n        }, 100);\r\n    }\r\n\r\n    strike() {\r\n        if ( this.cooldown <= 0) {\r\n            this.cooldown = this.max_cooldown;\r\n            let dir =this.owner.face;\r\n            let dmg = new DamageBlock(this.skill_bonus)\r\n            let attack:Entity = null;\r\n            dmg.owner = this.owner;\r\n            if (this.owner.face == 's') { \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+1, this.name, this.skill_bonus, '♢', 8);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y+2, this.name, this.skill_bonus, '♢', 8);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+2, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y+2, this.name, this.skill_bonus, '♢', 8);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y+3, this.name, this.skill_bonus, '♢', 8);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y+3, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+3, this.name, this.skill_bonus, '♢', 10);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y+3, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y+3, this.name, this.skill_bonus, '♢', 8);\r\n\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y+4, this.name, this.skill_bonus, '♢', 8);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+4, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y+4, this.name, this.skill_bonus, '♢', 8);\r\n                \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+5, this.name, this.skill_bonus, '♢', 8);\r\n            }\r\n            else if (this.owner.face == 'n') { \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-1, this.name, this.skill_bonus, '♢', 8);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y-2, this.name, this.skill_bonus, '♢', 8);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-2, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y-2, this.name, this.skill_bonus, '♢', 8);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y-3, this.name, this.skill_bonus, '♢', 8);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y-3, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-3, this.name, this.skill_bonus, '♢', 10);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y-3, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y-3, this.name, this.skill_bonus, '♢', 8);\r\n\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y-4, this.name, this.skill_bonus, '♢', 8);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-4, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y-4, this.name, this.skill_bonus, '♢', 8);\r\n                \r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-5, this.name, this.skill_bonus, '♢', 8);\r\n            }\r\n            else if (this.owner.face == 'w') { \r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y, this.name, this.skill_bonus, '♢', 8);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y+1, this.name, this.skill_bonus, '♢', 8);\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y-1, this.name, this.skill_bonus, '♢', 8);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y+2, this.name, this.skill_bonus, '♢', 8);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y+1, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y, this.name, this.skill_bonus, '♢', 10);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y-1, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y-2, this.name, this.skill_bonus, '♢', 8);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-4, this.owner.y+1, this.name, this.skill_bonus, '♢', 8);\r\n                createDamageBlock(this.owner, this.owner.x-4, this.owner.y, this.name, this.skill_bonus, '♢', 10);\r\n                createDamageBlock(this.owner, this.owner.x-4, this.owner.y-1, this.name, this.skill_bonus, '♢', 8);\r\n                \r\n                createDamageBlock(this.owner, this.owner.x-4, this.owner.y, this.name, this.skill_bonus, '♢', 8);\r\n            }\r\n            else if (this.owner.face == 'e') { \r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y, this.name, this.skill_bonus, '♢', 8);\r\n\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y+1, this.name, this.skill_bonus, '♢', 8);\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y-1, this.name, this.skill_bonus, '♢', 8);\r\n\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y+2, this.name, this.skill_bonus, '♢', 8);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y+1, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y, this.name, this.skill_bonus, '♢', 10);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y-1, this.name, this.skill_bonus, '♢', 9);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y-2, this.name, this.skill_bonus, '♢', 8);\r\n\r\n                createDamageBlock(this.owner, this.owner.x+4, this.owner.y+1, this.name, this.skill_bonus, '♢', 8);\r\n                createDamageBlock(this.owner, this.owner.x+4, this.owner.y, this.name, this.skill_bonus, '♢', 10);\r\n                createDamageBlock(this.owner, this.owner.x+4, this.owner.y-1, this.name, this.skill_bonus, '♢', 8);\r\n                \r\n                createDamageBlock(this.owner, this.owner.x+4, this.owner.y, this.name, this.skill_bonus, '♢', 8);\r\n            }\r\n        }\r\n    }\r\n}","import { Equipment } from \"../../components/equipment\";\r\nimport { Entity } from \"../../entity\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { Glyph } from \"../../glyph\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { randperc } from \"../../helper/randperc\";\r\nimport { qualityGenerator } from \"../../helper/qualityGenerator\";\r\n\r\nexport class CrossedSwords extends Equipment {\r\n    power_bonus: number = 7;\r\n    skill_bonus: number = 1;\r\n    defense_bonus: number = -1;\r\n    hp_bonus: number = 0;\r\n    owner: Entity;\r\n    prefix: string = '';\r\n    name: string = 'crossedswords';\r\n    fullname:string = 'crossedswords';\r\n    cooldown: number = 8\r\n    max_cooldown: number = 8\r\n    glyph: Glyph;\r\n\r\n    constructor(drop: Equipment = undefined, upgrades:number[] = undefined) {\r\n        super(\"main\");\r\n        if (drop != undefined) {\r\n            this.power_bonus = drop.power_bonus;\r\n            this.skill_bonus = drop.skill_bonus;\r\n            this.defense_bonus = drop.defense_bonus;\r\n            this.hp_bonus = drop.hp_bonus;\r\n            this.name = drop.name;\r\n            this.fullname = drop.fullname;\r\n            this.max_cooldown = drop.max_cooldown;\r\n            this.glyph = drop.glyph;\r\n        } else {\r\n            let item = qualityGenerator(\"main\");\r\n            this.power_bonus += (this.power_bonus+upgrades[0])*item.power_bonus;\r\n            this.skill_bonus += (this.skill_bonus+(upgrades[1]/10))*item.skill_bonus;\r\n            if (item.defense_bonus*100 > 13) this.defense_bonus += (Math.random()*2);\r\n            this.defense_bonus += (this.defense_bonus+upgrades[2])*item.defense_bonus;\r\n            this.max_cooldown -= Math.round((this.max_cooldown-(upgrades[3]*0.2))*item.max_cooldown);\r\n            this.hp_bonus += upgrades[4]*5;\r\n            this.fullname = item.prefix + this.name;\r\n            this.glyph = new Glyph('⚔', [0,0,0], [item.alpha, item.alpha, 0]);\r\n        }\r\n        this.startCountDown();\r\n    }\r\n\r\n\r\n\r\n    startCountDown(){\r\n        var interval = setInterval(() => {\r\n            if ( this.cooldown > 0 ) this.cooldown--;\r\n        }, 100);\r\n    }\r\n\r\n    strike() {\r\n        if ( this.cooldown <= 0) {\r\n            this.cooldown = this.max_cooldown;\r\n            let dir =this.owner.face;\r\n            let dmg = new DamageBlock(this.skill_bonus)\r\n            let attack:Entity = null;\r\n            dmg.owner = this.owner;\r\n            if (this.owner.face == 's') { \r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y+1, this.name, this.skill_bonus, '✖', 6);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+1, this.name, this.skill_bonus, '✖', 6);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y+1, this.name, this.skill_bonus, '✖', 6);\r\n\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y+2, this.name, this.skill_bonus, '✖', 6);\r\n\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y+3, this.name, this.skill_bonus, '✖', 6);\r\n                //createDamageBlock(this.owner, this.owner.x, this.owner.y+4, this.name, this.skill_bonus, '✖', 6);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y+3, this.name, this.skill_bonus, '✖', 6);\r\n            }\r\n            else if (this.owner.face == 'n') { \r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y-1, this.name, this.skill_bonus, '✖', 6);\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-1, this.name, this.skill_bonus, '✖', 6);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y-1, this.name, this.skill_bonus, '✖', 6);\r\n\r\n                createDamageBlock(this.owner, this.owner.x, this.owner.y-2, this.name, this.skill_bonus, '✖', 6);\r\n\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y-3, this.name, this.skill_bonus, '✖', 6);\r\n                //createDamageBlock(this.owner, this.owner.x, this.owner.y-4, this.name, this.skill_bonus, '✖', 6);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y-3, this.name, this.skill_bonus, '✖', 6);\r\n            }\r\n            else if (this.owner.face == 'w') { \r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y+1, this.name, this.skill_bonus, '✖', 6);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y, this.name, this.skill_bonus, '✖', 6);\r\n                createDamageBlock(this.owner, this.owner.x-1, this.owner.y-1, this.name, this.skill_bonus, '✖', 6);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-2, this.owner.y, this.name, this.skill_bonus, '✖', 6);\r\n\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y+1, this.name, this.skill_bonus, '✖', 6);\r\n                //createDamageBlock(this.owner, this.owner.x, this.owner.y-4, this.name, this.skill_bonus, '✖', 6);\r\n                createDamageBlock(this.owner, this.owner.x-3, this.owner.y-1, this.name, this.skill_bonus, '✖', 6);\r\n            }\r\n            else if (this.owner.face == 'e') { \r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y+1, this.name, this.skill_bonus, '✖', 6);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y, this.name, this.skill_bonus, '✖', 6);\r\n                createDamageBlock(this.owner, this.owner.x+1, this.owner.y-1, this.name, this.skill_bonus, '✖', 6);\r\n\r\n                createDamageBlock(this.owner, this.owner.x+2, this.owner.y, this.name, this.skill_bonus, '✖', 6);\r\n\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y+1, this.name, this.skill_bonus, '✖', 6);\r\n                //createDamageBlock(this.owner, this.owner.x, this.owner.y-4, this.name, this.skill_bonus, '✖', 6);\r\n                createDamageBlock(this.owner, this.owner.x+3, this.owner.y-1, this.name, this.skill_bonus, '✖', 6);\r\n            }\r\n        }\r\n    }\r\n}","import { Equipment } from \"../../components/equipment\";\r\nimport { Entity } from \"../../entity\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { Glyph } from \"../../glyph\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { qualityGenerator } from \"../../helper/qualityGenerator\";\r\n\r\nexport class Offdagger extends Equipment {\r\n    power_bonus: number = 1;\r\n    skill_bonus: number = 0.5;\r\n    defense_bonus: number = -0.5;\r\n    hp_bonus: number = -10;\r\n    owner: Entity;\r\n    name: string = 'offdagger';\r\n    fullname: string = 'offdagger';\r\n    cooldown: number = 6\r\n    max_cooldown: number = 6\r\n    glyph: Glyph;\r\n\r\n    constructor(drop: Equipment = undefined, upgrades: number[] = undefined) {\r\n        super(\"sub\");\r\n        if (drop != undefined) {\r\n            this.power_bonus = drop.power_bonus;\r\n            this.skill_bonus = drop.skill_bonus;\r\n            this.defense_bonus = drop.defense_bonus;\r\n            this.hp_bonus = drop.hp_bonus;\r\n            this.name = drop.name;\r\n            this.fullname = drop.fullname;\r\n            this.max_cooldown = drop.max_cooldown;\r\n        } else {\r\n            let item = qualityGenerator(\"sub\");\r\n            this.power_bonus += (this.power_bonus+upgrades[0])*item.power_bonus;\r\n            this.skill_bonus += (this.skill_bonus+(upgrades[1]/10))*item.skill_bonus;\r\n            this.defense_bonus += (this.defense_bonus+upgrades[2])*item.defense_bonus;\r\n            this.max_cooldown -= Math.round((this.max_cooldown-(upgrades[3]*0.2))*item.max_cooldown);\r\n            this.hp_bonus += upgrades[4]*5;\r\n            this.fullname = item.prefix + this.name;\r\n            this.glyph = new Glyph('℩', [0,0,0], [item.alpha, item.alpha, 0]);\r\n        }\r\n        this.startCountDown();\r\n    }\r\n\r\n\r\n\r\n    startCountDown(){\r\n        var interval = setInterval(() => {\r\n            if ( this.cooldown > 0) this.cooldown--;\r\n        }, 100);\r\n    }\r\n\r\n    defend(amount: number) {\r\n        if ( this.cooldown <= 0) {\r\n            this.cooldown = this.max_cooldown;\r\n            let dir =this.owner.face;\r\n            let dmg = new DamageBlock(this.skill_bonus)\r\n            let attack:Entity = null;\r\n            dmg.owner = this.owner;\r\n            createDamageBlock(this.owner, this.owner.x, this.owner.y+1, this.name, this.skill_bonus);\r\n            createDamageBlock(this.owner, this.owner.x, this.owner.y-1, this.name, this.skill_bonus);\r\n            createDamageBlock(this.owner, this.owner.x+1, this.owner.y, this.name, this.skill_bonus);\r\n            createDamageBlock(this.owner, this.owner.x-1, this.owner.y, this.name, this.skill_bonus);\r\n        }\r\n        return amount;\r\n    }\r\n\r\n    // strike() {\r\n    //     if ( this.cooldown == 0) {\r\n    //         this.cooldown = this.max_cooldown;\r\n    //         let dir =this.owner.face;\r\n    //         let dmg = new DamageBlock(this.skill_bonus)\r\n    //         let attack:Entity = null;\r\n    //         dmg.owner = this.owner;\r\n    //         if (this.owner.face == 's') { createDamageBlock(this.owner, this.owner.x, this.owner.y+1, this.name, this.skill_bonus);}\r\n    //         else if (this.owner.face == 'n') { createDamageBlock(this.owner, this.owner.x, this.owner.y-1, this.name, this.skill_bonus);}\r\n    //         else if (this.owner.face == 'w') { createDamageBlock(this.owner, this.owner.x-1, this.owner.y, this.name, this.skill_bonus);}\r\n    //         else if (this.owner.face == 'e') { createDamageBlock(this.owner, this.owner.x+1, this.owner.y, this.name, this.skill_bonus);}\r\n    //     }\r\n    // }\r\n}","import { Equipment } from \"../../components/equipment\";\r\nimport { Entity } from \"../../entity\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { Glyph } from \"../../glyph\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { qualityGenerator } from \"../../helper/qualityGenerator\";\r\n\r\nexport class Blademail extends Equipment {\r\n    power_bonus: number = -2;\r\n    skill_bonus: number = 1;\r\n    defense_bonus: number = 3;\r\n    hp_bonus: number = 25;\r\n    owner: Entity;\r\n    name: string = 'blademail';\r\n    fullname: string = 'blademail';\r\n    cooldown: number = 12\r\n    max_cooldown: number = 12\r\n    glyph: Glyph;\r\n\r\n    constructor(drop: Equipment = undefined, upgrades: number[] = undefined) {\r\n        super(\"sub\");\r\n        if (drop != undefined) {\r\n            this.power_bonus = drop.power_bonus;\r\n            this.skill_bonus = drop.skill_bonus;\r\n            this.defense_bonus = drop.defense_bonus;\r\n            this.hp_bonus = drop.hp_bonus;\r\n            this.name = drop.name;\r\n            this.fullname = drop.fullname;\r\n            this.max_cooldown = drop.max_cooldown;\r\n            this.glyph = drop.glyph;\r\n        } else {\r\n            let item = qualityGenerator(\"sub\");\r\n            this.power_bonus += (this.power_bonus+upgrades[0])*item.power_bonus;\r\n            this.skill_bonus += (this.skill_bonus+(upgrades[1]/10))*item.skill_bonus;\r\n            this.defense_bonus += (this.defense_bonus+upgrades[2])*item.defense_bonus;\r\n            this.max_cooldown -= Math.round((this.max_cooldown-(upgrades[3]*0.2))*item.max_cooldown);\r\n            this.hp_bonus += upgrades[4]*5;\r\n            this.fullname = item.prefix + this.name;\r\n            this.glyph = new Glyph('❂', [0,0,0], [item.alpha, item.alpha, 0]);\r\n        }\r\n        this.startCountDown();\r\n    }\r\n\r\n\r\n\r\n    startCountDown(){\r\n        var interval = setInterval(() => {\r\n            if ( this.cooldown > 0) this.cooldown--;\r\n        }, 100);\r\n    }\r\n\r\n    defend(amount: number) {\r\n        if ( this.cooldown <= 0) {\r\n            this.cooldown = this.max_cooldown;\r\n            let dir =this.owner.face;\r\n            let dmg = new DamageBlock(this.skill_bonus)\r\n            let attack:Entity = null;\r\n            dmg.owner = this.owner;\r\n            createDamageBlock(this.owner, this.owner.x, this.owner.y+1, this.name, this.skill_bonus);\r\n            createDamageBlock(this.owner, this.owner.x+1, this.owner.y+1, this.name, this.skill_bonus);\r\n            createDamageBlock(this.owner, this.owner.x-1, this.owner.y+1, this.name, this.skill_bonus);\r\n\r\n            createDamageBlock(this.owner, this.owner.x+1, this.owner.y, this.name, this.skill_bonus);\r\n            createDamageBlock(this.owner, this.owner.x-1, this.owner.y, this.name, this.skill_bonus);\r\n\r\n            createDamageBlock(this.owner, this.owner.x+1, this.owner.y-1, this.name, this.skill_bonus);\r\n            createDamageBlock(this.owner, this.owner.x, this.owner.y-1, this.name, this.skill_bonus);\r\n            createDamageBlock(this.owner, this.owner.x-1, this.owner.y-1, this.name, this.skill_bonus);\r\n        }\r\n        return amount;\r\n    }\r\n\r\n    // strike() {\r\n    //     if ( this.cooldown == 0) {\r\n    //         this.cooldown = this.max_cooldown;\r\n    //         let dir =this.owner.face;\r\n    //         let dmg = new DamageBlock(this.skill_bonus)\r\n    //         let attack:Entity = null;\r\n    //         dmg.owner = this.owner;\r\n    //         if (this.owner.face == 's') { createDamageBlock(this.owner, this.owner.x, this.owner.y+1, this.name, this.skill_bonus);}\r\n    //         else if (this.owner.face == 'n') { createDamageBlock(this.owner, this.owner.x, this.owner.y-1, this.name, this.skill_bonus);}\r\n    //         else if (this.owner.face == 'w') { createDamageBlock(this.owner, this.owner.x-1, this.owner.y, this.name, this.skill_bonus);}\r\n    //         else if (this.owner.face == 'e') { createDamageBlock(this.owner, this.owner.x+1, this.owner.y, this.name, this.skill_bonus);}\r\n    //     }\r\n    // }\r\n}","import { Entity } from \"../../entity\";\r\nimport { randint } from \"../../helper/randint\";\r\nimport { Enemy } from \"../../helper/enemy\";\r\nimport { deathFunction } from \"../../helper/deathFunction\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { skilllist, poison_cloud, poison_shield } from \"../../components/skilllist\"\r\n\r\nexport class Fungi implements Enemy {\r\n    skill_bonus: number = 1.5;\r\n    owner: Entity;\r\n    skills: skilllist[];\r\n\r\n    constructor() {\r\n        this.skills = [{\r\n            name: 'poison cloud',\r\n            cooldown: 14,\r\n            maxCooldown: 14\r\n        },\r\n        {\r\n            name: 'poison shield',\r\n            cooldown: 20,\r\n            maxCooldown: 20\r\n        }]\r\n    }\r\n\r\n    startCountDown(seconds: number){\r\n        var counter = seconds;\r\n        var interval = setInterval(() => {\r\n            counter--;\r\n            this.skills.forEach(element => {\r\n                if (element.cooldown < element.maxCooldown) element.cooldown++;\r\n            });\r\n            if (counter < 0 ) {\r\n                \r\n                // code here will run when the counter reaches zero.\r\n                if (this.owner.fighter.hp == 0) {\r\n                    clearInterval(interval);\r\n                    deathFunction(this.owner);\r\n                }\r\n                else {\r\n                    counter = this.owner.maxStamina;\r\n                    this.act();\r\n                }\r\n            }\t\r\n        }, 100);\r\n    }\r\n\r\n    act() {\r\n        let player = this.owner._map.getPlayer();\r\n        if (player == undefined) return;\r\n        let dist = Math.sqrt( (player.x - this.owner.x)**2+(player.y - this.owner.y)**2 );\r\n        if (dist < this.owner.sight*1.4) {\r\n            if (this.skills[0].cooldown >= this.skills[0].maxCooldown) {\r\n                poison_cloud(this.owner, player, this.skill_bonus*0.5);\r\n                this.skills[0].cooldown = 0\r\n            }\r\n            //this.owner.hunt(player);\r\n            //this.poison_cloud(player);\r\n        } else {\r\n            this.owner.wander();\r\n        }\r\n        if (dist < 2) if (this.skills[1].cooldown >= this.skills[1].maxCooldown) {\r\n            poison_shield(this.owner, player, this.skill_bonus);\r\n            this.skills[1].cooldown = 0\r\n        }\r\n    }\r\n\r\n}","import { Entity } from \"../../entity\";\r\nimport { randint } from \"../../helper/randint\";\r\nimport { Enemy } from \"../../helper/enemy\";\r\nimport { deathFunction } from \"../../helper/deathFunction\";\r\nimport { skilllist, punch } from \"../../components/skilllist\";\r\n\r\nexport class Orc implements Enemy {\r\n    skill_bonus: number = 1.1;\r\n    owner: Entity;\r\n    skills: skilllist[];\r\n\r\n    constructor() {\r\n        this.skills = [{\r\n            name: 'punch',\r\n            cooldown: 18,\r\n            maxCooldown: 18\r\n        }]\r\n    }\r\n\r\n    startCountDown(seconds: number){\r\n        var counter = seconds;\r\n        var interval = setInterval(() => {\r\n            counter--;\r\n            this.skills.forEach(element => {\r\n                if (element.cooldown < element.maxCooldown) element.cooldown++;\r\n            });\r\n            if (counter < 0 ) {\r\n                \r\n                // code here will run when the counter reaches zero.\r\n                if (this.owner.fighter.hp == 0) {\r\n                    clearInterval(interval);\r\n                    deathFunction(this.owner);\r\n                }\r\n                else {\r\n                    counter = this.owner.maxStamina;\r\n                    this.act();\r\n                }\r\n            }\t\r\n        }, 100);\r\n    }\r\n\r\n    act() {\r\n        let player = this.owner._map.getPlayer();\r\n        if (player == undefined) return;\r\n        let dist = Math.sqrt( (player.x - this.owner.x)**2+(player.y - this.owner.y)**2 );\r\n        if (dist < this.owner.sight) {\r\n            this.owner.hunt(player);\r\n            if (dist <= 5 && (this.owner.x == player.x || this.owner.y == player.y)) {\r\n                punch(this.owner, player, 1.2);\r\n            }\r\n        } else {\r\n            this.owner.wander();\r\n        }\r\n    }\r\n}","import { Entity } from \"../../entity\";\r\nimport { randint } from \"../../helper/randint\";\r\nimport { Enemy } from \"../../helper/enemy\";\r\nimport { deathFunction } from \"../../helper/deathFunction\";\r\nimport { skilllist, punch, smash } from \"../../components/skilllist\";\r\n\r\nexport class Troll implements Enemy {\r\n    skill_bonus: number = 1.3;\r\n    owner: Entity;\r\n    skills: skilllist[];\r\n\r\n    constructor() {\r\n        this.skills = [{\r\n            name: 'smash',\r\n            cooldown: 20,\r\n            maxCooldown: 20\r\n        }]\r\n    }\r\n\r\n    startCountDown(seconds: number){\r\n        var counter = seconds;\r\n        var interval = setInterval(() => {\r\n            counter--;\r\n            this.skills.forEach(element => {\r\n                if (element.cooldown < element.maxCooldown) element.cooldown++;\r\n            });\r\n            if (counter < 0 ) {\r\n                \r\n                // code here will run when the counter reaches zero.\r\n                if (this.owner.fighter.hp == 0) {\r\n                    clearInterval(interval);\r\n                    deathFunction(this.owner);\r\n                }\r\n                else {\r\n                    counter = this.owner.maxStamina;\r\n                    this.act();\r\n                }\r\n            }\t\r\n        }, 100);\r\n    }\r\n\r\n    act() {\r\n        let player = this.owner._map.getPlayer();\r\n        if (player == undefined) return;\r\n        let dist = Math.sqrt( (player.x - this.owner.x)**2+(player.y - this.owner.y)**2 );\r\n        if (dist < this.owner.sight) {\r\n            this.owner.hunt(player);\r\n            if (dist <= 5 && (this.owner.x == player.x || this.owner.y == player.y)) {\r\n                smash(this.owner, player, this.skill_bonus);\r\n            }\r\n        } else {\r\n            this.owner.wander();\r\n        }\r\n    }\r\n}","import { Entity } from \"../../entity\";\r\nimport { randint } from \"../../helper/randint\";\r\nimport { Enemy } from \"../../helper/enemy\";\r\nimport { deathFunction } from \"../../helper/deathFunction\";\r\nimport { skilllist, snipe } from \"../../components/skilllist\";\r\n\r\nexport class Ranger implements Enemy {\r\n    skill_bonus: number = 1.5;\r\n    owner: Entity;\r\n    skills: skilllist[];\r\n\r\n    constructor() {\r\n        this.skills = [{\r\n            name: 'snipe',\r\n            cooldown: 24,\r\n            maxCooldown: 24\r\n        }]\r\n    }\r\n\r\n    startCountDown(seconds: number){\r\n        var counter = seconds;\r\n        var interval = setInterval(() => {\r\n            counter--;\r\n            this.skills.forEach(element => {\r\n                if (element.cooldown < element.maxCooldown) element.cooldown++;\r\n            });\r\n            if (counter < 0 ) {\r\n                \r\n                // code here will run when the counter reaches zero.\r\n                if (this.owner.fighter.hp == 0) {\r\n                    clearInterval(interval);\r\n                    deathFunction(this.owner);\r\n                }\r\n                else {\r\n                    counter = this.owner.maxStamina;\r\n                    this.act();\r\n                }\r\n            }\t\r\n        }, 100);\r\n    }\r\n\r\n    act() {\r\n        let player = this.owner._map.getPlayer();\r\n        if (player == undefined) return;\r\n        let dist = Math.sqrt( (player.x - this.owner.x)**2+(player.y - this.owner.y)**2 );\r\n        if (dist < this.owner.sight*1.5 && dist > 9) {\r\n            this.owner.hunt(player);\r\n            if (dist <= 9 && (this.owner.x == player.x || this.owner.y == player.y)) {\r\n                snipe(this.owner, player, 1.2);\r\n            }\r\n        } else if(dist < 12 && dist > 5) {\r\n            let dx = player.x - this.owner.x;\r\n            let dy = player.y - this.owner.y;\r\n            if (Math.abs(dx) > Math.abs(dy)) {\r\n                if (dy > 0) {\r\n                    this.owner.move(0, randint(1,2), this.owner._map);\r\n                } else {\r\n                    this.owner.move(0, randint(-2, -1), this.owner._map);\r\n                }\r\n            } else {\r\n                if (dx > 0) {\r\n                    this.owner.move(randint(1,2), 0, this.owner._map);\r\n                } else {\r\n                    this.owner.move(randint(-2, -1), 0, this.owner._map);\r\n                }\r\n            }\r\n        } else if (dist <= 5) {\r\n            this.owner.kite(player);\r\n        } else {\r\n            this.owner.wander();\r\n        }\r\n        if (dist < 12) snipe(this.owner, player, 1);\r\n    }\r\n}","import { Entity } from \"../../entity\";\r\nimport { randint } from \"../../helper/randint\";\r\nimport { Enemy } from \"../../helper/enemy\";\r\nimport { deathFunction } from \"../../helper/deathFunction\";\r\nimport { skilllist, punch, smash, windBlow } from \"../../components/skilllist\";\r\n\r\nexport class Wyvern implements Enemy {\r\n    skill_bonus: number = 1.5;\r\n    owner: Entity;\r\n    skills: skilllist[];\r\n\r\n    constructor() {\r\n        this.skills = [{\r\n            name: 'windBlow',\r\n            cooldown: 12,\r\n            maxCooldown: 12\r\n        }]\r\n    }\r\n\r\n    startCountDown(seconds: number){\r\n        var counter = seconds;\r\n        var interval = setInterval(() => {\r\n            counter--;\r\n            this.skills.forEach(element => {\r\n                if (element.cooldown < element.maxCooldown) element.cooldown++;\r\n            });\r\n            if (counter < 0 ) {\r\n                \r\n                // code here will run when the counter reaches zero.\r\n                if (this.owner.fighter.hp == 0) {\r\n                    clearInterval(interval);\r\n                    deathFunction(this.owner);\r\n                }\r\n                else {\r\n                    counter = this.owner.maxStamina;\r\n                    this.act();\r\n                }\r\n            }\t\r\n        }, 100);\r\n    }\r\n\r\n    act() {\r\n        let player = this.owner._map.getPlayer();\r\n        if (player == undefined) return;\r\n        let dist = Math.sqrt( (player.x - this.owner.x)**2+(player.y - this.owner.y)**2 );\r\n        if (dist < this.owner.sight) {\r\n            this.owner.hunt(player);\r\n            if (dist <= this.owner.sight) {\r\n                if (this.skills[0].cooldown == this.skills[0].maxCooldown) {\r\n                    windBlow(this.owner, player, this.skill_bonus);\r\n                    this.skills[0].cooldown = 0;\r\n                }\r\n            }\r\n        } else {\r\n            this.owner.wander();\r\n        }\r\n    }\r\n}","import { Entity } from \"../../entity\";\r\nimport { randint } from \"../../helper/randint\";\r\nimport { Enemy } from \"../../helper/enemy\";\r\nimport { deathFunction } from \"../../helper/deathFunction\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { skilllist, poison_cloud, poison_shield, flamestrike, firebreath } from \"../../components/skilllist\"\r\n\r\nexport class Dragon implements Enemy {\r\n    skill_bonus: number = 14;\r\n    owner: Entity;\r\n    skills: skilllist[];\r\n\r\n    constructor() {\r\n        this.skills = [{\r\n            name: 'fire breath',\r\n            cooldown: 12,\r\n            maxCooldown: 12\r\n        },\r\n        {\r\n            name: 'flamestrike',\r\n            cooldown: 20,\r\n            maxCooldown: 20\r\n        }]\r\n    }\r\n\r\n    startCountDown(seconds: number){\r\n        var counter = seconds;\r\n        var interval = setInterval(() => {\r\n            counter--;\r\n            this.skills.forEach(element => {\r\n                if (element.cooldown < element.maxCooldown) element.cooldown++;\r\n            });\r\n            if (counter < 0 ) {\r\n                \r\n                // code here will run when the counter reaches zero.\r\n                if (this.owner.fighter.hp == 0) {\r\n                    clearInterval(interval);\r\n                    deathFunction(this.owner);\r\n                }\r\n                else {\r\n                    counter = this.owner.maxStamina;\r\n                    this.act();\r\n                }\r\n            }\t\r\n        }, 100);\r\n    }\r\n\r\n    act() {\r\n        let player = this.owner._map.getPlayer();\r\n        if (player == undefined) return;\r\n        let dist = Math.sqrt( (player.x - this.owner.x)**2+(player.y - this.owner.y)**2 );\r\n        if (dist < this.owner.sight) {\r\n            this.owner.hunt(player);\r\n            if (this.skills[0].cooldown >= this.skills[0].maxCooldown) {\r\n                firebreath(this.owner, player, this.skill_bonus*0.5);\r\n                this.skills[0].cooldown = 0\r\n            }\r\n            \r\n            //this.poison_cloud(player);\r\n        } else {\r\n            this.owner.wander();\r\n        }\r\n        if (dist < 2) if (this.skills[1].cooldown >= this.skills[1].maxCooldown) {\r\n            this.owner.hunt(player);\r\n            flamestrike(this.owner, player, this.skill_bonus);\r\n            this.skills[1].cooldown = 0\r\n        }\r\n    }\r\n\r\n}","import { Entity } from \"../../entity\";\r\nimport { randint } from \"../../helper/randint\";\r\nimport { Enemy } from \"../../helper/enemy\";\r\nimport { deathFunction } from \"../../helper/deathFunction\";\r\nimport { skilllist, punch, bite } from \"../../components/skilllist\";\r\n\r\nexport class Crawler implements Enemy {\r\n    skill_bonus: number = 1.2;\r\n    owner: Entity;\r\n    skills: skilllist[];\r\n\r\n    constructor() {\r\n        this.skills = [{\r\n            name: 'bite',\r\n            cooldown: 6,\r\n            maxCooldown: 6\r\n        }]\r\n    }\r\n\r\n    startCountDown(seconds: number){\r\n        var counter = seconds;\r\n        var interval = setInterval(() => {\r\n            counter--;\r\n            this.skills.forEach(element => {\r\n                if (element.cooldown < element.maxCooldown) element.cooldown++;\r\n            });\r\n            if (counter < 0 ) {\r\n                \r\n                // code here will run when the counter reaches zero.\r\n                if (this.owner.fighter.hp == 0) {\r\n                    clearInterval(interval);\r\n                    deathFunction(this.owner);\r\n                }\r\n                else {\r\n                    counter = this.owner.maxStamina;\r\n                    this.act();\r\n                }\r\n            }\t\r\n        }, 100);\r\n    }\r\n\r\n    act() {\r\n        let player = this.owner._map.getPlayer();\r\n        if (player == undefined) return;\r\n        let dist = Math.sqrt( (player.x - this.owner.x)**2+(player.y - this.owner.y)**2 );\r\n        if (dist < this.owner.sight) {\r\n            this.owner.hunt(player);\r\n            if (dist <= 2) {\r\n                if (this.skills[0].cooldown <= this.skills[0].maxCooldown)\r\n                    bite(this.owner, player, this.skill_bonus);\r\n            }\r\n        } else {\r\n            this.owner.wander();\r\n        }\r\n    }\r\n}","import { Entity } from \"../../entity\";\r\nimport { randint } from \"../../helper/randint\";\r\nimport { Enemy } from \"../../helper/enemy\";\r\nimport { deathFunction } from \"../../helper/deathFunction\";\r\nimport { skilllist, punch, hug } from \"../../components/skilllist\";\r\n\r\nexport class DummyTarget implements Enemy {\r\n    skill_bonus: number = 0;\r\n    owner: Entity;\r\n    skills: skilllist[];\r\n\r\n    constructor() {\r\n        this.skills = [{\r\n            name: 'hug',\r\n            cooldown: 10,\r\n            maxCooldown: 10\r\n        }]\r\n    }\r\n\r\n    startCountDown(seconds: number){\r\n        var counter = seconds;\r\n        var interval = setInterval(() => {\r\n            counter--;\r\n            this.skills.forEach(element => {\r\n                if (element.cooldown < element.maxCooldown) element.cooldown++;\r\n            });\r\n            if (counter < 0 ) {\r\n                \r\n                // code here will run when the counter reaches zero.\r\n                if (this.owner.fighter.hp == 0) {\r\n                    clearInterval(interval);\r\n                    deathFunction(this.owner);\r\n                }\r\n                else {\r\n                    counter = this.owner.maxStamina;\r\n                    this.act();\r\n                }\r\n            }\t\r\n        }, 100);\r\n    }\r\n\r\n    act() {\r\n        let player = this.owner._map.getPlayer();\r\n        if (player == undefined) return;\r\n        let dist = Math.sqrt( (player.x - this.owner.x)**2+(player.y - this.owner.y)**2 );\r\n        if (dist < this.owner.sight) {\r\n            this.owner.hunt(player);\r\n            if (dist <= 5 && (this.owner.x == player.x || this.owner.y == player.y)) {\r\n                if (this.skills[0].cooldown >= this.skills[0].maxCooldown) { \r\n                    hug(this.owner, player, 0);\r\n                    this.skills[0].cooldown = 0;\r\n                }\r\n            }\r\n        } else {\r\n            this.owner.wander();\r\n        }\r\n    }\r\n}","import { from_dungeon_level } from \"../helper/randFromLevel\";\r\n\r\nexport function monsterProbabilities(dungeon_level: number) {\r\n    return {\r\n        'fungi': from_dungeon_level([[15, 1]], dungeon_level),\r\n        'orc': from_dungeon_level([[40, 1], [20, 3], [10, 6]], dungeon_level),\r\n        'troll': from_dungeon_level([[10, 1], [20, 3], [30, 5], [60, 6]], dungeon_level),\r\n        'wyvern': from_dungeon_level([[5, 1], [20, 2], [30, 3], [40, 5]], dungeon_level),\r\n        'ranger': from_dungeon_level([[5, 1], [15, 2]], dungeon_level),\r\n        'crawler': from_dungeon_level([[10, 2], [20, 5]], dungeon_level),\r\n        'dragon': from_dungeon_level([[5, 3], [20, 6]], dungeon_level),\r\n    };\r\n}","import { from_dungeon_level } from \"../helper/randFromLevel\";\r\n\r\nexport function itemProbabilities(dungeon_level: number) {\r\n    return {\r\n        'potion': 35,\r\n        'knife': from_dungeon_level([[10, 1], [5, 3]], dungeon_level),\r\n        'dagger': from_dungeon_level([[10, 1], [5, 3]], dungeon_level),\r\n        'sword': from_dungeon_level([[2, 1], [10, 3], [5, 5]], dungeon_level),\r\n        'spear': from_dungeon_level([[2, 1], [10, 3], [10, 5]], dungeon_level),\r\n        'firerod': from_dungeon_level([[5, 3], [5, 5]], dungeon_level),\r\n        'icerod': from_dungeon_level([[5, 3], [5, 5]], dungeon_level),\r\n        'crossedswords': from_dungeon_level([[5, 3], [5, 5]], dungeon_level),\r\n        'shield': from_dungeon_level([[1, 1], [5, 2]], dungeon_level),\r\n        'offdagger': from_dungeon_level([[1, 1], [10, 4]], dungeon_level),\r\n        'blademail': from_dungeon_level([[10, 5]], dungeon_level),\r\n    };\r\n}","import { Entity } from \"../entity\";\r\nimport { Glyph } from \"../glyph\";\r\nimport { Fighter } from \"../components/fighter\";\r\nimport { Boss } from \"../../logo/boss\"\r\nimport { Angel } from \"../content/bosses/angel\";\r\nimport { randperc } from \"./randperc\";\r\n\r\nexport function CreateBoss(monster_choice: string, x: number, y: number, dungeon_level: number): Entity{\r\n    let dl = dungeon_level;\r\n    let fighter_component = new Fighter(dl > 8 ? 1000*(dl/3.5) : 1000,2*(dl/3.5),10*(dl/3.5),1000*(dl/3.5));\r\n    let skin = Boss();\r\n    let ai_component = new Angel();//new Fungi();\r\n    let monster = new Entity(x, y, new Glyph('!', [0,0,0], [0, 153, 255]), 'angel', 10, true, 3, 2, fighter_component, ai_component, false, undefined, undefined, undefined, undefined, undefined, undefined, skin);\r\n\r\n    return monster;\r\n}","export function Boss(): string[] {\r\n    let i = [`·········/)·····(\\\\··`,\r\n    `····,-'~~(···‡···)~~'-.`,\r\n    `···/      \\\\/' '\\\\/      \\``,\r\n    `··|       /_ ◡ _\\\\       |`,\r\n    `··|     _(/(\\\\_/)\\\\)_     |`,\r\n    `··|     //\\\\/ \\\\ / \\\\\\\\     |`,\r\n    `···\\\\   |''··/ \\\\·''·|   /`,\r\n    `····\\\\  )···/   \\\\···(  /`,\r\n    `·····)/···/     \\\\···\\(`,\r\n    `·····'····'-'-'-'····'`]\r\n    return i;\r\n}","import { Entity } from \"../../entity\";\r\nimport { randint } from \"../../helper/randint\";\r\nimport { Enemy } from \"../../helper/enemy\";\r\nimport { deathFunction } from \"../../helper/deathFunction\";\r\nimport { DamageBlock } from \"../../components/damageBlock\";\r\nimport { createDamageBlock } from \"../../helper/createDamageBlock\";\r\nimport { skilllist, poison_cloud, poison_shield } from \"../../components/skilllist\"\r\nimport { angel_ring, angel_tri } from \"../../components/bossSkills\";\r\n\r\nexport class Angel implements Enemy {\r\n    skill_bonus: number = 3;\r\n    owner: Entity;\r\n    skills: skilllist[];\r\n    dir: number[];\r\n\r\n    constructor() {\r\n        this.skills = [{\r\n            name: 'angel ring',\r\n            cooldown: 15,\r\n            maxCooldown: 15\r\n        },\r\n        {\r\n            name: 'angel lance',\r\n            cooldown: 5,\r\n            maxCooldown: 15\r\n        }]\r\n        this.dir = [2,2];\r\n    }\r\n\r\n    startCountDown(seconds: number){\r\n        var counter = seconds;\r\n        var interval = setInterval(() => {\r\n            counter--;\r\n            this.skills.forEach(element => {\r\n                if (element.cooldown < element.maxCooldown) element.cooldown++;\r\n            });\r\n            if (counter < 0 ) {\r\n                \r\n                // code here will run when the counter reaches zero.\r\n                if (this.owner.fighter.hp == 0) {\r\n                    clearInterval(interval);\r\n                    deathFunction(this.owner);\r\n                }\r\n                else {\r\n                    counter = this.owner.maxStamina;\r\n                    this.act();\r\n                }\r\n            }\t\r\n        }, 100);\r\n    }\r\n\r\n    act() {\r\n        let player = this.owner._map.getPlayer();\r\n        if (player == undefined) return;\r\n        let dist = Math.sqrt( (player.x - this.owner.x)**2+(player.y - this.owner.y)**2 );\r\n        this.dir = this.owner.angelMove(this.dir[0], this.dir[1], this.owner._map);\r\n        if (this.skills[0].cooldown >= this.skills[0].maxCooldown) {\r\n            angel_ring(this.owner, player, this.skill_bonus);\r\n            this.skills[0].cooldown = 0;\r\n        }\r\n\r\n        if (this.skills[1].cooldown >= this.skills[1].maxCooldown) {\r\n            angel_tri(this.owner, player, this.skill_bonus);\r\n            this.skills[1].cooldown = 0;\r\n        }\r\n        // if (dist < this.owner.sight*1.4) {\r\n        //     if (this.skills[0].cooldown >= this.skills[0].maxCooldown) {\r\n        //         poison_cloud(this.owner, player, this.skill_bonus*0.5);\r\n        //         this.skills[0].cooldown = 0\r\n        //     }\r\n        //     //this.owner.hunt(player);\r\n        //     //this.poison_cloud(player);\r\n        // } else {\r\n        //     this.owner.wander();\r\n        // }\r\n        // if (dist < 2) if (this.skills[1].cooldown >= this.skills[1].maxCooldown) {\r\n        //     poison_shield(this.owner, player, 1);\r\n        //     this.skills[1].cooldown = 0\r\n        // }\r\n    }\r\n\r\n}","import { createDamageBlock } from \"../helper/createDamageBlock\";\r\nimport { Entity } from \"../entity\";\r\nimport { randint } from \"../helper/randint\";\r\n\r\n\r\nexport function angel_ring(owner: Entity, target: Entity, damageMultiplier: number) {\r\n    let nameAtk = 'angel ring';\r\n    let range = 0\r\n    let rx = target.x;\r\n    let ry = target.y;\r\n    let hole = randint(0,7);\r\n    let ring = setInterval(() => {\r\n        if (hole != 0) createDamageBlock(owner, rx, ry+4-range, nameAtk, damageMultiplier, \"☼\", 4);\r\n        if (hole != 1) createDamageBlock(owner, rx, ry-4+range, nameAtk, damageMultiplier, \"☼\", 4);\r\n        if (hole != 2) createDamageBlock(owner, rx-4+range, ry, nameAtk, damageMultiplier, \"☼\", 4);\r\n        if (hole != 3) createDamageBlock(owner, rx+4-range, ry, nameAtk, damageMultiplier, \"☼\", 4);\r\n        if (hole != 4) createDamageBlock(owner, rx-4+range, ry-4+range, nameAtk, damageMultiplier, \"☼\", 4);\r\n        if (hole != 5) createDamageBlock(owner, rx+4-range, ry-4+range, nameAtk, damageMultiplier, \"☼\", 4);\r\n        if (hole != 6) createDamageBlock(owner, rx-4+range, ry+4-range, nameAtk, damageMultiplier, \"☼\", 4);\r\n        if (hole != 7) createDamageBlock(owner, rx+4-range, ry+4-range, nameAtk, damageMultiplier, \"☼\", 4);\r\n        range +=1;\r\n        if (range > 4) clearInterval(ring);\r\n    }, 400)\r\n}\r\n\r\n\r\nexport function angel_tri(owner: Entity, target: Entity, damageMultiplier: number) {\r\n    let mapWidth = 70;\r\n    let mapHeight = 38;\r\n    let nameAtk = 'angel lance';\r\n    let range = 0\r\n    let rx = target.x;\r\n    let ry = target.y;\r\n    let ownerx = owner.x+5;\r\n    let ownery = owner.y+5;\r\n    if (rx == ownerx || ry == ownery) return;\r\n\r\n    let slope = ((ry-ownery)/(rx-ownerx));\r\n    let b = ry-(rx*slope);\r\n    let image: number[][] = [];\r\n    let dist = Math.sqrt( (ownerx - rx)**2+(ownery - ry)**2 );\r\n    let passo = ((ownerx-rx)/dist)*-1;\r\n    let anteriory = -99;\r\n    let anteriorx = -99;\r\n    for (let dom = 0; Math.abs(dom) < dist*2; dom=dom+passo) {\r\n        let newImagey = Math.round(((ownerx+dom)*slope)+b);\r\n        let newImagex = Math.round(ownerx+dom);\r\n        if (newImagey != anteriory || newImagex != anteriorx)   image.push([newImagex,newImagey]);\r\n        anteriory = newImagey;\r\n        anteriorx = newImagex;\r\n        if ((newImagex < 3 || newImagex > (mapWidth-3) || newImagey < 3 || newImagey > (mapHeight-3))) dom = 9999999;\r\n    }\r\n    // distancia vai ser iterações de x na formula linear (arredondar para cima)\r\n    // rodar até (y || x) == (fim da tela)\r\n    // tratar casos colineares ry = oy e rx = ox\r\n\r\n    for (let index = 0; index < image.length; index++) {\r\n        createDamageBlock(owner, image[index][0], image[index][1], nameAtk, damageMultiplier, \"☽\", 6);\r\n        createDamageBlock(owner, image[index][0]+3, image[index][1]+3, nameAtk, damageMultiplier, \"☽\", 6);\r\n        createDamageBlock(owner, image[index][0]-3, image[index][1]-3, nameAtk, damageMultiplier, \"☽\", 6);\r\n    }\r\n\r\n    // let spike = setInterval(() => {\r\n    //     createDamageBlock(owner, image[range][0], image[range][1], nameAtk, damageMultiplier, \"$\", 4);\r\n    //     range+=1;\r\n    //     if (range >= image.length) clearInterval(spike);\r\n    // }, 400)\r\n}\r\n\r\n","import { Map } from \"../map\";\r\nimport { randint } from \"./randint\";\r\n\r\ninterface room {\r\n    x: number,\r\n    y: number,\r\n    sizex: number,\r\n    sizey: number\r\n}\r\n\r\ninterface path {\r\n    x: number,\r\n    y: number,\r\n    dir: string,\r\n    past: string\r\n}\r\n\r\ninterface coordenada {\r\n    x: number,\r\n    y: number,\r\n}\r\n\r\nfunction ones(maxx: number, maxy: number): number[][] {\r\n    let array : number[][] = [[1]];\r\n\r\n    for (let x = 0; x < maxx; x++) {\r\n        // Create the nested array for the y values\r\n        array.push([]);\r\n        // Add all the tiles\r\n        for (let y = 0; y < maxy; y++) {\r\n            array[x].push(1);\r\n        }\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nfunction randomRoom(maxx: number, maxy: number): room {\r\n    let room : room;\r\n    let roomsizex = randint(4, 16);\r\n    while (roomsizex % 2 == 0) roomsizex-=1;\r\n    roomsizex = (roomsizex*2)-1;\r\n\r\n    let roomsizey = randint(4, 14);\r\n    while (roomsizey % 2 == 0) roomsizey-=1;\r\n    roomsizey = (roomsizey*2)-1;\r\n\r\n    let roomx = randint(5, maxx-roomsizex-1);\r\n    while (roomx % 4 != 0 ) roomx+=1;\r\n    roomx+=1;\r\n\r\n    let roomy = randint(5, maxy-roomsizey-1);\r\n    while (roomy % 4 != 0 ) roomy+=1;\r\n    roomy+=1;\r\n\r\n    room = {\r\n        x : roomx,\r\n        y : roomy,\r\n        sizex : roomsizex,\r\n        sizey : roomsizey\r\n    }\r\n    return room;\r\n}\r\n\r\nfunction digHere(here: path, map: number[][]) {\r\n    let x = here.x;\r\n    let y = here.y;\r\n    switch (here.past) {\r\n        case 'N':\r\n            if (map[x-1][y] != 0 && map[x-1][y-1] != 0 && map[x][y-1] != 0 && map[x+2][y-1] != 0 && map[x+2][y] != 0) {\r\n                map[x][y] = 0;\r\n                map[x+1][y] = 0;\r\n                map[x][y+1] = 0;\r\n                map[x+1][y+1] = 0;\r\n            } else {\r\n                //map[x][y] = 2;\r\n            }\r\n            break;\r\n        case 'S':\r\n            if (map[x-1][y] != 0 && map[x-1][y+2] != 0 && map[x][y+2] != 0 && map[x+2][y+2] != 0 && map[x+2][y] != 0) {\r\n                map[x][y] = 0;\r\n                map[x+1][y] = 0;\r\n                map[x][y+1] = 0;\r\n                map[x+1][y+1] = 0;\r\n            } else {\r\n                //map[x][y] = 2;\r\n            }\r\n            break;\r\n        case 'E':\r\n            if (map[x][y-1] != 0 && map[x+2][y-1] != 0 && map[x+2][y] != 0 && map[x+2][y+2] != 0 && map[x][y+2] != 0) {\r\n                map[x][y] = 0;\r\n                map[x+1][y] = 0;\r\n                map[x][y+1] = 0;\r\n                map[x+1][y+1] = 0;\r\n            } else {\r\n                //map[x][y] = 2;\r\n            }\r\n            break;\r\n        case 'W':\r\n            if (map[x][y-1] != 0 && map[x-1][y-1] != 0 && map[x-1][y] != 0 && map[x-1][y+2] != 0 && map[x][y+2] != 0) {\r\n                map[x][y] = 0;\r\n                map[x+1][y] = 0;\r\n                map[x][y+1] = 0;\r\n                map[x+1][y+1] = 0;\r\n            } else {\r\n                //map[x][y] = 2;\r\n            }\r\n            break;    \r\n        default:\r\n            //map[x][y] = 2;\r\n            break;\r\n    }\r\n}\r\n\r\nfunction testDirections(here: path, map: number[][], path: path[], maxx: number, maxy: number) : path[] {\r\n    let next : path[]=[];\r\n    let nextCandidates : path[] = [];\r\n    let y = here.y;\r\n    let x = here.x;\r\n    if (y+4 < maxy)\r\n        if (map[x][y+4] == 1) {\r\n            if (map[x-1][y+3] == 1 && map[x+2][y+3] == 1) \r\n                nextCandidates.push({\r\n                    x: x,\r\n                    y: y+2,\r\n                    dir: 'S',\r\n                    past: 'S'\r\n                });\r\n        }\r\n    if (x+4 < maxx)\r\n        if (map[x+4][y] == 1) {\r\n            if (map[x+3][y-1] == 1 && map[x+3][y+2] == 1)\r\n                nextCandidates.push({\r\n                    x: x+2,\r\n                    y: y,\r\n                    dir: 'E',\r\n                    past: 'E'\r\n                });\r\n        }\r\n    if (y-3 > 0) \r\n        if (map[x][y-3] == 1) {\r\n            if (map[x-1][y-3] == 1 && map[x+2][y-3] == 1)\r\n                nextCandidates.push({\r\n                    x: x,\r\n                    y: y-2,\r\n                    dir: 'N',\r\n                    past: 'N'\r\n                });\r\n        }\r\n    if (x-3 > 0)\r\n        if (map[x-3][y] == 1) {\r\n            if (map[x-3][y+2] == 1 && map[x-3][y-1] == 1)\r\n                nextCandidates.push({\r\n                    x: x-2,\r\n                    y: y,\r\n                    dir: 'W',\r\n                    past: 'W'\r\n                });\r\n        }\r\n    if (nextCandidates.length != 0) {\r\n        if (nextCandidates.length == 1) {\r\n            next.push(nextCandidates[0]);\r\n        } else {\r\n            let selected = randint(0, nextCandidates.length-1);\r\n            let priority = (selected + 1) % nextCandidates.length;\r\n            while (priority != selected) {\r\n                next.push(nextCandidates[priority]);\r\n                priority = (priority + 1) % nextCandidates.length;\r\n            }\r\n            next.push(nextCandidates[selected]);\r\n        }\r\n    } else {\r\n        map[x][y] = 2;\r\n        // map[x+1][y] = 2;\r\n        // map[x+1][y+1] = 2;\r\n        // map[x][y+1] = 2;\r\n    }\r\n    return next;\r\n}\r\n\r\nfunction digFront(here: path, pathFRONT: path[], map: number[][] ) : path {\r\n    let next : path;\r\n    if (here.dir == 'N') {\r\n        next = {\r\n            x: here.x,\r\n            y: here.y-2,\r\n            dir: 'z',\r\n            past: 'N'\r\n        }\r\n    }\r\n    if (here.dir == 'E') {\r\n        next = {\r\n            x: here.x+2,\r\n            y: here.y,\r\n            dir: 'z',\r\n            past: 'E'\r\n        }\r\n    }\r\n    if (here.dir == 'S') {\r\n        next = {\r\n            x: here.x,\r\n            y: here.y+2,\r\n            dir: 'z',\r\n            past: 'S'\r\n        }\r\n    }\r\n    if (here.dir == 'W') {\r\n        next = {\r\n            x: here.x-2,\r\n            y: here.y,\r\n            dir: 'z',\r\n            past: 'W'\r\n        }\r\n    }\r\n   return next;\r\n}\r\n\r\nfunction digUp(pathGO: path[], map: number[][], maxx: number, maxy: number) {\r\n    let db = 0;\r\n    while (pathGO.length > 0) {\r\n        let here = pathGO.pop();\r\n        if (map[here.x][here.y] != 0) {\r\n            digHere(here, map);\r\n            if (((here.x-1) % 4 == 0) && ((here.y-1) % 4 == 0)) {\r\n                let nxt = testDirections(here, map, pathGO, maxx, maxy);\r\n                nxt.forEach(element => {\r\n                    pathGO.push(element);\r\n                });\r\n            }\r\n            else {\r\n                pathGO.push(digFront(here, pathGO, map));\r\n            }\r\n            db += 1;\r\n            if (db == 10000) {\r\n                const pate = pathGO;\r\n                pathGO = [];\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nfunction digBack(here: coordenada, map: number[][], maxx: number, maxy: number) {\r\n    let digHere: coordenada[] = [];\r\n\r\n    digHere.push(here);\r\n    while (digHere.length == 1) {\r\n        here = digHere.pop();\r\n        let next: coordenada = {\r\n            x : here.x,\r\n            y : here.y\r\n        };\r\n        let walls = 0;\r\n        if (here.x + 2 < maxx ) {\r\n            if (map[here.x + 2][here.y] >= 1)\r\n                walls += 1;\r\n            else {\r\n                next.x = here.x + 2;\r\n                digHere.push(next);\r\n            }\r\n        } else walls += 1;\r\n\r\n        if (here.x - 2 > 0) {\r\n            if (map[here.x - 2][here.y] >= 1)\r\n                walls += 1;\r\n            else {\r\n                next.x = here.x - 2;\r\n                digHere.push(next);\r\n            }\r\n        } else walls += 1;\r\n\r\n        if (here.y + 2 < maxy) {\r\n            if (map[here.x][here.y + 2] >= 1)\r\n                walls += 1;\r\n            else {\r\n                next.y = here.y + 2;\r\n                digHere.push(next);\r\n            }\r\n        } else walls += 1;\r\n\r\n        if (here.y - 2 > 0) {\r\n            if (map[here.x][here.y - 2] >= 1)\r\n                walls += 1;\r\n            else {\r\n                next.y = here.y - 2;\r\n                digHere.push(next);\r\n            }\r\n        } else walls += 1;\r\n\r\n        if (walls > 2) {\r\n            map[here.x][here.y] = 1;\r\n            map[here.x+1][here.y] = 1;\r\n            map[here.x][here.y+1] = 1;\r\n            map[here.x+1][here.y+1] = 1;\r\n\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nfunction openWalls(roomsInGame: room[], map: number[][], maxx: number, maxy: number) {\r\n    let directions: string[] = [];\r\n    let rooms = roomsInGame.length;\r\n    for (let i = 0; i < rooms; i++) {\r\n        if ( Math.random()*100 > 70) directions.push('n');\r\n        if ( Math.random()*100 > 70) directions.push('e');\r\n        if ( Math.random()*100 > 70) directions.push('s');\r\n        if ( Math.random()*100 > 70) directions.push('w');\r\n        if (directions.length == 0) directions.push('z');\r\n\r\n        while (directions.length > 0) {\r\n            let dir = directions.pop();\r\n            let candidates: number[] = [];\r\n            switch (dir) {\r\n                case 'n':\r\n                    if (roomsInGame[i].y - 3 > 0) {\r\n                        for (let roomTop = 0; roomTop < roomsInGame[i].sizex; roomTop+=2) {\r\n                            if (map[roomsInGame[i].x + roomTop][roomsInGame[i].y-3] < 1) {\r\n                                candidates.push(roomTop);\r\n                                //map[roomsInGame[i].x + roomTop][roomsInGame[i].y-3] = 1\r\n                            } else {\r\n                                if (candidates.length > 0) {\r\n                                    let x = randint(0, candidates.length-1);\r\n                                    map[roomsInGame[i].x + candidates[x]][roomsInGame[i].y-1] = 0\r\n                                    map[roomsInGame[i].x + candidates[x] + 1][roomsInGame[i].y-1] = 0\r\n                                    map[roomsInGame[i].x + candidates[x]][roomsInGame[i].y-2] = 0\r\n                                    map[roomsInGame[i].x + candidates[x] + 1][roomsInGame[i].y-2] = 0\r\n                                    candidates = [];\r\n                                }\r\n                            }\r\n                        }\r\n                        if (candidates.length > 0) {\r\n                            let x = randint(0, candidates.length-1);\r\n                            map[roomsInGame[i].x + candidates[x]][roomsInGame[i].y-1] = 0\r\n                            map[roomsInGame[i].x + candidates[x] + 1][roomsInGame[i].y-1] = 0\r\n                            map[roomsInGame[i].x + candidates[x]][roomsInGame[i].y-2] = 0\r\n                            map[roomsInGame[i].x + candidates[x] + 1][roomsInGame[i].y-2] = 0\r\n                            candidates = [];\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case 'e':\r\n                    if (roomsInGame[i].x + roomsInGame[i].sizex + 3 < maxx) {\r\n                        for (let roomRight = 0; roomRight < roomsInGame[i].sizey; roomRight+=2) {\r\n                            if (map[roomsInGame[i].x + roomsInGame[i].sizex + 3][roomsInGame[i].y + roomRight] < 1) {\r\n                                candidates.push(roomRight);\r\n                                //map[roomsInGame[i].x + roomsInGame[i].sizex + 3][roomsInGame[i].y + roomRight] = 2\r\n                            } else {\r\n                                if (candidates.length > 0) {\r\n                                    let x = randint(0, candidates.length-1);\r\n                                    map[roomsInGame[i].x + roomsInGame[i].sizex + 1][roomsInGame[i].y + candidates[x]] = 0\r\n                                    map[roomsInGame[i].x + roomsInGame[i].sizex + 2][roomsInGame[i].y + candidates[x]] = 0\r\n                                    map[roomsInGame[i].x + roomsInGame[i].sizex + 1][roomsInGame[i].y + candidates[x] + 1] = 0\r\n                                    map[roomsInGame[i].x + roomsInGame[i].sizex + 2][roomsInGame[i].y + candidates[x] + 1] = 0\r\n                                    candidates = [];\r\n                                }\r\n                            }\r\n                            \r\n                        }\r\n                        if (candidates.length > 0) {\r\n                            let x = randint(0, candidates.length-1);\r\n                            map[roomsInGame[i].x + roomsInGame[i].sizex + 1][roomsInGame[i].y + candidates[x]] = 0\r\n                            map[roomsInGame[i].x + roomsInGame[i].sizex + 2][roomsInGame[i].y + candidates[x]] = 0\r\n                            map[roomsInGame[i].x + roomsInGame[i].sizex + 1][roomsInGame[i].y + candidates[x] + 1] = 0\r\n                            map[roomsInGame[i].x + roomsInGame[i].sizex + 2][roomsInGame[i].y + candidates[x] + 1] = 0\r\n                            candidates = [];\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case 's':\r\n                    if (roomsInGame[i].y + 3 < maxy) {\r\n                        for (let roomBot = 0; roomBot < roomsInGame[i].sizex; roomBot+=2) {\r\n                            if (map[roomsInGame[i].x + roomBot][roomsInGame[i].y+3 + roomsInGame[i].sizey] < 1) {\r\n                                candidates.push(roomBot);\r\n                                //map[roomsInGame[i].x + roomBot][roomsInGame[i].y+3 + roomsInGame[i].sizey] = 2\r\n                            } else {\r\n                                if (candidates.length > 0) {\r\n                                    let x = randint(0, candidates.length-1);\r\n                                    map[roomsInGame[i].x + candidates[x]][roomsInGame[i].y+1 + roomsInGame[i].sizey] = 0\r\n                                    map[roomsInGame[i].x + candidates[x] + 1][roomsInGame[i].y+1 + roomsInGame[i].sizey] = 0\r\n                                    map[roomsInGame[i].x + candidates[x]][roomsInGame[i].y+2 + roomsInGame[i].sizey] = 0\r\n                                    map[roomsInGame[i].x + candidates[x] + 1][roomsInGame[i].y+2 + roomsInGame[i].sizey] = 0\r\n                                    candidates = [];\r\n                                }\r\n                            }\r\n                            \r\n                        }\r\n                        if (candidates.length > 0) {\r\n                            let x = randint(0, candidates.length-1);\r\n                            map[roomsInGame[i].x + candidates[x]][roomsInGame[i].y+1 + roomsInGame[i].sizey] = 0\r\n                            map[roomsInGame[i].x + candidates[x] + 1][roomsInGame[i].y+1 + roomsInGame[i].sizey] = 0\r\n                            map[roomsInGame[i].x + candidates[x]][roomsInGame[i].y+2 + roomsInGame[i].sizey] = 0\r\n                            map[roomsInGame[i].x + candidates[x] + 1][roomsInGame[i].y+2 + roomsInGame[i].sizey] = 0\r\n                            candidates = [];\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case 'w':\r\n                    if (roomsInGame[i].x - 3 > 0) {\r\n                        for (let roomLeft = 0; roomLeft < roomsInGame[i].sizey; roomLeft+=2) {\r\n                            if (map[roomsInGame[i].x - 3][roomsInGame[i].y + roomLeft] < 1) {\r\n                                candidates.push(roomLeft);\r\n                                //map[roomsInGame[i].x - 3][roomsInGame[i].y + roomLeft] = 2\r\n                            } else {\r\n                                if (candidates.length > 0) {\r\n                                    let x = randint(0, candidates.length-1);\r\n                                    map[roomsInGame[i].x - 1][roomsInGame[i].y + candidates[x]] = 0\r\n                                    map[roomsInGame[i].x - 2][roomsInGame[i].y + candidates[x]] = 0\r\n                                    map[roomsInGame[i].x - 1][roomsInGame[i].y + candidates[x] + 1] = 0\r\n                                    map[roomsInGame[i].x - 2][roomsInGame[i].y + candidates[x] + 1] = 0\r\n                                    candidates = [];\r\n                                }\r\n                            }\r\n                            \r\n                        }\r\n                        if (candidates.length > 0) {\r\n                            let x = randint(0, candidates.length-1);\r\n                            map[roomsInGame[i].x - 1][roomsInGame[i].y + candidates[x]] = 0\r\n                            map[roomsInGame[i].x - 2][roomsInGame[i].y + candidates[x]] = 0\r\n                            map[roomsInGame[i].x - 1][roomsInGame[i].y + candidates[x] + 1] = 0\r\n                            map[roomsInGame[i].x - 2][roomsInGame[i].y + candidates[x] + 1] = 0\r\n                            candidates = [];\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n            \r\n                default:\r\n                    i--;\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function generateDunMaze(maxx: number, maxy: number): number[][] {\r\n    let map = ones(maxx, maxy);\r\n    let rooms = 400;\r\n    let roomsInGame : room[] = [];\r\n    let path: path[] = [];\r\n    let deadEnds: coordenada[] = [];\r\n    \r\n    let reject = 0;\r\n    for (let i = 0; i < rooms; i++) {\r\n        let room = randomRoom(maxx, maxy);\r\n        for (let ri = room.x-1; ri <= room.x+room.sizex; ri++) {\r\n            for ( let rj = room.y-1; rj <= room.y+room.sizey; rj++) {\r\n                if (ri > maxx || rj > maxy) reject = 1;\r\n                else if (map[ri][rj] == 0) {\r\n                    ri = maxx;\r\n                    reject = 1;\r\n                }\r\n            }\r\n        }\r\n        if (reject != 1) {\r\n            roomsInGame.push(room);\r\n            for (let ri = room.x; ri <= room.x+room.sizex; ri++) {\r\n                for ( let rj = room.y; rj <= room.y+room.sizey; rj++) {\r\n                    map[ri][rj] = 0;\r\n                }\r\n            }\r\n        }\r\n        reject = 0;\r\n    }\r\n\r\n    for (let i = 1; i < maxx; i=i+4) {\r\n        for (let j = 1; j < maxy; j=j+4) {\r\n            if (map[i][j] == 1 && map[i+1][j] == 1 && map[i][j+1] == 1 && map[i+1][j+1] == 1) { // coordenada atual\r\n                path.push({\r\n                    x: i,\r\n                    y: j,\r\n                    dir: 'z',\r\n                    past: 'S'\r\n                })\r\n                digUp(path, map, maxx, maxy);\r\n            }\r\n            if (map[i][j] == 2) deadEnds.push({x: i, y: j});\r\n        }\r\n    }\r\n\r\n    openWalls(roomsInGame, map, maxx, maxy);\r\n    removeDeadEnds(deadEnds, map, maxx, maxy);\r\n    return map;\r\n}\r\n\r\nfunction removeDeadEnds(deadEnds: coordenada[], map: number[][], maxx: number, maxy: number) {\r\n    deadEnds.push({x: 1, y: 1});\r\n    let deadlen = deadEnds.length;\r\n    let count = 0;\r\n    for (let i = 0; i < deadlen; i = i + 1) {\r\n        let walls = 0;\r\n        if (deadEnds[i].x + 2 < maxx ) {\r\n            if (map[deadEnds[i].x + 2][deadEnds[i].y] == 1)\r\n                walls += 1;\r\n        } else walls += 1;\r\n\r\n        if (deadEnds[i].x - 2 > 0) {\r\n            if (map[deadEnds[i].x - 2][deadEnds[i].y] == 1)\r\n                walls += 1;\r\n        } else walls += 1;\r\n\r\n        if (deadEnds[i].y + 2 < maxy) {\r\n            if (map[deadEnds[i].x][deadEnds[i].y + 2] == 1)\r\n                walls += 1;\r\n        } else walls += 1;\r\n\r\n        if (deadEnds[i].y - 2 > 0) {\r\n            if (map[deadEnds[i].x][deadEnds[i].y - 2] == 1)\r\n                walls += 1;\r\n        } else walls += 1;\r\n\r\n        if (walls > 2) {\r\n            count += 1;\r\n            digBack(deadEnds[i], map, maxx, maxy);\r\n            map[deadEnds[i].x][deadEnds[i].y] = 1;\r\n        } else {\r\n            map[deadEnds[i].x][deadEnds[i].y] = 0;\r\n        }\r\n\r\n    }\r\n}\r\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n  config.method = config.method ? config.method.toLowerCase() : 'get';\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","import { MessageType } from \"./helper/messageType\";\r\nimport { Glyph } from \"./glyph\";\r\nimport { Entity } from \"./entity\";\r\nimport { Game } from \"./game\";\r\n\r\nexport class Messagelog {\r\n    messages: MessageType[];\r\n    x: number;\r\n    width: number;\r\n    height: number;\r\n    game: Game;\r\n\r\n    constructor(x: number, width: number, height: number, game: Game) {\r\n        this.messages = [];\r\n        this.x = x;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.game = game;\r\n    }\r\n\r\n    addMessage(message: MessageType) {\r\n        if (this.messages.length == this.height) {\r\n            this.messages.shift();\r\n        }\r\n        this.messages.push(message);\r\n    }\r\n\r\n    newMessage(actor: Entity, type: string, target1: Entity = undefined, target2: Entity = undefined, extrainfo: string = '') {\r\n        let newMessage: MessageType = {\r\n            message: '',\r\n            type: type,\r\n            color0: actor.glyph.foreground,\r\n            color1: target1 == undefined ? [255,255,255] : target1.glyph.foreground,\r\n            color2: target2 == undefined ? [255,255,255] : target2.glyph.foreground,\r\n        }\r\n        switch (this.game.lang) {\r\n            case \"En\":\r\n                    if (type == 'pickup') {\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} got: %c{1}\" + target1.name + \"%c{base} !\";\r\n                    }\r\n                    if (type == 'switchEquip') {\r\n                        newMessage.color2 = actor.equipment.glyph.foreground;\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} switched: %c{1}\" + target1.name.toString() + \"%c{base} for: %c{2}\"+ target2.name.toString() +\" %c{base}!\";\r\n                    }\r\n                    if (type == 'fight') {\r\n                        let damage = extrainfo;\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} hit %c{1}\" + target1.name + \"%c{base} and dealt \"+ damage + \" damage! (\" +target1.fighter.hp.toFixed(2) +\")\";\r\n                    }\r\n                    if (type == 'fightZeroDamage') {\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} hit %c{1}\" + target1.name + \"%c{base}, but it was ineffective!\";\r\n                    }\r\n                    if (type == 'skill') {\r\n                        let damage = extrainfo;\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} used %c{2}\" + target2.name + \"%c{base}, on %c{1}\" + target1.name + \"%c{base} and caused \"+ damage + \" damage! (\" +target1.fighter.hp.toFixed(2) +\")\";\r\n                    }\r\n                    if (type == 'skillZeroDamage') {\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} hit %c{2}\" + target2.name + \"%c{base}, but it was ineffective!\";\r\n                    }\r\n                    if (type == 'potion') {\r\n                        newMessage.color1 = [0,255,120];\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} used a %c{1}Potion%c{base}, regenerating \" + (actor.fighter.max_hp()*0.35).toFixed(0) + \" of hp!\";\r\n                    }\r\n                    if (type == 'potionZero') {\r\n                        newMessage.color1 = [0,255,120];\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} have no %c{1}Potion%c{base} to use!\";\r\n                    }\r\n                    if (type == 'death') {\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{1} died\";\r\n                    }\r\n\r\n                break;\r\n            case \"Pt\":\r\n                    if (type == 'pickup') {\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} empunhou: %c{1}\" + target1.name + \"%c{base} !\";\r\n                    }\r\n                    if (type == 'switchEquip') {\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} trocou: %c{1}\" + target1.name.toString() + \"%c{base} por: %c{2}\"+ actor.equipment.name.toString() +\" %c{base}!\";\r\n                    }\r\n                    if (type == 'fight') {\r\n                        let damage = extrainfo;\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} bateu em %c{1}\" + target1.name + \"%c{base} com \"+ damage + \" de dano! (\" +target1.fighter.hp.toFixed(2) +\")\";\r\n                    }\r\n                    if (type == 'fightZeroDamage') {\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} bateu em %c{1}\" + target1.name + \"%c{base}, mas não causou dano!\";\r\n                    }\r\n                    if (type == 'skill') {\r\n                        let damage = extrainfo;\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} usou %c{2}\" + target2.name + \"%c{base} em %c{1}\" + target1.name + \"%c{base} com \"+ damage + \" de dano! (\" +target1.fighter.hp.toFixed(2) +\")\";\r\n                    }\r\n                    if (type == 'skillZeroDamage') {\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} bateu em %c{2}\" + target2.name + \"%c{base}, mas não causou dano!\";\r\n                    }\r\n                    if (type == 'potion') {\r\n                        newMessage.color1 = [0,255,120];\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} usou uma %c{1}Poção%c{base}, regenerando \" + (actor.fighter.max_hp()*0.35).toFixed(0) + \" de vida!\";\r\n                    }\r\n                    if (type == 'potionZero') {\r\n                        newMessage.color1 = [0,255,120];\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{base} não tem %c{1}Poção%c{base} pra usar!\";\r\n                    }\r\n                    if (type == 'death') {\r\n                        newMessage.message = \"%c{0}\" + actor.name + \"%c{1} morreu\";\r\n                    }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.addMessage(newMessage);\r\n        \r\n    }\r\n}","export function Logo() {\r\n    let i = [\"%c{black}.%c{}.  . `  .: . :. : .  . :.  .  . . .     . .    '    '' .  .  . ..  \",\r\n\"%c{black}.%c{}.  :` . :   .  .'.' '....xxxxx...,'. '   ' .     ..\",\r\n\"%c{black}.%c{} ` . : . .' :  . ..XXXXXXXXXXXXXXXXXXXXx.    `     . \",\r\n\".    .  . . .   ..XXXXXXXXWWWWWWWWWWWWWWWWXX.  .     .     \",\r\n\"%c{black}.%c{}' : . : .  ...XXXXXWWW'  W88N88@888888WWWWWXX.   .   .       . .\",\r\n\". ' .   :...XXXXXXWWW'  M88N88GGGGGG88888M 'WMBX.          .   ..  :\",\r\n\"%c{black}.%c{}:  ..XXXXXXXXWWW'     M88888WWRWWW W8oo88M   WWMX.     .    :    .\",\r\n\"%c{black}.%c{} XXXXXXXXXXXXWW'       WN8888WWWW   WW8@@@8M    BMBRX.         .  : :\",\r\n\".XXXXXXXX=MMWW':  .      W8N888WWWW ,WW88888W      XRBRXX.  .       .\",\r\n\"%c{black}.%c{}.'XXXXXMM::::. .        W8@889WWWWWM8@8N8W    . . :RRXx.    .\",\r\n\"%c{black}.%c{} ``.''  MMM::.:.  .      W888N89999888@8W   . . ::::'RXV    .  :\",\r\n\".      ..'''MMMm::.  .      WW888N88888WW  .  . mmMMMMMRXx\",\r\n\"%c{black}.%c{}.'.        ''MMmm .  .       WWWWWWW   . :. :,miMM'''  : ''`    .\",\r\n\".             .   ''MMMMmm . .  .  .   ._,mMMMM'''  :  ' .  :\",\r\n\"%c{black}.%c{}    .                  ''MMMMMMMMMMMMM''' .  : . '   .        .\",\r\n\"%c{black}.%c{}  .           .     .    .                      .         .\",\r\n\".                                   .          .         .\"];\r\n    return i;\r\n}\r\n\r\n"],"sourceRoot":""}